{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","src/js/auth-modal.js","src/js/scroll-up.js","src/js/darkTheme.js","src/js/support.js","src/js/support/fund-array.js","node_modules/@parcel/runtime-js/lib/runtime-53aa9fd99ee9c2f3.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@parcel/runtime-js/lib/runtime-c6cb40bd3e08b576.js","node_modules/@parcel/runtime-js/lib/runtime-021ac93a2b408f7a.js","node_modules/@parcel/runtime-js/lib/runtime-f5bb93b1ec6a9855.js","node_modules/@parcel/runtime-js/lib/runtime-f9bce000bb6f4b34.js","node_modules/@parcel/runtime-js/lib/runtime-87cf792d4e80c455.js","node_modules/@parcel/runtime-js/lib/runtime-c89875652cb3b315.js","node_modules/@parcel/runtime-js/lib/runtime-26a97707a98064ac.js","node_modules/@parcel/runtime-js/lib/runtime-e84cb2f7ab7d7756.js","node_modules/@parcel/runtime-js/lib/runtime-b138d86238c02f5b.js","node_modules/@parcel/runtime-js/lib/runtime-b6b83f2fba3facf9.js","node_modules/@parcel/runtime-js/lib/runtime-20d48c66f61274ec.js","node_modules/@parcel/runtime-js/lib/runtime-dc61364b9e243f4c.js","node_modules/@parcel/runtime-js/lib/runtime-c56bd4a4df7241a9.js","node_modules/@parcel/runtime-js/lib/runtime-0c4c33a32a8b6644.js","node_modules/@parcel/runtime-js/lib/runtime-17c957f3012d0ae5.js","node_modules/@parcel/runtime-js/lib/runtime-feb4c82889d869ea.js","node_modules/@parcel/runtime-js/lib/runtime-5583d9c96e877107.js","src/js/support/markup-support.js","node_modules/swiper/swiper.esm.js","node_modules/swiper/core/core.js","node_modules/ssr-window/ssr-window.esm.js","node_modules/swiper/shared/utils.js","node_modules/swiper/shared/get-support.js","node_modules/swiper/shared/get-device.js","node_modules/swiper/shared/get-browser.js","node_modules/swiper/core/modules/resize/resize.js","node_modules/swiper/core/modules/observer/observer.js","node_modules/swiper/core/events-emitter.js","node_modules/swiper/core/update/index.js","node_modules/swiper/core/update/updateSize.js","node_modules/swiper/core/update/updateSlides.js","node_modules/swiper/core/update/updateAutoHeight.js","node_modules/swiper/core/update/updateSlidesOffset.js","node_modules/swiper/core/update/updateSlidesProgress.js","node_modules/swiper/core/update/updateProgress.js","node_modules/swiper/core/update/updateSlidesClasses.js","node_modules/swiper/core/update/updateActiveIndex.js","node_modules/swiper/shared/process-lazy-preloader.js","node_modules/swiper/core/update/updateClickedSlide.js","node_modules/swiper/core/translate/index.js","node_modules/swiper/core/translate/getTranslate.js","node_modules/swiper/core/translate/setTranslate.js","node_modules/swiper/core/translate/minTranslate.js","node_modules/swiper/core/translate/maxTranslate.js","node_modules/swiper/core/translate/translateTo.js","node_modules/swiper/core/transition/index.js","node_modules/swiper/core/transition/setTransition.js","node_modules/swiper/core/transition/transitionStart.js","node_modules/swiper/core/transition/transitionEmit.js","node_modules/swiper/core/transition/transitionEnd.js","node_modules/swiper/core/slide/index.js","node_modules/swiper/core/slide/slideTo.js","node_modules/swiper/core/slide/slideToLoop.js","node_modules/swiper/core/slide/slideNext.js","node_modules/swiper/core/slide/slidePrev.js","node_modules/swiper/core/slide/slideReset.js","node_modules/swiper/core/slide/slideToClosest.js","node_modules/swiper/core/slide/slideToClickedSlide.js","node_modules/swiper/core/loop/index.js","node_modules/swiper/core/loop/loopCreate.js","node_modules/swiper/core/loop/loopFix.js","node_modules/swiper/core/loop/loopDestroy.js","node_modules/swiper/core/grab-cursor/index.js","node_modules/swiper/core/grab-cursor/setGrabCursor.js","node_modules/swiper/core/grab-cursor/unsetGrabCursor.js","node_modules/swiper/core/events/index.js","node_modules/swiper/core/events/onTouchStart.js","node_modules/swiper/core/events/onTouchMove.js","node_modules/swiper/core/events/onTouchEnd.js","node_modules/swiper/core/events/onResize.js","node_modules/swiper/core/events/onClick.js","node_modules/swiper/core/events/onScroll.js","node_modules/swiper/core/events/onLoad.js","node_modules/swiper/core/breakpoints/index.js","node_modules/swiper/core/breakpoints/setBreakpoint.js","node_modules/swiper/core/breakpoints/getBreakpoint.js","node_modules/swiper/core/classes/index.js","node_modules/swiper/core/classes/addClasses.js","node_modules/swiper/core/classes/removeClasses.js","node_modules/swiper/core/check-overflow/index.js","node_modules/swiper/core/defaults.js","node_modules/swiper/core/moduleExtendParams.js","node_modules/swiper/modules/virtual/virtual.js","node_modules/swiper/modules/keyboard/keyboard.js","node_modules/swiper/modules/mousewheel/mousewheel.js","node_modules/swiper/modules/navigation/navigation.js","node_modules/swiper/shared/create-element-if-not-defined.js","node_modules/swiper/modules/pagination/pagination.js","node_modules/swiper/shared/classes-to-selector.js","node_modules/swiper/modules/scrollbar/scrollbar.js","node_modules/swiper/modules/parallax/parallax.js","node_modules/swiper/modules/zoom/zoom.js","node_modules/swiper/modules/controller/controller.js","node_modules/swiper/modules/a11y/a11y.js","node_modules/swiper/modules/history/history.js","node_modules/swiper/modules/hash-navigation/hash-navigation.js","node_modules/swiper/modules/autoplay/autoplay.js","node_modules/swiper/modules/thumbs/thumbs.js","node_modules/swiper/modules/free-mode/free-mode.js","node_modules/swiper/modules/manipulation/manipulation.js","node_modules/swiper/modules/manipulation/methods/appendSlide.js","node_modules/swiper/modules/manipulation/methods/prependSlide.js","node_modules/swiper/modules/manipulation/methods/addSlide.js","node_modules/swiper/modules/manipulation/methods/removeSlide.js","node_modules/swiper/modules/manipulation/methods/removeAllSlides.js","node_modules/swiper/modules/effect-fade/effect-fade.js","node_modules/swiper/shared/effect-init.js","node_modules/swiper/shared/effect-target.js","node_modules/swiper/shared/effect-virtual-transition-end.js","node_modules/swiper/modules/effect-cube/effect-cube.js","node_modules/swiper/modules/effect-flip/effect-flip.js","node_modules/swiper/shared/create-shadow.js","node_modules/swiper/modules/effect-coverflow/effect-coverflow.js","node_modules/swiper/modules/effect-creative/effect-creative.js","node_modules/swiper/modules/effect-cards/effect-cards.js","src/js/header.js","node_modules/@parcel/runtime-js/lib/runtime-2144b52d018ce473.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","const refs = {\n  openAuthorizationBtn: document.querySelector('button.auth__modal-open-js'),\n  closeAuthorizationBtn: document.querySelector('button.auth__modal-close-js'),\n  modalAuthorization: document.querySelector('div.auth__modal-js'),\n  buttonSignUp: document.querySelector('.form__btn-up'),\n  buttonSignIn: document.querySelector('.form__btn-in'),\n  buttonSubmit: document.querySelector('.form__btn'),\n  formInputs: document.querySelector('div.form__render'),\n  inputName: document.querySelector('.form__input-name'),\n  labelName: document.querySelector('.form__label-name'),\n  inputMail: document.querySelector('.form__input-mail'),\n  labelMail: document.querySelector('.form__label-mail'),\n  inputPassword: document.querySelector('.form__input-password'),\n  labelPassword: document.querySelector('.form__label-password'),\n};\n\nrefs.openAuthorizationBtn.addEventListener('click', toggleModal);\nrefs.closeAuthorizationBtn.addEventListener('click', toggleModal);\n\nfunction toggleModal() {\n  refs.modalAuthorization.classList.toggle('is-hidden');\n}\n\nrefs.buttonSignIn.addEventListener('click', onButtonSignIn);\nrefs.buttonSignUp.addEventListener('click', onButtonSignUp);\n\nfunction onButtonSignIn() {\n  refs.buttonSignUp.classList.remove('active');\n  refs.buttonSignIn.classList.add('active');\n  refs.buttonSubmit.textContent = 'Sign in';\n  refs.formInputs.innerHTML = '';\n}\n\nfunction onButtonSignUp() {\n  refs.buttonSignIn.classList.remove('active');\n  refs.buttonSignUp.classList.add('active');\n  refs.buttonSubmit.textContent = 'Sign up';\n  refs.formInputs.innerHTML = `<div class=\"form__field\">\n          <input\n            type=\"text\"\n            class=\"form__input form__input-name\"\n            name=\"name\"\n            pattern=\"[a-zA-Z\\u0400-\\u04ff]{3,30}\"\n            required\n          />\n          <label for=\"name\" class=\"form__label form__label-name\">Name</label>\n        </div>`;\n}\n\nrefs.inputName.addEventListener('input', onInputName);\nrefs.inputMail.addEventListener('input', onInputMail);\nrefs.inputPassword.addEventListener('input', onInputPassword);\n\nfunction onInputName() {\n  if (refs.inputName.value) {\n    refs.labelName.classList.add('checked');\n  } else {\n    refs.labelName.classList.remove('checked');\n  }\n}\n\nfunction onInputMail() {\n  if (refs.inputMail.value) {\n    refs.labelMail.classList.add('checked');\n  } else {\n    refs.labelMail.classList.remove('checked');\n  }\n}\n\nfunction onInputPassword() {\n  if (refs.inputPassword.value) {\n    refs.labelPassword.classList.add('checked');\n  } else {\n    refs.labelPassword.classList.remove('checked');\n  }\n}\n","\n\nconst offset = 100;\nconst scrollUp = document.querySelector(\".scroll-up\");\nconst scrollUpSvgPath = document.querySelector(\".scroll-up__svg-path\");\nconst pathLength = scrollUpSvgPath.getTotalLength();\n\n\nscrollUpSvgPath.style.strokeDasharray = `${pathLength} ${pathLength}`;\nscrollUpSvgPath.style.transition = \"stroke-dashoffset 20ms\";\n\n\n\nconst getTop = () => window.pageYOffset || document.documentElement.scrollTop;\n\n\n// updateDashoffset\nconst updateDashoffset = () => {\n    const height = document.documentElement.scrollHeight - window.innerHeight;\n    const dashoffset = pathLength - (getTop() * pathLength / height);\n    scrollUpSvgPath.style.strokeDashoffset = dashoffset;\n};\n\n\n// onScroll\nwindow.addEventListener(\"scroll\", () => {\n    updateDashoffset();\n    if (getTop() > offset) {\n        scrollUp.classList.add(\"scroll-up--active\");\n    } else {\n        scrollUp.classList.remove(\"scroll-up--active\");\n}\n});\n\n\n// click\nscrollUp.addEventListener(\"click\", () => {\n    window.scrollTo({\n        top: 0,\n        behavior: \"smooth\"\n    });\n});\n\n\n\n\n// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n//     весь  попередный код\n// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n\n//     window.onload = () => {\n//     window.onscroll = function (e) {\n//         let winY = window.scrollY;\n//         if (winY > 300) {\n//             progressBar();\n//             scrollbarAnimation();\n//             winY = null;\n//         }\n//     };\n//     const scrollBtn = document.querySelector('.isShowBtn');\n//     window.onscroll = () => {\n//         if (window.scrollY > 400) {\n//             scrollBtn.classList.remove('isShowBtn_hide');\n//         } else if (window.scrollY < 400) {\n//             scrollBtn.classList.add('isShowBtn_hide');\n//         }\n//     };\n//     scrollBtn.onclick = () => {\n//         window.scrollTo(0, 0);\n//     }\n// };\n\n\n","const switchDayNight = document.querySelector('.mode-switch');\nconst bookNameArray = document.querySelectorAll('.book-name');\n\nfunction checkDarkModeStatus() {\n  if (localStorage.getItem('darkMode') === 'true') {\n    addDarkTheme();\n    switchDayNight.checked = true;\n  } else {\n    removeDarkTheme();\n    switchDayNight.checked = false;\n  }\n}\n\nswitchDayNight.addEventListener('change', () => {\n  if (switchDayNight.checked) {\n    addDarkTheme();\n  } else {\n    removeDarkTheme();\n  }\n  localStorage.setItem('darkMode', switchDayNight.checked);\n});\n\nfunction addDarkTheme() {\n  document.body.classList.add('dark');\n  document.body.style.backgroundColor = '#202024';\n  document.querySelector('header').style.backgroundColor = '#111111';\n\n  bookNameArray.forEach(book => {\n    book.style.color = 'rgba(255, 255, 255, 0.6)';\n  });\n}\n\nfunction removeDarkTheme() {\n  document.body.classList.remove('dark');\n  document.body.style.backgroundColor = '#f6f6f6';\n  document.querySelector('header').style.backgroundColor = '#FFFFFF';\n\n  bookNameArray.forEach(book => {\n    book.style.color = 'rgba(17, 17, 17, 0.6)';\n  });\n}\n\ncheckDarkModeStatus();\n","import { fundArray } from './support/fund-array';\nimport { markupCardFund } from './support/markup-support';\nimport Swiper from 'swiper';\n\nconst supportListEl = document.querySelector('.support__list-js');\nconst btnSwiperEl = document.querySelector('.swiper-button-next');\n\nlet position = 0;\n\nconst addLeadingZero = value => {\n  return String(value).padStart(2, '0');\n};\n\nconst markupSetFunds = fundArray\n  .map((el, i) => {\n    position = addLeadingZero(i + 1);\n\n    return markupCardFund(el, position);\n  })\n  .join('');\n\nsupportListEl.innerHTML = markupSetFunds;\n\nconst swiper = new Swiper('.swiper', {\n  direction: 'vertical',\n  spaceBetween: 20,\n  slidesPerView: 'auto',\n  rewind: true,\n\n  navigation: {\n    nextEl: '.swiper-button-next',\n  },\n\n  plugins: {\n    scrollContainer: true,\n  },\n});\n\nswiper.update();\n\nbtnSwiperEl.addEventListener('click', () => {\n  swiper.slideNext();\n});\n","export const fundArray = [\n  {\n    title: 'Save the Children',\n    url: 'https://www.savethechildren.net/what-we-do/emergencies/ukraine-crisis',\n    img: require('../../images/support/fund1@1x.png'),\n    img2: require('../../images/support/fund1@2x.png'),\n  },\n  {\n    title: 'Project HOPE',\n    url: 'https://www.projecthope.org/country/ukraine/',\n    img: require('../../images/support/fund2@1x.png'),\n    img2: require('../../images/support/fund2@2x.png'),\n  },\n  {\n    title: 'UNITED24',\n    url: 'https://u24.gov.ua/uk',\n    img: require('../../images/support/fund3@1x.png'),\n    img2: require('../../images/support/fund3@2x.png'),\n  },\n  {\n    title: 'International Medical Corps',\n    url: 'https://internationalmedicalcorps.org/country/ukraine/',\n    img: require('../../images/support/fund4@1x.png'),\n    img2: require('../../images/support/fund4@2x.png'),\n  },\n  {\n    title: 'Medicins Sans Frontieres',\n    url: 'https://www.msf.org/ukraine',\n    img: require('../../images/support/fund5@1x.png'),\n    img2: require('../../images/support/fund5@2x.png'),\n  },\n  {\n    title: 'RAZOM',\n    url: 'https://www.razomforukraine.org/',\n    img: require('../../images/support/fund6@1x.png'),\n    img2: require('../../images/support/fund6@2x.png'),\n  },\n  {\n    title: 'Action against hunger',\n    url: 'https://www.actionagainsthunger.org/location/europe/ukraine/',\n    img: require('../../images/support/fund7@1x.png'),\n    img2: require('../../images/support/fund7@2x.png'),\n  },\n  {\n    title: 'World vision',\n    url: 'https://www.wvi.org/emergencies/ukraine',\n    img: require('../../images/support/fund8@1x.png'),\n    img2: require('../../images/support/fund8@2x.png'),\n  },\n  {\n    title: 'Serhiy Prytula Charity Foundation',\n    url: 'https://prytulafoundation.org/en',\n    img: require('../../images/support/fund9@1x.png'),\n    img2: require('../../images/support/fund9@2x.png'),\n  },\n];\n","module.exports = require('./helpers/bundle-url').getBundleURL('2FRjq') + require('./helpers/bundle-manifest').resolve(\"6KBcx\");","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","module.exports = require('./helpers/bundle-url').getBundleURL('2FRjq') + require('./helpers/bundle-manifest').resolve(\"bipQf\");","module.exports = require('./helpers/bundle-url').getBundleURL('2FRjq') + require('./helpers/bundle-manifest').resolve(\"8KuVH\");","module.exports = require('./helpers/bundle-url').getBundleURL('2FRjq') + require('./helpers/bundle-manifest').resolve(\"aAzYn\");","module.exports = require('./helpers/bundle-url').getBundleURL('2FRjq') + require('./helpers/bundle-manifest').resolve(\"6tGJv\");","module.exports = require('./helpers/bundle-url').getBundleURL('2FRjq') + require('./helpers/bundle-manifest').resolve(\"3subC\");","module.exports = require('./helpers/bundle-url').getBundleURL('2FRjq') + require('./helpers/bundle-manifest').resolve(\"eQAOO\");","module.exports = require('./helpers/bundle-url').getBundleURL('2FRjq') + require('./helpers/bundle-manifest').resolve(\"dWQcX\");","module.exports = require('./helpers/bundle-url').getBundleURL('2FRjq') + require('./helpers/bundle-manifest').resolve(\"0jBAt\");","module.exports = require('./helpers/bundle-url').getBundleURL('2FRjq') + require('./helpers/bundle-manifest').resolve(\"i95HH\");","module.exports = require('./helpers/bundle-url').getBundleURL('2FRjq') + require('./helpers/bundle-manifest').resolve(\"jOB6N\");","module.exports = require('./helpers/bundle-url').getBundleURL('2FRjq') + require('./helpers/bundle-manifest').resolve(\"kDFGr\");","module.exports = require('./helpers/bundle-url').getBundleURL('2FRjq') + require('./helpers/bundle-manifest').resolve(\"awhUR\");","module.exports = require('./helpers/bundle-url').getBundleURL('2FRjq') + require('./helpers/bundle-manifest').resolve(\"hWVHo\");","module.exports = require('./helpers/bundle-url').getBundleURL('2FRjq') + require('./helpers/bundle-manifest').resolve(\"4rwVK\");","module.exports = require('./helpers/bundle-url').getBundleURL('2FRjq') + require('./helpers/bundle-manifest').resolve(\"kGDcZ\");","module.exports = require('./helpers/bundle-url').getBundleURL('2FRjq') + require('./helpers/bundle-manifest').resolve(\"1BvA6\");","module.exports = require('./helpers/bundle-url').getBundleURL('2FRjq') + require('./helpers/bundle-manifest').resolve(\"jHOae\");","export const markupCardFund = (\n  { title, url, img, img2 },\n  position\n) => `<li class=\"support__list-item swiper-slide\">\n  <p class=\"support__number\">${position}</p>\n  <a class=\"support__link\" href=\"${url}\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">\n    <img\n      srcset=\"${img} 1x, ${img2} 2x\"\n      src=\"${img}\"\n      alt=\"${title}\"\n      width=\"149\"\n      loading=\"lazy\"\n    />\n  </a>\n</li>`;\n","/**\n * Swiper 9.2.2\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2023 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: April 14, 2023\n */\n\nexport { default as Swiper, default } from './core/core.js';\nexport { default as Virtual } from './modules/virtual/virtual.js';\nexport { default as Keyboard } from './modules/keyboard/keyboard.js';\nexport { default as Mousewheel } from './modules/mousewheel/mousewheel.js';\nexport { default as Navigation } from './modules/navigation/navigation.js';\nexport { default as Pagination } from './modules/pagination/pagination.js';\nexport { default as Scrollbar } from './modules/scrollbar/scrollbar.js';\nexport { default as Parallax } from './modules/parallax/parallax.js';\nexport { default as Zoom } from './modules/zoom/zoom.js';\nexport { default as Controller } from './modules/controller/controller.js';\nexport { default as A11y } from './modules/a11y/a11y.js';\nexport { default as History } from './modules/history/history.js';\nexport { default as HashNavigation } from './modules/hash-navigation/hash-navigation.js';\nexport { default as Autoplay } from './modules/autoplay/autoplay.js';\nexport { default as Thumbs } from './modules/thumbs/thumbs.js';\nexport { default as FreeMode } from './modules/free-mode/free-mode.js';\nexport { default as Grid } from './modules/grid/grid.js';\nexport { default as Manipulation } from './modules/manipulation/manipulation.js';\nexport { default as EffectFade } from './modules/effect-fade/effect-fade.js';\nexport { default as EffectCube } from './modules/effect-cube/effect-cube.js';\nexport { default as EffectFlip } from './modules/effect-flip/effect-flip.js';\nexport { default as EffectCoverflow } from './modules/effect-coverflow/effect-coverflow.js';\nexport { default as EffectCreative } from './modules/effect-creative/effect-creative.js';\nexport { default as EffectCards } from './modules/effect-cards/effect-cards.js';","/* eslint no-param-reassign: \"off\" */\nimport { getDocument } from 'ssr-window';\nimport { extend, deleteProps, createElement, elementChildren, elementStyle, elementIndex } from '../shared/utils.js';\nimport { getSupport } from '../shared/get-support.js';\nimport { getDevice } from '../shared/get-device.js';\nimport { getBrowser } from '../shared/get-browser.js';\nimport Resize from './modules/resize/resize.js';\nimport Observer from './modules/observer/observer.js';\nimport eventsEmitter from './events-emitter.js';\nimport update from './update/index.js';\nimport translate from './translate/index.js';\nimport transition from './transition/index.js';\nimport slide from './slide/index.js';\nimport loop from './loop/index.js';\nimport grabCursor from './grab-cursor/index.js';\nimport events from './events/index.js';\nimport breakpoints from './breakpoints/index.js';\nimport classes from './classes/index.js';\nimport checkOverflow from './check-overflow/index.js';\nimport defaults from './defaults.js';\nimport moduleExtendParams from './moduleExtendParams.js';\nimport { processLazyPreloader, preload } from '../shared/process-lazy-preloader.js';\nconst prototypes = {\n  eventsEmitter,\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  events,\n  breakpoints,\n  checkOverflow,\n  classes\n};\nconst extendedDefaults = {};\nclass Swiper {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n    params = extend({}, params);\n    if (el && !params.el) params.el = el;\n    const document = getDocument();\n    if (params.el && typeof params.el === 'string' && document.querySelectorAll(params.el).length > 1) {\n      const swipers = [];\n      document.querySelectorAll(params.el).forEach(containerEl => {\n        const newParams = extend({}, params, {\n          el: containerEl\n        });\n        swipers.push(new Swiper(newParams));\n      });\n      // eslint-disable-next-line no-constructor-return\n      return swipers;\n    }\n\n    // Swiper Instance\n    const swiper = this;\n    swiper.__swiper__ = true;\n    swiper.support = getSupport();\n    swiper.device = getDevice({\n      userAgent: params.userAgent\n    });\n    swiper.browser = getBrowser();\n    swiper.eventsListeners = {};\n    swiper.eventsAnyListeners = [];\n    swiper.modules = [...swiper.__modules__];\n    if (params.modules && Array.isArray(params.modules)) {\n      swiper.modules.push(...params.modules);\n    }\n    const allModulesParams = {};\n    swiper.modules.forEach(mod => {\n      mod({\n        params,\n        swiper,\n        extendParams: moduleExtendParams(params, allModulesParams),\n        on: swiper.on.bind(swiper),\n        once: swiper.once.bind(swiper),\n        off: swiper.off.bind(swiper),\n        emit: swiper.emit.bind(swiper)\n      });\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = extend({}, defaults, allModulesParams);\n\n    // Extend defaults with passed params\n    swiper.params = extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = extend({}, swiper.params);\n    swiper.passedParams = extend({}, params);\n\n    // add event listeners\n    if (swiper.params && swiper.params.on) {\n      Object.keys(swiper.params.on).forEach(eventName => {\n        swiper.on(eventName, swiper.params.on[eventName]);\n      });\n    }\n    if (swiper.params && swiper.params.onAny) {\n      swiper.onAny(swiper.params.onAny);\n    }\n\n    // Extend Swiper\n    Object.assign(swiper, {\n      enabled: swiper.params.enabled,\n      el,\n      // Classes\n      classNames: [],\n      // Slides\n      slides: [],\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n      //\n      isBeginning: true,\n      isEnd: false,\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n      cssOverflowAdjustment() {\n        // Returns 0 unless `translate` is > 2**23\n        // Should be subtracted from css values to prevent overflow\n        return Math.trunc(this.translate / 2 ** 23) * 2 ** 23;\n      },\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n      // Touch Events\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        focusableElements: swiper.params.focusableElements,\n        // Last click time\n        lastClickTime: 0,\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        startMoving: undefined,\n        evCache: []\n      },\n      // Clicks\n      allowClick: true,\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0\n      },\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0\n    });\n    swiper.emit('_swiper');\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    // eslint-disable-next-line no-constructor-return\n    return swiper;\n  }\n  getSlideIndex(slideEl) {\n    const {\n      slidesEl,\n      params\n    } = this;\n    const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n    const firstSlideIndex = elementIndex(slides[0]);\n    return elementIndex(slideEl) - firstSlideIndex;\n  }\n  getSlideIndexByData(index) {\n    return this.getSlideIndex(this.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === index)[0]);\n  }\n  recalcSlides() {\n    const swiper = this;\n    const {\n      slidesEl,\n      params\n    } = swiper;\n    swiper.slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  }\n  enable() {\n    const swiper = this;\n    if (swiper.enabled) return;\n    swiper.enabled = true;\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n    swiper.emit('enable');\n  }\n  disable() {\n    const swiper = this;\n    if (!swiper.enabled) return;\n    swiper.enabled = false;\n    if (swiper.params.grabCursor) {\n      swiper.unsetGrabCursor();\n    }\n    swiper.emit('disable');\n  }\n  setProgress(progress, speed) {\n    const swiper = this;\n    progress = Math.min(Math.max(progress, 0), 1);\n    const min = swiper.minTranslate();\n    const max = swiper.maxTranslate();\n    const current = (max - min) * progress + min;\n    swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  emitContainerClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const cls = swiper.el.className.split(' ').filter(className => {\n      return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n    });\n    swiper.emit('_containerClasses', cls.join(' '));\n  }\n  getSlideClasses(slideEl) {\n    const swiper = this;\n    if (swiper.destroyed) return '';\n    return slideEl.className.split(' ').filter(className => {\n      return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\n    }).join(' ');\n  }\n  emitSlidesClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const updates = [];\n    swiper.slides.forEach(slideEl => {\n      const classNames = swiper.getSlideClasses(slideEl);\n      updates.push({\n        slideEl,\n        classNames\n      });\n      swiper.emit('_slideClass', slideEl, classNames);\n    });\n    swiper.emit('_slideClasses', updates);\n  }\n  slidesPerViewDynamic(view = 'current', exact = false) {\n    const swiper = this;\n    const {\n      params,\n      slides,\n      slidesGrid,\n      slidesSizesGrid,\n      size: swiperSize,\n      activeIndex\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      // eslint-disable-next-line\n      if (view === 'current') {\n        for (let i = activeIndex + 1; i < slides.length; i += 1) {\n          const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      } else {\n        // previous\n        for (let i = activeIndex - 1; i >= 0; i -= 1) {\n          const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      }\n    }\n    return spv;\n  }\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const {\n      snapGrid,\n      params\n    } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      }\n    });\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode && swiper.params.freeMode.enabled) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n      return swiper;\n    }\n    swiper.el.classList.remove(`${swiper.params.containerModifierClass}${currentDirection}`);\n    swiper.el.classList.add(`${swiper.params.containerModifierClass}${newDirection}`);\n    swiper.emitContainerClasses();\n    swiper.params.direction = newDirection;\n    swiper.slides.forEach(slideEl => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n    return swiper;\n  }\n  changeLanguageDirection(direction) {\n    const swiper = this;\n    if (swiper.rtl && direction === 'rtl' || !swiper.rtl && direction === 'ltr') return;\n    swiper.rtl = direction === 'rtl';\n    swiper.rtlTranslate = swiper.params.direction === 'horizontal' && swiper.rtl;\n    if (swiper.rtl) {\n      swiper.el.classList.add(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'rtl';\n    } else {\n      swiper.el.classList.remove(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'ltr';\n    }\n    swiper.update();\n  }\n  mount(element) {\n    const swiper = this;\n    if (swiper.mounted) return true;\n\n    // Find el\n    let el = element || swiper.params.el;\n    if (typeof el === 'string') {\n      el = document.querySelector(el);\n    }\n    if (!el) {\n      return false;\n    }\n    el.swiper = swiper;\n    if (el.shadowEl) {\n      swiper.isElement = true;\n    }\n    const getWrapperSelector = () => {\n      return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\n    };\n    const getWrapper = () => {\n      if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n        const res = el.shadowRoot.querySelector(getWrapperSelector());\n        // Children needs to return slot items\n        return res;\n      }\n      return elementChildren(el, getWrapperSelector())[0];\n    };\n    // Find Wrapper\n    let wrapperEl = getWrapper();\n    if (!wrapperEl && swiper.params.createElements) {\n      wrapperEl = createElement('div', swiper.params.wrapperClass);\n      el.append(wrapperEl);\n      elementChildren(el, `.${swiper.params.slideClass}`).forEach(slideEl => {\n        wrapperEl.append(slideEl);\n      });\n    }\n    Object.assign(swiper, {\n      el,\n      wrapperEl,\n      slidesEl: swiper.isElement ? el : wrapperEl,\n      mounted: true,\n      // RTL\n      rtl: el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl',\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl'),\n      wrongRTL: elementStyle(wrapperEl, 'display') === '-webkit-box'\n    });\n    return true;\n  }\n  init(el) {\n    const swiper = this;\n    if (swiper.initialized) return swiper;\n    const mounted = swiper.mount(el);\n    if (mounted === false) return swiper;\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor && swiper.enabled) {\n      swiper.setGrabCursor();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.virtual.slidesBefore, 0, swiper.params.runCallbacksOnInit, false, true);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n    }\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Attach events\n    swiper.attachEvents();\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      } else {\n        imageEl.addEventListener('load', e => {\n          processLazyPreloader(swiper, e.target);\n        });\n      }\n    });\n    preload(swiper);\n\n    // Init Flag\n    swiper.initialized = true;\n    preload(swiper);\n\n    // Emit\n    swiper.emit('init');\n    swiper.emit('afterInit');\n    return swiper;\n  }\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params,\n      el,\n      wrapperEl,\n      slides\n    } = swiper;\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      el.removeAttribute('style');\n      wrapperEl.removeAttribute('style');\n      if (slides && slides.length) {\n        slides.forEach(slideEl => {\n          slideEl.classList.remove(params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n          slideEl.removeAttribute('style');\n          slideEl.removeAttribute('data-swiper-slide-index');\n        });\n      }\n    }\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach(eventName => {\n      swiper.off(eventName);\n    });\n    if (deleteInstance !== false) {\n      swiper.el.swiper = null;\n      deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n    return null;\n  }\n  static extendDefaults(newDefaults) {\n    extend(extendedDefaults, newDefaults);\n  }\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n  static get defaults() {\n    return defaults;\n  }\n  static installModule(mod) {\n    if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\n    const modules = Swiper.prototype.__modules__;\n    if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\n      modules.push(mod);\n    }\n  }\n  static use(module) {\n    if (Array.isArray(module)) {\n      module.forEach(m => Swiper.installModule(m));\n      return Swiper;\n    }\n    Swiper.installModule(module);\n    return Swiper;\n  }\n}\nObject.keys(prototypes).forEach(prototypeGroup => {\n  Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\n    Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n  });\n});\nSwiper.use([Resize, Observer]);\nexport default Swiper;","/**\n * SSR Window 4.0.2\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2021, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: December 13, 2021\n */\n/* eslint-disable no-param-reassign */\nfunction isObject(obj) {\n    return (obj !== null &&\n        typeof obj === 'object' &&\n        'constructor' in obj &&\n        obj.constructor === Object);\n}\nfunction extend(target = {}, src = {}) {\n    Object.keys(src).forEach((key) => {\n        if (typeof target[key] === 'undefined')\n            target[key] = src[key];\n        else if (isObject(src[key]) &&\n            isObject(target[key]) &&\n            Object.keys(src[key]).length > 0) {\n            extend(target[key], src[key]);\n        }\n    });\n}\n\nconst ssrDocument = {\n    body: {},\n    addEventListener() { },\n    removeEventListener() { },\n    activeElement: {\n        blur() { },\n        nodeName: '',\n    },\n    querySelector() {\n        return null;\n    },\n    querySelectorAll() {\n        return [];\n    },\n    getElementById() {\n        return null;\n    },\n    createEvent() {\n        return {\n            initEvent() { },\n        };\n    },\n    createElement() {\n        return {\n            children: [],\n            childNodes: [],\n            style: {},\n            setAttribute() { },\n            getElementsByTagName() {\n                return [];\n            },\n        };\n    },\n    createElementNS() {\n        return {};\n    },\n    importNode() {\n        return null;\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n};\nfunction getDocument() {\n    const doc = typeof document !== 'undefined' ? document : {};\n    extend(doc, ssrDocument);\n    return doc;\n}\n\nconst ssrWindow = {\n    document: ssrDocument,\n    navigator: {\n        userAgent: '',\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n    history: {\n        replaceState() { },\n        pushState() { },\n        go() { },\n        back() { },\n    },\n    CustomEvent: function CustomEvent() {\n        return this;\n    },\n    addEventListener() { },\n    removeEventListener() { },\n    getComputedStyle() {\n        return {\n            getPropertyValue() {\n                return '';\n            },\n        };\n    },\n    Image() { },\n    Date() { },\n    screen: {},\n    setTimeout() { },\n    clearTimeout() { },\n    matchMedia() {\n        return {};\n    },\n    requestAnimationFrame(callback) {\n        if (typeof setTimeout === 'undefined') {\n            callback();\n            return null;\n        }\n        return setTimeout(callback, 0);\n    },\n    cancelAnimationFrame(id) {\n        if (typeof setTimeout === 'undefined') {\n            return;\n        }\n        clearTimeout(id);\n    },\n};\nfunction getWindow() {\n    const win = typeof window !== 'undefined' ? window : {};\n    extend(win, ssrWindow);\n    return win;\n}\n\nexport { extend, getDocument, getWindow, ssrDocument, ssrWindow };\n","import { getWindow, getDocument } from 'ssr-window';\nfunction deleteProps(obj) {\n  const object = obj;\n  Object.keys(object).forEach(key => {\n    try {\n      object[key] = null;\n    } catch (e) {\n      // no getter for object\n    }\n    try {\n      delete object[key];\n    } catch (e) {\n      // something got wrong\n    }\n  });\n}\nfunction nextTick(callback, delay = 0) {\n  return setTimeout(callback, delay);\n}\nfunction now() {\n  return Date.now();\n}\nfunction getComputedStyle(el) {\n  const window = getWindow();\n  let style;\n  if (window.getComputedStyle) {\n    style = window.getComputedStyle(el, null);\n  }\n  if (!style && el.currentStyle) {\n    style = el.currentStyle;\n  }\n  if (!style) {\n    style = el.style;\n  }\n  return style;\n}\nfunction getTranslate(el, axis = 'x') {\n  const window = getWindow();\n  let matrix;\n  let curTransform;\n  let transformMatrix;\n  const curStyle = getComputedStyle(el, null);\n  if (window.WebKitCSSMatrix) {\n    curTransform = curStyle.transform || curStyle.webkitTransform;\n    if (curTransform.split(',').length > 6) {\n      curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n    }\n    // Some old versions of Webkit choke when 'none' is passed; pass\n    // empty string instead in this case\n    transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n  } else {\n    transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n    matrix = transformMatrix.toString().split(',');\n  }\n  if (axis === 'x') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[4]);\n  }\n  if (axis === 'y') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[5]);\n  }\n  return curTransform || 0;\n}\nfunction isObject(o) {\n  return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\n}\nfunction isNode(node) {\n  // eslint-disable-next-line\n  if (typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined') {\n    return node instanceof HTMLElement;\n  }\n  return node && (node.nodeType === 1 || node.nodeType === 11);\n}\nfunction extend(...args) {\n  const to = Object(args[0]);\n  const noExtend = ['__proto__', 'constructor', 'prototype'];\n  for (let i = 1; i < args.length; i += 1) {\n    const nextSource = args[i];\n    if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {\n      const keysArray = Object.keys(Object(nextSource)).filter(key => noExtend.indexOf(key) < 0);\n      for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n        const nextKey = keysArray[nextIndex];\n        const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n        if (desc !== undefined && desc.enumerable) {\n          if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            to[nextKey] = {};\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n  }\n  return to;\n}\nfunction setCSSProperty(el, varName, varValue) {\n  el.style.setProperty(varName, varValue);\n}\nfunction animateCSSModeScroll({\n  swiper,\n  targetPosition,\n  side\n}) {\n  const window = getWindow();\n  const startPosition = -swiper.translate;\n  let startTime = null;\n  let time;\n  const duration = swiper.params.speed;\n  swiper.wrapperEl.style.scrollSnapType = 'none';\n  window.cancelAnimationFrame(swiper.cssModeFrameID);\n  const dir = targetPosition > startPosition ? 'next' : 'prev';\n  const isOutOfBound = (current, target) => {\n    return dir === 'next' && current >= target || dir === 'prev' && current <= target;\n  };\n  const animate = () => {\n    time = new Date().getTime();\n    if (startTime === null) {\n      startTime = time;\n    }\n    const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n    const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;\n    let currentPosition = startPosition + easeProgress * (targetPosition - startPosition);\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      currentPosition = targetPosition;\n    }\n    swiper.wrapperEl.scrollTo({\n      [side]: currentPosition\n    });\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.scrollSnapType = '';\n      setTimeout(() => {\n        swiper.wrapperEl.style.overflow = '';\n        swiper.wrapperEl.scrollTo({\n          [side]: currentPosition\n        });\n      });\n      window.cancelAnimationFrame(swiper.cssModeFrameID);\n      return;\n    }\n    swiper.cssModeFrameID = window.requestAnimationFrame(animate);\n  };\n  animate();\n}\nfunction getSlideTransformEl(slideEl) {\n  return slideEl.querySelector('.swiper-slide-transform') || slideEl.shadowEl && slideEl.shadowEl.querySelector('.swiper-slide-transform') || slideEl;\n}\nfunction findElementsInElements(elements = [], selector = '') {\n  const found = [];\n  elements.forEach(el => {\n    found.push(...el.querySelectorAll(selector));\n  });\n  return found;\n}\nfunction elementChildren(element, selector = '') {\n  return [...element.children].filter(el => el.matches(selector));\n}\nfunction createElement(tag, classes = []) {\n  const el = document.createElement(tag);\n  el.classList.add(...(Array.isArray(classes) ? classes : [classes]));\n  return el;\n}\nfunction elementOffset(el) {\n  const window = getWindow();\n  const document = getDocument();\n  const box = el.getBoundingClientRect();\n  const body = document.body;\n  const clientTop = el.clientTop || body.clientTop || 0;\n  const clientLeft = el.clientLeft || body.clientLeft || 0;\n  const scrollTop = el === window ? window.scrollY : el.scrollTop;\n  const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n  return {\n    top: box.top + scrollTop - clientTop,\n    left: box.left + scrollLeft - clientLeft\n  };\n}\nfunction elementPrevAll(el, selector) {\n  const prevEls = [];\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if (prev.matches(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return prevEls;\n}\nfunction elementNextAll(el, selector) {\n  const nextEls = [];\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if (next.matches(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return nextEls;\n}\nfunction elementStyle(el, prop) {\n  const window = getWindow();\n  return window.getComputedStyle(el, null).getPropertyValue(prop);\n}\nfunction elementIndex(el) {\n  let child = el;\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\nfunction elementParents(el, selector) {\n  const parents = []; // eslint-disable-line\n  let parent = el.parentElement; // eslint-disable-line\n  while (parent) {\n    if (selector) {\n      if (parent.matches(selector)) parents.push(parent);\n    } else {\n      parents.push(parent);\n    }\n    parent = parent.parentElement;\n  }\n  return parents;\n}\nfunction elementTransitionEnd(el, callback) {\n  function fireCallBack(e) {\n    if (e.target !== el) return;\n    callback.call(el, e);\n    el.removeEventListener('transitionend', fireCallBack);\n  }\n  if (callback) {\n    el.addEventListener('transitionend', fireCallBack);\n  }\n}\nfunction elementOuterSize(el, size, includeMargins) {\n  const window = getWindow();\n  if (includeMargins) {\n    return el[size === 'width' ? 'offsetWidth' : 'offsetHeight'] + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-right' : 'margin-top')) + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-left' : 'margin-bottom'));\n  }\n  return el.offsetWidth;\n}\nexport { animateCSSModeScroll, deleteProps, nextTick, now, getTranslate, isObject, extend, getComputedStyle, setCSSProperty, getSlideTransformEl,\n// dom\nfindElementsInElements, createElement, elementChildren, elementOffset, elementPrevAll, elementNextAll, elementStyle, elementIndex, elementParents, elementTransitionEnd, elementOuterSize };","import { getWindow, getDocument } from 'ssr-window';\nlet support;\nfunction calcSupport() {\n  const window = getWindow();\n  const document = getDocument();\n  return {\n    smoothScroll: document.documentElement && 'scrollBehavior' in document.documentElement.style,\n    touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch)\n  };\n}\nfunction getSupport() {\n  if (!support) {\n    support = calcSupport();\n  }\n  return support;\n}\nexport { getSupport };","import { getWindow } from 'ssr-window';\nimport { getSupport } from './get-support.js';\nlet deviceCached;\nfunction calcDevice({\n  userAgent\n} = {}) {\n  const support = getSupport();\n  const window = getWindow();\n  const platform = window.navigator.platform;\n  const ua = userAgent || window.navigator.userAgent;\n  const device = {\n    ios: false,\n    android: false\n  };\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const windows = platform === 'Win32';\n  let macos = platform === 'MacIntel';\n\n  // iPadOs 13 fix\n  const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n  if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    if (!ipad) ipad = [0, 1, '13_0_0'];\n    macos = false;\n  }\n\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.android = true;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n\n  // Export object\n  return device;\n}\nfunction getDevice(overrides = {}) {\n  if (!deviceCached) {\n    deviceCached = calcDevice(overrides);\n  }\n  return deviceCached;\n}\nexport { getDevice };","import { getWindow } from 'ssr-window';\nlet browser;\nfunction calcBrowser() {\n  const window = getWindow();\n  let needPerspectiveFix = false;\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n  }\n  if (isSafari()) {\n    const ua = String(window.navigator.userAgent);\n    if (ua.includes('Version/')) {\n      const [major, minor] = ua.split('Version/')[1].split(' ')[0].split('.').map(num => Number(num));\n      needPerspectiveFix = major < 16 || major === 16 && minor < 2;\n    }\n  }\n  return {\n    isSafari: needPerspectiveFix || isSafari(),\n    needPerspectiveFix,\n    isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)\n  };\n}\nfunction getBrowser() {\n  if (!browser) {\n    browser = calcBrowser();\n  }\n  return browser;\n}\nexport { getBrowser };","import { getWindow } from 'ssr-window';\nexport default function Resize({\n  swiper,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  let observer = null;\n  let animationFrame = null;\n  const resizeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('beforeResize');\n    emit('resize');\n  };\n  const createObserver = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    observer = new ResizeObserver(entries => {\n      animationFrame = window.requestAnimationFrame(() => {\n        const {\n          width,\n          height\n        } = swiper;\n        let newWidth = width;\n        let newHeight = height;\n        entries.forEach(({\n          contentBoxSize,\n          contentRect,\n          target\n        }) => {\n          if (target && target !== swiper.el) return;\n          newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n          newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n        });\n        if (newWidth !== width || newHeight !== height) {\n          resizeHandler();\n        }\n      });\n    });\n    observer.observe(swiper.el);\n  };\n  const removeObserver = () => {\n    if (animationFrame) {\n      window.cancelAnimationFrame(animationFrame);\n    }\n    if (observer && observer.unobserve && swiper.el) {\n      observer.unobserve(swiper.el);\n      observer = null;\n    }\n  };\n  const orientationChangeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('orientationchange');\n  };\n  on('init', () => {\n    if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\n      createObserver();\n      return;\n    }\n    window.addEventListener('resize', resizeHandler);\n    window.addEventListener('orientationchange', orientationChangeHandler);\n  });\n  on('destroy', () => {\n    removeObserver();\n    window.removeEventListener('resize', resizeHandler);\n    window.removeEventListener('orientationchange', orientationChangeHandler);\n  });\n}","import { getWindow } from 'ssr-window';\nimport { elementParents } from '../../../shared/utils.js';\nexport default function Observer({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const observers = [];\n  const window = getWindow();\n  const attach = (target, options = {}) => {\n    const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n    const observer = new ObserverFunc(mutations => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (swiper.__preventObserver__) return;\n      if (mutations.length === 1) {\n        emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        emit('observerUpdate', mutations[0]);\n      };\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n    });\n    observers.push(observer);\n  };\n  const init = () => {\n    if (!swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = elementParents(swiper.el);\n      for (let i = 0; i < containerParents.length; i += 1) {\n        attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    attach(swiper.el, {\n      childList: swiper.params.observeSlideChildren\n    });\n\n    // Observe wrapper\n    attach(swiper.wrapperEl, {\n      attributes: false\n    });\n  };\n  const destroy = () => {\n    observers.forEach(observer => {\n      observer.disconnect();\n    });\n    observers.splice(0, observers.length);\n  };\n  extendParams({\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false\n  });\n  on('init', init);\n  on('destroy', destroy);\n}","/* eslint-disable no-underscore-dangle */\n\nexport default {\n  on(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(event => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  },\n  once(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      self.off(events, onceHandler);\n      if (onceHandler.__emitterProxy) {\n        delete onceHandler.__emitterProxy;\n      }\n      handler.apply(self, args);\n    }\n    onceHandler.__emitterProxy = handler;\n    return self.on(events, onceHandler, priority);\n  },\n  onAny(handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    if (self.eventsAnyListeners.indexOf(handler) < 0) {\n      self.eventsAnyListeners[method](handler);\n    }\n    return self;\n  },\n  offAny(handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsAnyListeners) return self;\n    const index = self.eventsAnyListeners.indexOf(handler);\n    if (index >= 0) {\n      self.eventsAnyListeners.splice(index, 1);\n    }\n    return self;\n  },\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach(event => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  },\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    data.unshift(context);\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(event => {\n      if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n        self.eventsAnyListeners.forEach(eventHandler => {\n          eventHandler.apply(context, [event, ...data]);\n        });\n      }\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach(eventHandler => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n};","import updateSize from './updateSize.js';\nimport updateSlides from './updateSlides.js';\nimport updateAutoHeight from './updateAutoHeight.js';\nimport updateSlidesOffset from './updateSlidesOffset.js';\nimport updateSlidesProgress from './updateSlidesProgress.js';\nimport updateProgress from './updateProgress.js';\nimport updateSlidesClasses from './updateSlidesClasses.js';\nimport updateActiveIndex from './updateActiveIndex.js';\nimport updateClickedSlide from './updateClickedSlide.js';\nexport default {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide\n};","import { elementStyle } from '../../shared/utils.js';\nexport default function updateSize() {\n  const swiper = this;\n  let width;\n  let height;\n  const el = swiper.el;\n  if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\n    width = swiper.params.width;\n  } else {\n    width = el.clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\n    height = swiper.params.height;\n  } else {\n    height = el.clientHeight;\n  }\n  if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt(elementStyle(el, 'padding-left') || 0, 10) - parseInt(elementStyle(el, 'padding-right') || 0, 10);\n  height = height - parseInt(elementStyle(el, 'padding-top') || 0, 10) - parseInt(elementStyle(el, 'padding-bottom') || 0, 10);\n  if (Number.isNaN(width)) width = 0;\n  if (Number.isNaN(height)) height = 0;\n  Object.assign(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height\n  });\n}","import { elementChildren, elementOuterSize, elementStyle, setCSSProperty } from '../../shared/utils.js';\nexport default function updateSlides() {\n  const swiper = this;\n  function getDirectionLabel(property) {\n    if (swiper.isHorizontal()) {\n      return property;\n    }\n    // prettier-ignore\n    return {\n      'width': 'height',\n      'margin-top': 'margin-left',\n      'margin-bottom ': 'margin-right',\n      'margin-left': 'margin-top',\n      'margin-right': 'margin-bottom',\n      'padding-left': 'padding-top',\n      'padding-right': 'padding-bottom',\n      'marginRight': 'marginBottom'\n    }[property];\n  }\n  function getDirectionPropertyValue(node, label) {\n    return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n  }\n  const params = swiper.params;\n  const {\n    wrapperEl,\n    slidesEl,\n    size: swiperSize,\n    rtlTranslate: rtl,\n    wrongRTL\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = elementChildren(slidesEl, `.${swiper.params.slideClass}, swiper-slide`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.slidesGrid.length;\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  }\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  slides.forEach(slideEl => {\n    if (rtl) {\n      slideEl.style.marginLeft = '';\n    } else {\n      slideEl.style.marginRight = '';\n    }\n    slideEl.style.marginBottom = '';\n    slideEl.style.marginTop = '';\n  });\n\n  // reset cssMode offsets\n  if (params.centeredSlides && params.cssMode) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', '');\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', '');\n  }\n  const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n  if (gridEnabled) {\n    swiper.grid.initSlides(slidesLength);\n  }\n\n  // Calc slides\n  let slideSize;\n  const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\n    return typeof params.breakpoints[key].slidesPerView !== 'undefined';\n  }).length > 0;\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    let slide;\n    if (slides[i]) slide = slides[i];\n    if (gridEnabled) {\n      swiper.grid.updateSlide(i, slide, slidesLength, getDirectionLabel);\n    }\n    if (slides[i] && elementStyle(slide, 'display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      if (shouldResetSlideSize) {\n        slides[i].style[getDirectionLabel('width')] = ``;\n      }\n      const slideStyles = getComputedStyle(slide);\n      const currentTransform = slide.style.transform;\n      const currentWebKitTransform = slide.style.webkitTransform;\n      if (currentTransform) {\n        slide.style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? elementOuterSize(slide, 'width', true) : elementOuterSize(slide, 'height', true);\n      } else {\n        // eslint-disable-next-line\n        const width = getDirectionPropertyValue(slideStyles, 'width');\n        const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n        const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n        const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n        const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n        const boxSizing = slideStyles.getPropertyValue('box-sizing');\n        if (boxSizing && boxSizing === 'border-box') {\n          slideSize = width + marginLeft + marginRight;\n        } else {\n          const {\n            clientWidth,\n            offsetWidth\n          } = slide;\n          slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n        }\n      }\n      if (currentTransform) {\n        slide.style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n      if (slides[i]) {\n        slides[i].style[getDirectionLabel('width')] = `${slideSize}px`;\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    wrapperEl.style.width = `${swiper.virtualSize + params.spaceBetween}px`;\n  }\n  if (params.setWrapperSize) {\n    wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + params.spaceBetween}px`;\n  }\n  if (gridEnabled) {\n    swiper.grid.updateWrapperSize(slideSize, snapGrid, getDirectionLabel);\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    const newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (isVirtual && params.loop) {\n    const size = slidesSizesGrid[0] + spaceBetween;\n    if (params.slidesPerGroup > 1) {\n      const groups = Math.ceil((swiper.virtual.slidesBefore + swiper.virtual.slidesAfter) / params.slidesPerGroup);\n      const groupSize = size * params.slidesPerGroup;\n      for (let i = 0; i < groups; i += 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + groupSize);\n      }\n    }\n    for (let i = 0; i < swiper.virtual.slidesBefore + swiper.virtual.slidesAfter; i += 1) {\n      if (params.slidesPerGroup === 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + size);\n      }\n      slidesGrid.push(slidesGrid[slidesGrid.length - 1] + size);\n      swiper.virtualSize += size;\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n  if (params.spaceBetween !== 0) {\n    const key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n    slides.filter((_, slideIndex) => {\n      if (!params.cssMode || params.loop) return true;\n      if (slideIndex === slides.length - 1) {\n        return false;\n      }\n      return true;\n    }).forEach(slideEl => {\n      slideEl.style[key] = `${spaceBetween}px`;\n    });\n  }\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    const maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map(snap => {\n      if (snap < 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n  Object.assign(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid\n  });\n  if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\n    const addToSnapGrid = -swiper.snapGrid[0];\n    const addToSlidesGrid = -swiper.slidesGrid[0];\n    swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\n    swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\n  }\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (!isVirtual && !params.cssMode && (params.effect === 'slide' || params.effect === 'fade')) {\n    const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;\n    const hasClassBackfaceClassAdded = swiper.el.classList.contains(backFaceHiddenClass);\n    if (slidesLength <= params.maxBackfaceHiddenSlides) {\n      if (!hasClassBackfaceClassAdded) swiper.el.classList.add(backFaceHiddenClass);\n    } else if (hasClassBackfaceClassAdded) {\n      swiper.el.classList.remove(backFaceHiddenClass);\n    }\n  }\n}","export default function updateAutoHeight(speed) {\n  const swiper = this;\n  const activeSlides = [];\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  const getSlideByIndex = index => {\n    if (isVirtual) {\n      return swiper.getSlideIndexByData(index);\n    }\n    return swiper.slides[index];\n  };\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    if (swiper.params.centeredSlides) {\n      (swiper.visibleSlides || []).forEach(slide => {\n        activeSlides.push(slide);\n      });\n    } else {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        const index = swiper.activeIndex + i;\n        if (index > swiper.slides.length && !isVirtual) break;\n        activeSlides.push(getSlideByIndex(index));\n      }\n    }\n  } else {\n    activeSlides.push(getSlideByIndex(swiper.activeIndex));\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight || newHeight === 0) swiper.wrapperEl.style.height = `${newHeight}px`;\n}","export default function updateSlidesOffset() {\n  const swiper = this;\n  const slides = swiper.slides;\n  // eslint-disable-next-line\n  const minusOffset = swiper.isElement ? swiper.isHorizontal() ? swiper.wrapperEl.offsetLeft : swiper.wrapperEl.offsetTop : 0;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = (swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop) - minusOffset - swiper.cssOverflowAdjustment();\n  }\n}","export default function updateSlidesProgress(translate = this && this.translate || 0) {\n  const swiper = this;\n  const params = swiper.params;\n  const {\n    slides,\n    rtlTranslate: rtl,\n    snapGrid\n  } = swiper;\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideVisibleClass);\n  });\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    let slideOffset = slide.swiperSlideOffset;\n    if (params.cssMode && params.centeredSlides) {\n      slideOffset -= slides[0].swiperSlideOffset;\n    }\n    const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n    const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n    const slideBefore = -(offsetCenter - slideOffset);\n    const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n    const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n    if (isVisible) {\n      swiper.visibleSlides.push(slide);\n      swiper.visibleSlidesIndexes.push(i);\n      slides[i].classList.add(params.slideVisibleClass);\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n    slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\n  }\n}","export default function updateProgress(translate) {\n  const swiper = this;\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1;\n    // eslint-disable-next-line\n    translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n  }\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let {\n    progress,\n    isBeginning,\n    isEnd,\n    progressLoop\n  } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / translatesDiff;\n    const isBeginningRounded = Math.abs(translate - swiper.minTranslate()) < 1;\n    const isEndRounded = Math.abs(translate - swiper.maxTranslate()) < 1;\n    isBeginning = isBeginningRounded || progress <= 0;\n    isEnd = isEndRounded || progress >= 1;\n    if (isBeginningRounded) progress = 0;\n    if (isEndRounded) progress = 1;\n  }\n  if (params.loop) {\n    const firstSlideIndex = swiper.getSlideIndexByData(0);\n    const lastSlideIndex = swiper.getSlideIndexByData(swiper.slides.length - 1);\n    const firstSlideTranslate = swiper.slidesGrid[firstSlideIndex];\n    const lastSlideTranslate = swiper.slidesGrid[lastSlideIndex];\n    const translateMax = swiper.slidesGrid[swiper.slidesGrid.length - 1];\n    const translateAbs = Math.abs(translate);\n    if (translateAbs >= firstSlideTranslate) {\n      progressLoop = (translateAbs - firstSlideTranslate) / translateMax;\n    } else {\n      progressLoop = (translateAbs + translateMax - lastSlideTranslate) / translateMax;\n    }\n    if (progressLoop > 1) progressLoop -= 1;\n  }\n  Object.assign(swiper, {\n    progress,\n    progressLoop,\n    isBeginning,\n    isEnd\n  });\n  if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n    swiper.emit('fromEdge');\n  }\n  swiper.emit('progress', progress);\n}","import { elementChildren, elementNextAll, elementPrevAll } from '../../shared/utils.js';\nexport default function updateSlidesClasses() {\n  const swiper = this;\n  const {\n    slides,\n    params,\n    slidesEl,\n    activeIndex\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const getFilteredSlide = selector => {\n    return elementChildren(slidesEl, `.${params.slideClass}${selector}, swiper-slide${selector}`)[0];\n  };\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n  });\n  let activeSlide;\n  if (isVirtual) {\n    if (params.loop) {\n      let slideIndex = activeIndex - swiper.virtual.slidesBefore;\n      if (slideIndex < 0) slideIndex = swiper.virtual.slides.length + slideIndex;\n      if (slideIndex >= swiper.virtual.slides.length) slideIndex -= swiper.virtual.slides.length;\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${slideIndex}\"]`);\n    } else {\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${activeIndex}\"]`);\n    }\n  } else {\n    activeSlide = slides[activeIndex];\n  }\n  if (activeSlide) {\n    // Active classes\n    activeSlide.classList.add(params.slideActiveClass);\n\n    // Next Slide\n    let nextSlide = elementNextAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !nextSlide) {\n      nextSlide = slides[0];\n    }\n    if (nextSlide) {\n      nextSlide.classList.add(params.slideNextClass);\n    }\n    // Prev Slide\n    let prevSlide = elementPrevAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !prevSlide === 0) {\n      prevSlide = slides[slides.length - 1];\n    }\n    if (prevSlide) {\n      prevSlide.classList.add(params.slidePrevClass);\n    }\n  }\n  swiper.emitSlidesClasses();\n}","import { preload } from '../../shared/process-lazy-preloader.js';\nexport function getActiveIndexByTranslate(swiper) {\n  const {\n    slidesGrid,\n    params\n  } = swiper;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  let activeIndex;\n  for (let i = 0; i < slidesGrid.length; i += 1) {\n    if (typeof slidesGrid[i + 1] !== 'undefined') {\n      if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n        activeIndex = i;\n      } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n        activeIndex = i + 1;\n      }\n    } else if (translate >= slidesGrid[i]) {\n      activeIndex = i;\n    }\n  }\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n  }\n  return activeIndex;\n}\nexport default function updateActiveIndex(newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    snapGrid,\n    params,\n    activeIndex: previousIndex,\n    realIndex: previousRealIndex,\n    snapIndex: previousSnapIndex\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  const getVirtualRealIndex = aIndex => {\n    let realIndex = aIndex - swiper.virtual.slidesBefore;\n    if (realIndex < 0) {\n      realIndex = swiper.virtual.slides.length + realIndex;\n    }\n    if (realIndex >= swiper.virtual.slides.length) {\n      realIndex -= swiper.virtual.slides.length;\n    }\n    return realIndex;\n  };\n  if (typeof activeIndex === 'undefined') {\n    activeIndex = getActiveIndexByTranslate(swiper);\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.realIndex = getVirtualRealIndex(activeIndex);\n    }\n    return;\n  }\n  // Get real index\n  let realIndex;\n  if (swiper.virtual && params.virtual.enabled && params.loop) {\n    realIndex = getVirtualRealIndex(activeIndex);\n  } else if (swiper.slides[activeIndex]) {\n    realIndex = parseInt(swiper.slides[activeIndex].getAttribute('data-swiper-slide-index') || activeIndex, 10);\n  } else {\n    realIndex = activeIndex;\n  }\n  Object.assign(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex\n  });\n  if (swiper.initialized) {\n    preload(swiper);\n  }\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}","export const processLazyPreloader = (swiper, imageEl) => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  const slideSelector = () => swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  const slideEl = imageEl.closest(slideSelector());\n  if (slideEl) {\n    const lazyEl = slideEl.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n    if (lazyEl) lazyEl.remove();\n  }\n};\nconst unlazy = (swiper, index) => {\n  if (!swiper.slides[index]) return;\n  const imageEl = swiper.slides[index].querySelector('[loading=\"lazy\"]');\n  if (imageEl) imageEl.removeAttribute('loading');\n};\nexport const preload = swiper => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  let amount = swiper.params.lazyPreloadPrevNext;\n  const len = swiper.slides.length;\n  if (!len || !amount || amount < 0) return;\n  amount = Math.min(amount, len);\n  const slidesPerView = swiper.params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(swiper.params.slidesPerView);\n  const activeIndex = swiper.activeIndex;\n  const slideIndexLastInView = activeIndex + slidesPerView - 1;\n  if (swiper.params.rewind) {\n    for (let i = activeIndex - amount; i <= slideIndexLastInView + amount; i += 1) {\n      const realIndex = (i % len + len) % len;\n      if (realIndex !== activeIndex && realIndex > slideIndexLastInView) unlazy(swiper, realIndex);\n    }\n  } else {\n    for (let i = Math.max(slideIndexLastInView - amount, 0); i <= Math.min(slideIndexLastInView + amount, len - 1); i += 1) {\n      if (i !== activeIndex && i > slideIndexLastInView) unlazy(swiper, i);\n    }\n  }\n};","export default function updateClickedSlide(e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = e.closest(`.${params.slideClass}, swiper-slide`);\n  let slideFound = false;\n  let slideIndex;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) {\n        slideFound = true;\n        slideIndex = i;\n        break;\n      }\n    }\n  }\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt(slide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = slideIndex;\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}","import getTranslate from './getTranslate.js';\nimport setTranslate from './setTranslate.js';\nimport minTranslate from './minTranslate.js';\nimport maxTranslate from './maxTranslate.js';\nimport translateTo from './translateTo.js';\nexport default {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n  translateTo\n};","import { getTranslate } from '../../shared/utils.js';\nexport default function getSwiperTranslate(axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n  const {\n    params,\n    rtlTranslate: rtl,\n    translate,\n    wrapperEl\n  } = swiper;\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n  if (params.cssMode) {\n    return translate;\n  }\n  let currentTranslate = getTranslate(wrapperEl, axis);\n  currentTranslate += swiper.cssOverflowAdjustment();\n  if (rtl) currentTranslate = -currentTranslate;\n  return currentTranslate || 0;\n}","export default function setTranslate(translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl,\n    params,\n    wrapperEl,\n    progress\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    if (swiper.isHorizontal()) {\n      x -= swiper.cssOverflowAdjustment();\n    } else {\n      y -= swiper.cssOverflowAdjustment();\n    }\n    wrapperEl.style.transform = `translate3d(${x}px, ${y}px, ${z}px)`;\n  }\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, byController);\n}","export default function minTranslate() {\n  return -this.snapGrid[0];\n}","export default function maxTranslate() {\n  return -this.snapGrid[this.snapGrid.length - 1];\n}","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function translateTo(translate = 0, speed = this.params.speed, runCallbacks = true, translateBounds = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    wrapperEl\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate;\n\n  // Update progress\n  swiper.updateProgress(newTranslate);\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: -newTranslate,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: -newTranslate,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.wrapperEl.removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n      swiper.wrapperEl.addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n    }\n  }\n  return true;\n}","import setTransition from './setTransition.js';\nimport transitionStart from './transitionStart.js';\nimport transitionEnd from './transitionEnd.js';\nexport default {\n  setTransition,\n  transitionStart,\n  transitionEnd\n};","export default function setTransition(duration, byController) {\n  const swiper = this;\n  if (!swiper.params.cssMode) {\n    swiper.wrapperEl.style.transitionDuration = `${duration}ms`;\n  }\n  swiper.emit('setTransition', duration, byController);\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionStart(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  if (params.cssMode) return;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'Start'\n  });\n}","export default function transitionEmit({\n  swiper,\n  runCallbacks,\n  direction,\n  step\n}) {\n  const {\n    activeIndex,\n    previousIndex\n  } = swiper;\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n  }\n  swiper.emit(`transition${step}`);\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit(`slideResetTransition${step}`);\n      return;\n    }\n    swiper.emit(`slideChangeTransition${step}`);\n    if (dir === 'next') {\n      swiper.emit(`slideNextTransition${step}`);\n    } else {\n      swiper.emit(`slidePrevTransition${step}`);\n    }\n  }\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionEnd(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  swiper.animating = false;\n  if (params.cssMode) return;\n  swiper.setTransition(0);\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'End'\n  });\n}","import slideTo from './slideTo.js';\nimport slideToLoop from './slideToLoop.js';\nimport slideNext from './slideNext.js';\nimport slidePrev from './slidePrev.js';\nimport slideReset from './slideReset.js';\nimport slideToClosest from './slideToClosest.js';\nimport slideToClickedSlide from './slideToClickedSlide.js';\nexport default {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide\n};","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function slideTo(index = 0, speed = this.params.speed, runCallbacks = true, internal, initial) {\n  if (typeof index === 'string') {\n    index = parseInt(index, 10);\n  }\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    previousIndex,\n    activeIndex,\n    rtlTranslate: rtl,\n    wrapperEl,\n    enabled\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) {\n    return false;\n  }\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n  let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  const translate = -snapGrid[snapIndex];\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      const normalizedTranslate = -Math.floor(translate * 100);\n      const normalizedGrid = Math.floor(slidesGrid[i] * 100);\n      const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {\n          slideIndex = i;\n        } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\n          slideIndex = i + 1;\n        }\n      } else if (normalizedTranslate >= normalizedGrid) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) {\n        return false;\n      }\n    }\n  }\n  if (slideIndex !== (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  // Update progress\n  swiper.updateProgress(translate);\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset';\n\n  // Update Index\n  if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    const t = rtl ? translate : -translate;\n    if (speed === 0) {\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      if (isVirtual) {\n        swiper.wrapperEl.style.scrollSnapType = 'none';\n        swiper._immediateVirtual = true;\n      }\n      if (isVirtual && !swiper._cssModeVirtualInitialSet && swiper.params.initialSlide > 0) {\n        swiper._cssModeVirtualInitialSet = true;\n        requestAnimationFrame(() => {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n      }\n      if (isVirtual) {\n        requestAnimationFrame(() => {\n          swiper.wrapperEl.style.scrollSnapType = '';\n          swiper._immediateVirtual = false;\n        });\n      }\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: t,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: t,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  swiper.setTransition(speed);\n  swiper.setTranslate(translate);\n  swiper.updateActiveIndex(slideIndex);\n  swiper.updateSlidesClasses();\n  swiper.emit('beforeTransitionStart', speed, internal);\n  swiper.transitionStart(runCallbacks, direction);\n  if (speed === 0) {\n    swiper.transitionEnd(runCallbacks, direction);\n  } else if (!swiper.animating) {\n    swiper.animating = true;\n    if (!swiper.onSlideToWrapperTransitionEnd) {\n      swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n        if (!swiper || swiper.destroyed) return;\n        if (e.target !== this) return;\n        swiper.wrapperEl.removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.onSlideToWrapperTransitionEnd = null;\n        delete swiper.onSlideToWrapperTransitionEnd;\n        swiper.transitionEnd(runCallbacks, direction);\n      };\n    }\n    swiper.wrapperEl.addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n  }\n  return true;\n}","export default function slideToLoop(index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  if (typeof index === 'string') {\n    const indexAsNumber = parseInt(index, 10);\n    index = indexAsNumber;\n  }\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      // eslint-disable-next-line\n      newIndex = newIndex + swiper.virtual.slidesBefore;\n    } else {\n      newIndex = swiper.getSlideIndexByData(newIndex);\n    }\n  }\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideNext(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    enabled,\n    params,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  let perGroup = params.slidesPerGroup;\n  if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n    perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\n  }\n  const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'next'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  if (params.rewind && swiper.isEnd) {\n    return swiper.slideTo(0, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slidePrev(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    rtlTranslate,\n    enabled,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'prev'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\n    let prevSnapIndex;\n    snapGrid.forEach((snap, snapIndex) => {\n      if (normalizedTranslate >= snap) {\n        // prevSnap = snap;\n        prevSnapIndex = snapIndex;\n      }\n    });\n    if (typeof prevSnapIndex !== 'undefined') {\n      prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\n    }\n  }\n  let prevIndex = 0;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n    if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n      prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\n      prevIndex = Math.max(prevIndex, 0);\n    }\n  }\n  if (params.rewind && swiper.isBeginning) {\n    const lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    return swiper.slideTo(lastIndex, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideReset(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideToClosest(speed = this.params.speed, runCallbacks = true, internal, threshold = 0.5) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n  const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n    if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\n    const currentSnap = swiper.snapGrid[snapIndex];\n    if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.slidesGrid.length - 1);\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}","import { elementChildren, nextTick } from '../../shared/utils.js';\nexport default function slideToClickedSlide() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  const slideSelector = swiper.isElement ? `swiper-slide` : `.${params.slideClass}`;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt(swiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n        swiper.loopFix();\n        slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n        nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n      nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}","import loopCreate from './loopCreate.js';\nimport loopFix from './loopFix.js';\nimport loopDestroy from './loopDestroy.js';\nexport default {\n  loopCreate,\n  loopFix,\n  loopDestroy\n};","import { elementChildren } from '../../shared/utils.js';\nexport default function loopCreate(slideRealIndex) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  slides.forEach((el, index) => {\n    el.setAttribute('data-swiper-slide-index', index);\n  });\n  swiper.loopFix({\n    slideRealIndex,\n    direction: params.centeredSlides ? undefined : 'next'\n  });\n}","export default function loopFix({\n  slideRealIndex,\n  slideTo = true,\n  direction,\n  setTranslate,\n  activeSlideIndex,\n  byController,\n  byMousewheel\n} = {}) {\n  const swiper = this;\n  if (!swiper.params.loop) return;\n  swiper.emit('beforeLoopFix');\n  const {\n    slides,\n    allowSlidePrev,\n    allowSlideNext,\n    slidesEl,\n    params\n  } = swiper;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n  if (swiper.virtual && params.virtual.enabled) {\n    if (slideTo) {\n      if (!params.centeredSlides && swiper.snapIndex === 0) {\n        swiper.slideTo(swiper.virtual.slides.length, 0, false, true);\n      } else if (params.centeredSlides && swiper.snapIndex < params.slidesPerView) {\n        swiper.slideTo(swiper.virtual.slides.length + swiper.snapIndex, 0, false, true);\n      } else if (swiper.snapIndex === swiper.snapGrid.length - 1) {\n        swiper.slideTo(swiper.virtual.slidesBefore, 0, false, true);\n      }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    swiper.emit('loopFix');\n    return;\n  }\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10));\n  let loopedSlides = params.loopedSlides || slidesPerView;\n  if (loopedSlides % params.slidesPerGroup !== 0) {\n    loopedSlides += params.slidesPerGroup - loopedSlides % params.slidesPerGroup;\n  }\n  swiper.loopedSlides = loopedSlides;\n  const prependSlidesIndexes = [];\n  const appendSlidesIndexes = [];\n  let activeIndex = swiper.activeIndex;\n  if (typeof activeSlideIndex === 'undefined') {\n    activeSlideIndex = swiper.getSlideIndex(swiper.slides.filter(el => el.classList.contains(params.slideActiveClass))[0]);\n  } else {\n    activeIndex = activeSlideIndex;\n  }\n  const isNext = direction === 'next' || !direction;\n  const isPrev = direction === 'prev' || !direction;\n  let slidesPrepended = 0;\n  let slidesAppended = 0;\n  // prepend last slides before start\n  if (activeSlideIndex < loopedSlides) {\n    slidesPrepended = Math.max(loopedSlides - activeSlideIndex, params.slidesPerGroup);\n    for (let i = 0; i < loopedSlides - activeSlideIndex; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      prependSlidesIndexes.push(slides.length - index - 1);\n    }\n  } else if (activeSlideIndex /* + slidesPerView */ > swiper.slides.length - loopedSlides * 2) {\n    slidesAppended = Math.max(activeSlideIndex - (swiper.slides.length - loopedSlides * 2), params.slidesPerGroup);\n    for (let i = 0; i < slidesAppended; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      appendSlidesIndexes.push(index);\n    }\n  }\n  if (isPrev) {\n    prependSlidesIndexes.forEach(index => {\n      slidesEl.prepend(swiper.slides[index]);\n    });\n  }\n  if (isNext) {\n    appendSlidesIndexes.forEach(index => {\n      slidesEl.append(swiper.slides[index]);\n    });\n  }\n  swiper.recalcSlides();\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (slideTo) {\n    if (prependSlidesIndexes.length > 0 && isPrev) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex + slidesPrepended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex + slidesPrepended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        if (setTranslate) {\n          swiper.slideToLoop(slideRealIndex, 0, false, true);\n        }\n      }\n    } else if (appendSlidesIndexes.length > 0 && isNext) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex - slidesAppended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex - slidesAppended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        swiper.slideToLoop(slideRealIndex, 0, false, true);\n      }\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.controller && swiper.controller.control && !byController) {\n    const loopParams = {\n      slideRealIndex,\n      slideTo: false,\n      direction,\n      setTranslate,\n      activeSlideIndex,\n      byController: true\n    };\n    if (Array.isArray(swiper.controller.control)) {\n      swiper.controller.control.forEach(c => {\n        if (!c.destroyed && c.params.loop) c.loopFix(loopParams);\n      });\n    } else if (swiper.controller.control instanceof swiper.constructor && swiper.controller.control.params.loop) {\n      swiper.controller.control.loopFix(loopParams);\n    }\n  }\n  swiper.emit('loopFix');\n}","export default function loopDestroy() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  swiper.recalcSlides();\n  const newSlidesOrder = [];\n  swiper.slides.forEach(slideEl => {\n    const index = typeof slideEl.swiperSlideIndex === 'undefined' ? slideEl.getAttribute('data-swiper-slide-index') * 1 : slideEl.swiperSlideIndex;\n    newSlidesOrder[index] = slideEl;\n  });\n  swiper.slides.forEach(slideEl => {\n    slideEl.removeAttribute('data-swiper-slide-index');\n  });\n  newSlidesOrder.forEach(slideEl => {\n    slidesEl.append(slideEl);\n  });\n  swiper.recalcSlides();\n  swiper.slideTo(swiper.realIndex, 0);\n}","import setGrabCursor from './setGrabCursor.js';\nimport unsetGrabCursor from './unsetGrabCursor.js';\nexport default {\n  setGrabCursor,\n  unsetGrabCursor\n};","export default function setGrabCursor(moving) {\n  const swiper = this;\n  if (!swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n  const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","export default function unsetGrabCursor() {\n  const swiper = this;\n  if (swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n    return;\n  }\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","import { getDocument } from 'ssr-window';\nimport onTouchStart from './onTouchStart.js';\nimport onTouchMove from './onTouchMove.js';\nimport onTouchEnd from './onTouchEnd.js';\nimport onResize from './onResize.js';\nimport onClick from './onClick.js';\nimport onScroll from './onScroll.js';\nimport onLoad from './onLoad.js';\nlet dummyEventAttached = false;\nfunction dummyEventListener() {}\nconst events = (swiper, method) => {\n  const document = getDocument();\n  const {\n    params,\n    el,\n    wrapperEl,\n    device\n  } = swiper;\n  const capture = !!params.nested;\n  const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n  const swiperMethod = method;\n\n  // Touch Events\n  el[domMethod]('pointerdown', swiper.onTouchStart, {\n    passive: false\n  });\n  document[domMethod]('pointermove', swiper.onTouchMove, {\n    passive: false,\n    capture\n  });\n  document[domMethod]('pointerup', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointercancel', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerout', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerleave', swiper.onTouchEnd, {\n    passive: true\n  });\n\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el[domMethod]('click', swiper.onClick, true);\n  }\n  if (params.cssMode) {\n    wrapperEl[domMethod]('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  if (params.updateOnWindowResize) {\n    swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n  } else {\n    swiper[swiperMethod]('observerUpdate', onResize, true);\n  }\n\n  // Images loader\n  el[domMethod]('load', swiper.onLoad, {\n    capture: true\n  });\n};\nfunction attachEvents() {\n  const swiper = this;\n  const document = getDocument();\n  const {\n    params\n  } = swiper;\n  swiper.onTouchStart = onTouchStart.bind(swiper);\n  swiper.onTouchMove = onTouchMove.bind(swiper);\n  swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  if (params.cssMode) {\n    swiper.onScroll = onScroll.bind(swiper);\n  }\n  swiper.onClick = onClick.bind(swiper);\n  swiper.onLoad = onLoad.bind(swiper);\n  if (!dummyEventAttached) {\n    document.addEventListener('touchstart', dummyEventListener);\n    dummyEventAttached = true;\n  }\n  events(swiper, 'on');\n}\nfunction detachEvents() {\n  const swiper = this;\n  events(swiper, 'off');\n}\nexport default {\n  attachEvents,\n  detachEvents\n};","import { getWindow, getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\n\n// Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd\nfunction closestElement(selector, base = this) {\n  function __closestFrom(el) {\n    if (!el || el === getDocument() || el === getWindow()) return null;\n    if (el.assignedSlot) el = el.assignedSlot;\n    const found = el.closest(selector);\n    if (!found && !el.getRootNode) {\n      return null;\n    }\n    return found || __closestFrom(el.getRootNode().host);\n  }\n  return __closestFrom(base);\n}\nexport default function onTouchStart(event) {\n  const swiper = this;\n  const document = getDocument();\n  const window = getWindow();\n  const data = swiper.touchEventsData;\n  data.evCache.push(event);\n  const {\n    params,\n    touches,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  if (!swiper.animating && params.cssMode && params.loop) {\n    swiper.loopFix();\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  let targetEl = e.target;\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!swiper.wrapperEl.contains(targetEl)) return;\n  }\n  if ('which' in e && e.which === 3) return;\n  if ('button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n\n  // change target el for shadow root component\n  const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\n  // eslint-disable-next-line\n  const eventPath = event.composedPath ? event.composedPath() : event.path;\n  if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) {\n    targetEl = eventPath[0];\n  }\n  const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\n  const isTargetShadow = !!(e.target && e.target.shadowRoot);\n\n  // use closestElement for shadow root element to get the actual closest for nested shadow root element\n  if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, targetEl) : targetEl.closest(noSwipingSelector))) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!targetEl.closest(params.swipeHandler)) return;\n  }\n  touches.currentX = e.pageX;\n  touches.currentY = e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n    if (edgeSwipeDetection === 'prevent') {\n      event.preventDefault();\n    } else {\n      return;\n    }\n  }\n  Object.assign(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined\n  });\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  let preventDefault = true;\n  if (targetEl.matches(data.focusableElements)) {\n    preventDefault = false;\n    if (targetEl.nodeName === 'SELECT') {\n      data.isTouched = false;\n    }\n  }\n  if (document.activeElement && document.activeElement.matches(data.focusableElements) && document.activeElement !== targetEl) {\n    document.activeElement.blur();\n  }\n  const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n  if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !targetEl.isContentEditable) {\n    e.preventDefault();\n  }\n  if (swiper.params.freeMode && swiper.params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {\n    swiper.freeMode.onTouchStart();\n  }\n  swiper.emit('touchStart', e);\n}","import { getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\nexport default function onTouchMove(event) {\n  const document = getDocument();\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n  if (pointerIndex >= 0) data.evCache[pointerIndex] = e;\n  const targetTouch = data.evCache.length > 1 ? data.evCache[0] : e;\n  const pageX = targetTouch.pageX;\n  const pageY = targetTouch.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    if (!e.target.matches(data.focusableElements)) {\n      swiper.allowClick = false;\n    }\n    if (data.isTouched) {\n      Object.assign(touches, {\n        startX: pageX,\n        startY: pageY,\n        prevX: swiper.touches.currentX,\n        prevY: swiper.touches.currentY,\n        currentX: pageX,\n        currentY: pageY\n      });\n      data.touchStartTime = now();\n    }\n    return;\n  }\n  if (params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\n      return;\n    }\n  }\n  if (document.activeElement) {\n    if (e.target === document.activeElement && e.target.matches(data.focusableElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold) return;\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if (diffX * diffX + diffY * diffY >= 25) {\n        touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling || swiper.zoom && swiper.params.zoom && swiper.params.zoom.enabled && data.evCache.length > 1) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  if (!params.cssMode && e.cancelable) {\n    e.preventDefault();\n  }\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  let touchesDiff = swiper.isHorizontal() ? touches.currentX - touches.previousX : touches.currentY - touches.previousY;\n  if (params.oneWayMovement) {\n    diff = Math.abs(diff) * (rtl ? 1 : -1);\n    touchesDiff = Math.abs(touchesDiff) * (rtl ? 1 : -1);\n  }\n  touches.diff = diff;\n  diff *= params.touchRatio;\n  if (rtl) {\n    diff = -diff;\n    touchesDiff = -touchesDiff;\n  }\n  const prevTouchesDirection = swiper.touchesDirection;\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  swiper.touchesDirection = touchesDiff > 0 ? 'prev' : 'next';\n  const isLoop = swiper.params.loop && !params.cssMode;\n  if (!data.isMoved) {\n    if (isLoop) {\n      swiper.loopFix({\n        direction: swiper.swipeDirection\n      });\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      const evt = new window.CustomEvent('transitionend', {\n        bubbles: true,\n        cancelable: true\n      });\n      swiper.wrapperEl.dispatchEvent(evt);\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  let loopFixed;\n  if (data.isMoved && prevTouchesDirection !== swiper.touchesDirection && isLoop && Math.abs(diff) >= 1) {\n    // need another loop fix\n    swiper.loopFix({\n      direction: swiper.swipeDirection,\n      setTranslate: true\n    });\n    loopFixed = true;\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n  data.currentTranslate = diff + data.startTranslate;\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if (diff > 0) {\n    if (isLoop && !loopFixed && data.currentTranslate > (params.centeredSlides ? swiper.minTranslate() - swiper.size / 2 : swiper.minTranslate())) {\n      swiper.loopFix({\n        direction: 'prev',\n        setTranslate: true,\n        activeSlideIndex: 0\n      });\n    }\n    if (data.currentTranslate > swiper.minTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\n      }\n    }\n  } else if (diff < 0) {\n    if (isLoop && !loopFixed && data.currentTranslate < (params.centeredSlides ? swiper.maxTranslate() + swiper.size / 2 : swiper.maxTranslate())) {\n      swiper.loopFix({\n        direction: 'next',\n        setTranslate: true,\n        activeSlideIndex: swiper.slides.length - (params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10)))\n      });\n    }\n    if (data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\n      }\n    }\n  }\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n  if (!params.followFinger || params.cssMode) return;\n\n  // Update active index in free mode\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled && swiper.freeMode) {\n    swiper.freeMode.onTouchMove();\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}","import { now, nextTick } from '../../shared/utils.js';\nexport default function onTouchEnd(event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === event.pointerId);\n  if (pointerIndex >= 0) {\n    data.evCache.splice(pointerIndex, 1);\n  }\n  if (['pointercancel', 'pointerout', 'pointerleave'].includes(event.type)) {\n    const proceed = event.type === 'pointercancel' && (swiper.browser.isSafari || swiper.browser.isWebView);\n    if (!proceed) {\n      return;\n    }\n  }\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    slidesGrid,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    const pathTree = e.path || e.composedPath && e.composedPath();\n    swiper.updateClickedSlide(pathTree && pathTree[0] || e.target);\n    swiper.emit('tap click', e);\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n  data.lastClickTime = now();\n  nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n  if (params.cssMode) {\n    return;\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled) {\n    swiper.freeMode.onTouchEnd({\n      currentPos\n    });\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n    const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n  let rewindFirstIndex = null;\n  let rewindLastIndex = null;\n  if (params.rewind) {\n    if (swiper.isBeginning) {\n      rewindLastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    } else if (swiper.isEnd) {\n      rewindFirstIndex = 0;\n    }\n  }\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) {\n        swiper.slideTo(stopIndex + increment);\n      } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {\n        swiper.slideTo(rewindLastIndex);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}","let timeout;\nexport default function onResize() {\n  const swiper = this;\n  const {\n    params,\n    el\n  } = swiper;\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const {\n    allowSlideNext,\n    allowSlidePrev,\n    snapGrid\n  } = swiper;\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n  swiper.updateSize();\n  swiper.updateSlides();\n  swiper.updateSlidesClasses();\n  const isVirtualLoop = isVirtual && params.loop;\n  if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides && !isVirtualLoop) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    if (swiper.params.loop && !isVirtual) {\n      swiper.slideToLoop(swiper.realIndex, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n        swiper.autoplay.resume();\n      }\n    }, 500);\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}","export default function onClick(e) {\n  const swiper = this;\n  if (!swiper.enabled) return;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}","export default function onScroll() {\n  const swiper = this;\n  const {\n    wrapperEl,\n    rtlTranslate,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  swiper.previousTranslate = swiper.translate;\n  if (swiper.isHorizontal()) {\n    swiper.translate = -wrapperEl.scrollLeft;\n  } else {\n    swiper.translate = -wrapperEl.scrollTop;\n  }\n  // eslint-disable-next-line\n  if (swiper.translate === 0) swiper.translate = 0;\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, false);\n}","import { processLazyPreloader } from '../../shared/process-lazy-preloader.js';\nexport default function onLoad(e) {\n  const swiper = this;\n  processLazyPreloader(swiper, e.target);\n  swiper.update();\n}","import setBreakpoint from './setBreakpoint.js';\nimport getBreakpoint from './getBreakpoint.js';\nexport default {\n  setBreakpoint,\n  getBreakpoint\n};","import { extend } from '../../shared/utils.js';\nconst isGridEnabled = (swiper, params) => {\n  return swiper.grid && params.grid && params.grid.rows > 1;\n};\nexport default function setBreakpoint() {\n  const swiper = this;\n  const {\n    realIndex,\n    initialized,\n    params,\n    el\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return;\n\n  // Get breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n  if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n  const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n  const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n  const wasMultiRow = isGridEnabled(swiper, params);\n  const isMultiRow = isGridEnabled(swiper, breakpointParams);\n  const wasEnabled = params.enabled;\n  if (wasMultiRow && !isMultiRow) {\n    el.classList.remove(`${params.containerModifierClass}grid`, `${params.containerModifierClass}grid-column`);\n    swiper.emitContainerClasses();\n  } else if (!wasMultiRow && isMultiRow) {\n    el.classList.add(`${params.containerModifierClass}grid`);\n    if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n      el.classList.add(`${params.containerModifierClass}grid-column`);\n    }\n    swiper.emitContainerClasses();\n  }\n\n  // Toggle navigation, pagination, scrollbar\n  ['navigation', 'pagination', 'scrollbar'].forEach(prop => {\n    const wasModuleEnabled = params[prop] && params[prop].enabled;\n    const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n    if (wasModuleEnabled && !isModuleEnabled) {\n      swiper[prop].disable();\n    }\n    if (!wasModuleEnabled && isModuleEnabled) {\n      swiper[prop].enable();\n    }\n  });\n  const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n  const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n  if (directionChanged && initialized) {\n    swiper.changeDirection();\n  }\n  extend(swiper.params, breakpointParams);\n  const isEnabled = swiper.params.enabled;\n  Object.assign(swiper, {\n    allowTouchMove: swiper.params.allowTouchMove,\n    allowSlideNext: swiper.params.allowSlideNext,\n    allowSlidePrev: swiper.params.allowSlidePrev\n  });\n  if (wasEnabled && !isEnabled) {\n    swiper.disable();\n  } else if (!wasEnabled && isEnabled) {\n    swiper.enable();\n  }\n  swiper.currentBreakpoint = breakpoint;\n  swiper.emit('_beforeBreakpoint', breakpointParams);\n  if (needsReLoop && initialized) {\n    swiper.loopDestroy();\n    swiper.loopCreate(realIndex);\n    swiper.updateSlides();\n  }\n  swiper.emit('breakpoint', breakpointParams);\n}","import { getWindow } from 'ssr-window';\nexport default function getBreakpoint(breakpoints, base = 'window', containerEl) {\n  if (!breakpoints || base === 'container' && !containerEl) return undefined;\n  let breakpoint = false;\n  const window = getWindow();\n  const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n  const points = Object.keys(breakpoints).map(point => {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      const minRatio = parseFloat(point.substr(1));\n      const value = currentHeight * minRatio;\n      return {\n        value,\n        point\n      };\n    }\n    return {\n      value: point,\n      point\n    };\n  });\n  points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const {\n      point,\n      value\n    } = points[i];\n    if (base === 'window') {\n      if (window.matchMedia(`(min-width: ${value}px)`).matches) {\n        breakpoint = point;\n      }\n    } else if (value <= containerEl.clientWidth) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}","import addClasses from './addClasses.js';\nimport removeClasses from './removeClasses.js';\nexport default {\n  addClasses,\n  removeClasses\n};","function prepareClasses(entries, prefix) {\n  const resultClasses = [];\n  entries.forEach(item => {\n    if (typeof item === 'object') {\n      Object.keys(item).forEach(classNames => {\n        if (item[classNames]) {\n          resultClasses.push(prefix + classNames);\n        }\n      });\n    } else if (typeof item === 'string') {\n      resultClasses.push(prefix + item);\n    }\n  });\n  return resultClasses;\n}\nexport default function addClasses() {\n  const swiper = this;\n  const {\n    classNames,\n    params,\n    rtl,\n    el,\n    device\n  } = swiper;\n  // prettier-ignore\n  const suffixes = prepareClasses(['initialized', params.direction, {\n    'free-mode': swiper.params.freeMode && params.freeMode.enabled\n  }, {\n    'autoheight': params.autoHeight\n  }, {\n    'rtl': rtl\n  }, {\n    'grid': params.grid && params.grid.rows > 1\n  }, {\n    'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\n  }, {\n    'android': device.android\n  }, {\n    'ios': device.ios\n  }, {\n    'css-mode': params.cssMode\n  }, {\n    'centered': params.cssMode && params.centeredSlides\n  }, {\n    'watch-progress': params.watchSlidesProgress\n  }], params.containerModifierClass);\n  classNames.push(...suffixes);\n  el.classList.add(...classNames);\n  swiper.emitContainerClasses();\n}","export default function removeClasses() {\n  const swiper = this;\n  const {\n    el,\n    classNames\n  } = swiper;\n  el.classList.remove(...classNames);\n  swiper.emitContainerClasses();\n}","function checkOverflow() {\n  const swiper = this;\n  const {\n    isLocked: wasLocked,\n    params\n  } = swiper;\n  const {\n    slidesOffsetBefore\n  } = params;\n  if (slidesOffsetBefore) {\n    const lastSlideIndex = swiper.slides.length - 1;\n    const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\n    swiper.isLocked = swiper.size > lastSlideRightEdge;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n  if (params.allowSlideNext === true) {\n    swiper.allowSlideNext = !swiper.isLocked;\n  }\n  if (params.allowSlidePrev === true) {\n    swiper.allowSlidePrev = !swiper.isLocked;\n  }\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n  }\n  if (wasLocked !== swiper.isLocked) {\n    swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n  }\n}\nexport default {\n  checkOverflow\n};","export default {\n  init: true,\n  direction: 'horizontal',\n  oneWayMovement: false,\n  touchEventsTarget: 'wrapper',\n  initialSlide: 0,\n  speed: 300,\n  cssMode: false,\n  updateOnWindowResize: true,\n  resizeObserver: true,\n  nested: false,\n  createElements: false,\n  enabled: true,\n  focusableElements: 'input, select, option, textarea, button, video, label',\n  // Overrides\n  width: null,\n  height: null,\n  //\n  preventInteractionOnTransition: false,\n  // ssr\n  userAgent: null,\n  url: null,\n  // To support iOS's swipe-to-go-back gesture (when being used in-app).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n  // Autoheight\n  autoHeight: false,\n  // Set wrapper width\n  setWrapperSize: false,\n  // Virtual Translate\n  virtualTranslate: false,\n  // Effects\n  effect: 'slide',\n  // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsBase: 'window',\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerGroup: 1,\n  slidesPerGroupSkip: 0,\n  slidesPerGroupAuto: false,\n  centeredSlides: false,\n  centeredSlidesBounds: false,\n  slidesOffsetBefore: 0,\n  // in px\n  slidesOffsetAfter: 0,\n  // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: true,\n  // Round length\n  roundLengths: false,\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 5,\n  touchMoveStopPropagation: false,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n  // Progress\n  watchSlidesProgress: false,\n  // Cursor\n  grabCursor: false,\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n  // loop\n  loop: false,\n  loopedSlides: null,\n  loopPreventsSliding: true,\n  // rewind\n  rewind: false,\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null,\n  // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n  // Passive Listeners\n  passiveListeners: true,\n  maxBackfaceHiddenSlides: 10,\n  // NS\n  containerModifierClass: 'swiper-',\n  // NEW\n  slideClass: 'swiper-slide',\n  slideActiveClass: 'swiper-slide-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideNextClass: 'swiper-slide-next',\n  slidePrevClass: 'swiper-slide-prev',\n  wrapperClass: 'swiper-wrapper',\n  lazyPreloaderClass: 'swiper-lazy-preloader',\n  lazyPreloadPrevNext: 0,\n  // Callbacks\n  runCallbacksOnInit: true,\n  // Internals\n  _emitClasses: false\n};","import { extend } from '../shared/utils.js';\nexport default function moduleExtendParams(params, allModulesParams) {\n  return function extendParams(obj = {}) {\n    const moduleParamName = Object.keys(obj)[0];\n    const moduleParams = obj[moduleParamName];\n    if (typeof moduleParams !== 'object' || moduleParams === null) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (['navigation', 'pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        auto: true\n      };\n    }\n    if (!(moduleParamName in params && 'enabled' in moduleParams)) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        enabled: true\n      };\n    }\n    if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\n      params[moduleParamName].enabled = true;\n    }\n    if (!params[moduleParamName]) params[moduleParamName] = {\n      enabled: false\n    };\n    extend(allModulesParams, obj);\n  };\n}","import { getDocument } from 'ssr-window';\nimport { createElement, elementChildren, setCSSProperty } from '../../shared/utils.js';\nexport default function Virtual({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      renderExternalUpdate: true,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0\n    }\n  });\n  let cssModeTimeout;\n  const document = getDocument();\n  swiper.virtual = {\n    cache: {},\n    from: undefined,\n    to: undefined,\n    slides: [],\n    offset: 0,\n    slidesGrid: []\n  };\n  const tempDOM = document.createElement('div');\n  function renderSlide(slide, index) {\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    // eslint-disable-next-line\n    let slideEl;\n    if (params.renderSlide) {\n      slideEl = params.renderSlide.call(swiper, slide, index);\n      if (typeof slideEl === 'string') {\n        tempDOM.innerHTML = slideEl;\n        slideEl = tempDOM.children[0];\n      }\n    } else if (swiper.isElement) {\n      slideEl = createElement('swiper-slide');\n    } else {\n      slideEl = createElement('div', swiper.params.slideClass);\n    }\n    slideEl.setAttribute('data-swiper-slide-index', index);\n    if (!params.renderSlide) {\n      slideEl.innerHTML = slide;\n    }\n    if (params.cache) swiper.virtual.cache[index] = slideEl;\n    return slideEl;\n  }\n  function update(force) {\n    const {\n      slidesPerView,\n      slidesPerGroup,\n      centeredSlides,\n      loop: isLoop\n    } = swiper.params;\n    const {\n      addSlidesBefore,\n      addSlidesAfter\n    } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      offset: previousOffset\n    } = swiper.virtual;\n    if (!swiper.params.cssMode) {\n      swiper.updateActiveIndex();\n    }\n    const activeIndex = swiper.activeIndex || 0;\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\n      slidesBefore = (isLoop ? slidesPerView : slidesPerGroup) + addSlidesBefore;\n    }\n    let from = activeIndex - slidesBefore;\n    let to = activeIndex + slidesAfter;\n    if (!isLoop) {\n      from = Math.max(from, 0);\n      to = Math.min(to, slides.length - 1);\n    }\n    let offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n    if (isLoop && activeIndex >= slidesBefore) {\n      from -= slidesBefore;\n      if (!centeredSlides) offset += swiper.slidesGrid[0];\n    } else if (isLoop && activeIndex < slidesBefore) {\n      from = -slidesBefore;\n      if (centeredSlides) offset += swiper.slidesGrid[0];\n    }\n    Object.assign(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n      slidesBefore,\n      slidesAfter\n    });\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      emit('virtualUpdate');\n    }\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.forEach(slideEl => {\n          slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n        });\n      }\n      swiper.updateProgress();\n      emit('virtualUpdate');\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()\n      });\n      if (swiper.params.virtual.renderExternalUpdate) {\n        onRendered();\n      } else {\n        emit('virtualUpdate');\n      }\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    const getSlideIndex = index => {\n      let slideIndex = index;\n      if (index < 0) {\n        slideIndex = slides.length + index;\n      } else if (slideIndex >= slides.length) {\n        // eslint-disable-next-line\n        slideIndex = slideIndex - slides.length;\n      }\n      return slideIndex;\n    };\n    if (force) {\n      swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}, swiper-slide`).forEach(slideEl => {\n        slideEl.remove();\n      });\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          const slideIndex = getSlideIndex(i);\n          swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${slideIndex}\"], swiper-slide[data-swiper-slide-index=\"${slideIndex}\"]`).forEach(slideEl => {\n            slideEl.remove();\n          });\n        }\n      }\n    }\n    const loopFrom = isLoop ? -slides.length : 0;\n    const loopTo = isLoop ? slides.length * 2 : slides.length;\n    for (let i = loopFrom; i < loopTo; i += 1) {\n      if (i >= from && i <= to) {\n        const slideIndex = getSlideIndex(i);\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(slideIndex);\n        } else {\n          if (i > previousTo) appendIndexes.push(slideIndex);\n          if (i < previousFrom) prependIndexes.push(slideIndex);\n        }\n      }\n    }\n    appendIndexes.forEach(index => {\n      swiper.slidesEl.append(renderSlide(slides[index], index));\n    });\n    if (isLoop) {\n      for (let i = prependIndexes.length - 1; i >= 0; i -= 1) {\n        const index = prependIndexes[i];\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      }\n    } else {\n      prependIndexes.sort((a, b) => b - a);\n      prependIndexes.forEach(index => {\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      });\n    }\n    elementChildren(swiper.slidesEl, '.swiper-slide, swiper-slide').forEach(slideEl => {\n      slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n    });\n    onRendered();\n  }\n  function appendSlide(slides) {\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    update(true);\n  }\n  function prependSlide(slides) {\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach(cachedIndex => {\n        const cachedEl = cache[cachedIndex];\n        const cachedElIndex = cachedEl.getAttribute('data-swiper-slide-index');\n        if (cachedElIndex) {\n          cachedEl.setAttribute('data-swiper-slide-index', parseInt(cachedElIndex, 10) + numberOfNewSlides);\n        }\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cachedEl;\n      });\n      swiper.virtual.cache = newCache;\n    }\n    update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  }\n  function removeSlide(slidesIndexes) {\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    update(true);\n    swiper.slideTo(activeIndex, 0);\n  }\n  function removeAllSlides() {\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    update(true);\n    swiper.slideTo(0, 0);\n  }\n  on('beforeInit', () => {\n    if (!swiper.params.virtual.enabled) return;\n    let domSlidesAssigned;\n    if (typeof swiper.passedParams.virtual.slides === 'undefined') {\n      const slides = [...swiper.slidesEl.children].filter(el => el.matches(`.${swiper.params.slideClass}, swiper-slide`));\n      if (slides && slides.length) {\n        swiper.virtual.slides = [...slides];\n        domSlidesAssigned = true;\n        slides.forEach((slideEl, slideIndex) => {\n          slideEl.setAttribute('data-swiper-slide-index', slideIndex);\n          swiper.virtual.cache[slideIndex] = slideEl;\n          slideEl.remove();\n        });\n      }\n    }\n    if (!domSlidesAssigned) {\n      swiper.virtual.slides = swiper.params.virtual.slides;\n    }\n    swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n    if (!swiper.params.initialSlide) {\n      update();\n    }\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode && !swiper._immediateVirtual) {\n      clearTimeout(cssModeTimeout);\n      cssModeTimeout = setTimeout(() => {\n        update();\n      }, 100);\n    } else {\n      update();\n    }\n  });\n  on('init update resize', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode) {\n      setCSSProperty(swiper.wrapperEl, '--swiper-virtual-size', `${swiper.virtualSize}px`);\n    }\n  });\n  Object.assign(swiper.virtual, {\n    appendSlide,\n    prependSlide,\n    removeSlide,\n    removeAllSlides,\n    update\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow, getDocument } from 'ssr-window';\nimport { elementOffset, elementParents } from '../../shared/utils.js';\nexport default function Keyboard({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  const window = getWindow();\n  swiper.keyboard = {\n    enabled: false\n  };\n  extendParams({\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n      pageUpDown: true\n    }\n  });\n  function handle(event) {\n    if (!swiper.enabled) return;\n    const {\n      rtlTranslate: rtl\n    } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    const pageUpDown = swiper.params.keyboard.pageUpDown;\n    const isPageUp = pageUpDown && kc === 33;\n    const isPageDown = pageUpDown && kc === 34;\n    const isArrowLeft = kc === 37;\n    const isArrowRight = kc === 39;\n    const isArrowUp = kc === 38;\n    const isArrowDown = kc === 40;\n    // Directions locks\n    if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (elementParents(swiper.el, `.${swiper.params.slideClass}, swiper-slide`).length > 0 && elementParents(swiper.el, `.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const el = swiper.el;\n      const swiperWidth = el.clientWidth;\n      const swiperHeight = el.clientHeight;\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = elementOffset(el);\n      if (rtl) swiperOffset.left -= el.scrollLeft;\n      const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiperWidth, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiperHeight], [swiperOffset.left + swiperWidth, swiperOffset.top + swiperHeight]];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\n          if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();\n      if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();\n    } else {\n      if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if (isPageDown || isArrowDown) swiper.slideNext();\n      if (isPageUp || isArrowUp) swiper.slidePrev();\n    }\n    emit('keyPress', kc);\n    return undefined;\n  }\n  function enable() {\n    if (swiper.keyboard.enabled) return;\n    document.addEventListener('keydown', handle);\n    swiper.keyboard.enabled = true;\n  }\n  function disable() {\n    if (!swiper.keyboard.enabled) return;\n    document.removeEventListener('keydown', handle);\n    swiper.keyboard.enabled = false;\n  }\n  on('init', () => {\n    if (swiper.params.keyboard.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.keyboard.enabled) {\n      disable();\n    }\n  });\n  Object.assign(swiper.keyboard, {\n    enable,\n    disable\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow } from 'ssr-window';\nimport { now, nextTick } from '../../shared/utils.js';\nexport default function Mousewheel({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarget: 'container',\n      thresholdDelta: null,\n      thresholdTime: null\n    }\n  });\n  swiper.mousewheel = {\n    enabled: false\n  };\n  let timeout;\n  let lastScrollTime = now();\n  let lastEventBeforeSnap;\n  const recentWheelEvents = [];\n  function normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n    if (e.shiftKey && !pX) {\n      // if user scrolls with shift he wants horizontal scroll\n      pX = pY;\n      pY = 0;\n    }\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) {\n        // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else {\n        // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = pX < 1 ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = pY < 1 ? -1 : 1;\n    }\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY\n    };\n  }\n  function handleMouseEnter() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = true;\n  }\n  function handleMouseLeave() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = false;\n  }\n  function animateSlider(newEvent) {\n    if (swiper.params.mousewheel.thresholdDelta && newEvent.delta < swiper.params.mousewheel.thresholdDelta) {\n      // Prevent if delta of wheel scroll delta is below configured threshold\n      return false;\n    }\n    if (swiper.params.mousewheel.thresholdTime && now() - lastScrollTime < swiper.params.mousewheel.thresholdTime) {\n      // Prevent if time between scrolls is below configured threshold\n      return false;\n    }\n\n    // If the movement is NOT big enough and\n    // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n    //   Don't go any further (avoid insignificant scroll movement).\n    if (newEvent.delta >= 6 && now() - lastScrollTime < 60) {\n      // Return false as a default\n      return true;\n    }\n    // If user is scrolling towards the end:\n    //   If the slider hasn't hit the latest slide or\n    //   if the slider is a loop and\n    //   if the slider isn't moving right now:\n    //     Go to next slide and\n    //     emit a scroll event.\n    // Else (the user is scrolling towards the beginning) and\n    // if the slider hasn't hit the first slide or\n    // if the slider is a loop and\n    // if the slider isn't moving right now:\n    //   Go to prev slide and\n    //   emit a scroll event.\n    if (newEvent.direction < 0) {\n      if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n        swiper.slideNext();\n        emit('scroll', newEvent.raw);\n      }\n    } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n      swiper.slidePrev();\n      emit('scroll', newEvent.raw);\n    }\n    // If you got here is because an animation has been triggered so store the current time\n    lastScrollTime = new window.Date().getTime();\n    // Return false as a default\n    return false;\n  }\n  function releaseScroll(newEvent) {\n    const params = swiper.params.mousewheel;\n    if (newEvent.direction < 0) {\n      if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n        // Return true to animate scroll on edges\n        return true;\n      }\n    } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n      // Return true to animate scroll on edges\n      return true;\n    }\n    return false;\n  }\n  function handle(event) {\n    let e = event;\n    let disableParentSwiper = true;\n    if (!swiper.enabled) return;\n    const params = swiper.params.mousewheel;\n    if (swiper.params.cssMode) {\n      e.preventDefault();\n    }\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    const targetElContainsTarget = targetEl && targetEl.contains(e.target);\n    if (!swiper.mouseEntered && !targetElContainsTarget && !params.releaseOnEdges) return true;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n    const data = normalize(e);\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor;else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY;else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n    if (delta === 0) return true;\n    if (params.invert) delta = -delta;\n\n    // Get the scroll positions\n    let positions = swiper.getTranslate() + delta * params.sensitivity;\n    if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();\n    if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate();\n\n    // When loop is true:\n    //     the disableParentSwiper will be true.\n    // When loop is false:\n    //     if the scroll positions is not on edge,\n    //     then the disableParentSwiper will be true.\n    //     if the scroll on edge positions,\n    //     then the disableParentSwiper will be false.\n    disableParentSwiper = swiper.params.loop ? true : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());\n    if (disableParentSwiper && swiper.params.nested) e.stopPropagation();\n    if (!swiper.params.freeMode || !swiper.params.freeMode.enabled) {\n      // Register the new event in a variable which stores the relevant data\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta),\n        raw: event\n      };\n\n      // Keep the most recent events\n      if (recentWheelEvents.length >= 2) {\n        recentWheelEvents.shift(); // only store the last N events\n      }\n\n      const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n      recentWheelEvents.push(newEvent);\n\n      // If there is at least one previous recorded event:\n      //   If direction has changed or\n      //   if the scroll is quicker than the previous one:\n      //     Animate the slider.\n      // Else (this is the first time the wheel is moved):\n      //     Animate the slider.\n      if (prevEvent) {\n        if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta || newEvent.time > prevEvent.time + 150) {\n          animateSlider(newEvent);\n        }\n      } else {\n        animateSlider(newEvent);\n      }\n\n      // If it's time to release the scroll:\n      //   Return now so you don't hit the preventDefault.\n      if (releaseScroll(newEvent)) {\n        return true;\n      }\n    } else {\n      // Freemode or scrollContainer:\n\n      // If we recently snapped after a momentum scroll, then ignore wheel events\n      // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n      // or if it's a new scroll (larger delta or inverse sign as last event before\n      // an end-of-momentum snap).\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta)\n      };\n      const ignoreWheelEvents = lastEventBeforeSnap && newEvent.time < lastEventBeforeSnap.time + 500 && newEvent.delta <= lastEventBeforeSnap.delta && newEvent.direction === lastEventBeforeSnap.direction;\n      if (!ignoreWheelEvents) {\n        lastEventBeforeSnap = undefined;\n        let position = swiper.getTranslate() + delta * params.sensitivity;\n        const wasBeginning = swiper.isBeginning;\n        const wasEnd = swiper.isEnd;\n        if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n        if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n        if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {\n          swiper.updateSlidesClasses();\n        }\n        if (swiper.params.loop) {\n          swiper.loopFix({\n            direction: newEvent.direction < 0 ? 'next' : 'prev',\n            byMousewheel: true\n          });\n        }\n        if (swiper.params.freeMode.sticky) {\n          // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n          // the end of a momentum scroll by storing recent (N=15?) wheel events.\n          // 1. do all N events have decreasing or same (absolute value) delta?\n          // 2. did all N events arrive in the last M (M=500?) msecs?\n          // 3. does the earliest event have an (absolute value) delta that's\n          //    at least P (P=1?) larger than the most recent event's delta?\n          // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n          // If 1-4 are \"yes\" then we're near the end of a momentum scroll deceleration.\n          // Snap immediately and ignore remaining wheel events in this scroll.\n          // See comment above for \"remaining wheel events in this scroll\" determination.\n          // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n          clearTimeout(timeout);\n          timeout = undefined;\n          if (recentWheelEvents.length >= 15) {\n            recentWheelEvents.shift(); // only store the last N events\n          }\n\n          const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n          const firstEvent = recentWheelEvents[0];\n          recentWheelEvents.push(newEvent);\n          if (prevEvent && (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)) {\n            // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n            recentWheelEvents.splice(0);\n          } else if (recentWheelEvents.length >= 15 && newEvent.time - firstEvent.time < 500 && firstEvent.delta - newEvent.delta >= 1 && newEvent.delta <= 6) {\n            // We're at the end of the deceleration of a momentum scroll, so there's no need\n            // to wait for more events. Snap ASAP on the next tick.\n            // Also, because there's some remaining momentum we'll bias the snap in the\n            // direction of the ongoing scroll because it's better UX for the scroll to snap\n            // in the same direction as the scroll instead of reversing to snap.  Therefore,\n            // if it's already scrolled more than 20% in the current direction, keep going.\n            const snapToThreshold = delta > 0 ? 0.8 : 0.2;\n            lastEventBeforeSnap = newEvent;\n            recentWheelEvents.splice(0);\n            timeout = nextTick(() => {\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 0); // no delay; move on next tick\n          }\n\n          if (!timeout) {\n            // if we get here, then we haven't detected the end of a momentum scroll, so\n            // we'll consider a scroll \"complete\" when there haven't been any wheel events\n            // for 500ms.\n            timeout = nextTick(() => {\n              const snapToThreshold = 0.5;\n              lastEventBeforeSnap = newEvent;\n              recentWheelEvents.splice(0);\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 500);\n          }\n        }\n\n        // Emit event\n        if (!ignoreWheelEvents) emit('scroll', e);\n\n        // Stop autoplay\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n        // Return page scroll on edge positions\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n      }\n    }\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    return false;\n  }\n  function events(method) {\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    targetEl[method]('mouseenter', handleMouseEnter);\n    targetEl[method]('mouseleave', handleMouseLeave);\n    targetEl[method]('wheel', handle);\n  }\n  function enable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.removeEventListener('wheel', handle);\n      return true;\n    }\n    if (swiper.mousewheel.enabled) return false;\n    events('addEventListener');\n    swiper.mousewheel.enabled = true;\n    return true;\n  }\n  function disable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.addEventListener(event, handle);\n      return true;\n    }\n    if (!swiper.mousewheel.enabled) return false;\n    events('removeEventListener');\n    swiper.mousewheel.enabled = false;\n    return true;\n  }\n  on('init', () => {\n    if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n      disable();\n    }\n    if (swiper.params.mousewheel.enabled) enable();\n  });\n  on('destroy', () => {\n    if (swiper.params.cssMode) {\n      enable();\n    }\n    if (swiper.mousewheel.enabled) disable();\n  });\n  Object.assign(swiper.mousewheel, {\n    enable,\n    disable\n  });\n}","import createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Navigation({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n      navigationDisabledClass: 'swiper-navigation-disabled'\n    }\n  });\n  swiper.navigation = {\n    nextEl: null,\n    prevEl: null\n  };\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function getEl(el) {\n    let res;\n    if (el && typeof el === 'string' && swiper.isElement) {\n      res = swiper.el.shadowRoot.querySelector(el);\n      if (res) return res;\n    }\n    if (el) {\n      if (typeof el === 'string') res = [...document.querySelectorAll(el)];\n      if (swiper.params.uniqueNavElements && typeof el === 'string' && res.length > 1 && swiper.el.querySelectorAll(el).length === 1) {\n        res = swiper.el.querySelector(el);\n      }\n    }\n    if (el && !res) return el;\n    // if (Array.isArray(res) && res.length === 1) res = res[0];\n    return res;\n  }\n  function toggleEl(el, disabled) {\n    const params = swiper.params.navigation;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (subEl) {\n        subEl.classList[disabled ? 'add' : 'remove'](...params.disabledClass.split(' '));\n        if (subEl.tagName === 'BUTTON') subEl.disabled = disabled;\n        if (swiper.params.watchOverflow && swiper.enabled) {\n          subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n        }\n      }\n    });\n  }\n  function update() {\n    // Update Navigation Buttons\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (swiper.params.loop) {\n      toggleEl(prevEl, false);\n      toggleEl(nextEl, false);\n      return;\n    }\n    toggleEl(prevEl, swiper.isBeginning && !swiper.params.rewind);\n    toggleEl(nextEl, swiper.isEnd && !swiper.params.rewind);\n  }\n  function onPrevClick(e) {\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slidePrev();\n    emit('navigationPrev');\n  }\n  function onNextClick(e) {\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slideNext();\n    emit('navigationNext');\n  }\n  function init() {\n    const params = swiper.params.navigation;\n    swiper.params.navigation = createElementIfNotDefined(swiper, swiper.originalParams.navigation, swiper.params.navigation, {\n      nextEl: 'swiper-button-next',\n      prevEl: 'swiper-button-prev'\n    });\n    if (!(params.nextEl || params.prevEl)) return;\n    let nextEl = getEl(params.nextEl);\n    let prevEl = getEl(params.prevEl);\n    Object.assign(swiper.navigation, {\n      nextEl,\n      prevEl\n    });\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const initButton = (el, dir) => {\n      if (el) {\n        el.addEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      }\n      if (!swiper.enabled && el) {\n        el.classList.add(...params.lockClass.split(' '));\n      }\n    };\n    nextEl.forEach(el => initButton(el, 'next'));\n    prevEl.forEach(el => initButton(el, 'prev'));\n  }\n  function destroy() {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const destroyButton = (el, dir) => {\n      el.removeEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      el.classList.remove(...swiper.params.navigation.disabledClass.split(' '));\n    };\n    nextEl.forEach(el => destroyButton(el, 'next'));\n    prevEl.forEach(el => destroyButton(el, 'prev'));\n  }\n  on('init', () => {\n    if (swiper.params.navigation.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      update();\n    }\n  });\n  on('toEdge fromEdge lock unlock', () => {\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.navigation.lockClass));\n  });\n  on('click', (_s, e) => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const targetEl = e.target;\n    if (swiper.params.navigation.hideOnClick && !prevEl.includes(targetEl) && !nextEl.includes(targetEl)) {\n      if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\n      let isHidden;\n      if (nextEl.length) {\n        isHidden = nextEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      } else if (prevEl.length) {\n        isHidden = prevEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      }\n      if (isHidden === true) {\n        emit('navigationShow');\n      } else {\n        emit('navigationHide');\n      }\n      [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList.toggle(swiper.params.navigation.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    init();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    destroy();\n  };\n  Object.assign(swiper.navigation, {\n    enable,\n    disable,\n    update,\n    init,\n    destroy\n  });\n}","import { createElement, elementChildren } from './utils.js';\nexport default function createElementIfNotDefined(swiper, originalParams, params, checkProps) {\n  if (swiper.params.createElements) {\n    Object.keys(checkProps).forEach(key => {\n      if (!params[key] && params.auto === true) {\n        let element = elementChildren(swiper.el, `.${checkProps[key]}`)[0];\n        if (!element) {\n          element = createElement('div', checkProps[key]);\n          element.className = checkProps[key];\n          swiper.el.append(element);\n        }\n        params[key] = element;\n        originalParams[key] = element;\n      }\n    });\n  }\n  return params;\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nimport { elementIndex, elementOuterSize, elementParents } from '../../shared/utils.js';\nexport default function Pagination({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const pfx = 'swiper-pagination';\n  extendParams({\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets',\n      // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: `${pfx}-bullet`,\n      bulletActiveClass: `${pfx}-bullet-active`,\n      modifierClass: `${pfx}-`,\n      currentClass: `${pfx}-current`,\n      totalClass: `${pfx}-total`,\n      hiddenClass: `${pfx}-hidden`,\n      progressbarFillClass: `${pfx}-progressbar-fill`,\n      progressbarOppositeClass: `${pfx}-progressbar-opposite`,\n      clickableClass: `${pfx}-clickable`,\n      lockClass: `${pfx}-lock`,\n      horizontalClass: `${pfx}-horizontal`,\n      verticalClass: `${pfx}-vertical`,\n      paginationDisabledClass: `${pfx}-disabled`\n    }\n  });\n  swiper.pagination = {\n    el: null,\n    bullets: []\n  };\n  let bulletSize;\n  let dynamicBulletIndex = 0;\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function isPaginationDisabled() {\n    return !swiper.params.pagination.el || !swiper.pagination.el || Array.isArray(swiper.pagination.el) && swiper.pagination.el.length === 0;\n  }\n  function setSideBullets(bulletEl, position) {\n    const {\n      bulletActiveClass\n    } = swiper.params.pagination;\n    if (!bulletEl) return;\n    bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n    if (bulletEl) {\n      bulletEl.classList.add(`${bulletActiveClass}-${position}`);\n      bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n      if (bulletEl) {\n        bulletEl.classList.add(`${bulletActiveClass}-${position}-${position}`);\n      }\n    }\n  }\n  function onBulletClick(e) {\n    const bulletEl = e.target.closest(classesToSelector(swiper.params.pagination.bulletClass));\n    if (!bulletEl) {\n      return;\n    }\n    e.preventDefault();\n    const index = elementIndex(bulletEl) * swiper.params.slidesPerGroup;\n    if (swiper.params.loop) {\n      if (swiper.realIndex === index) return;\n      if (index < swiper.loopedSlides || index > swiper.slides.length - swiper.loopedSlides) {\n        swiper.loopFix({\n          direction: index < swiper.loopedSlides ? 'prev' : 'next',\n          activeSlideIndex: index,\n          slideTo: false\n        });\n      }\n      swiper.slideToLoop(index);\n    } else {\n      swiper.slideTo(index);\n    }\n  }\n  function update() {\n    // Render || Update Pagination bullets/items\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    // Current/Total\n    let current;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const total = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = swiper.params.slidesPerGroup > 1 ? Math.floor(swiper.realIndex / swiper.params.slidesPerGroup) : swiper.realIndex;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        bulletSize = elementOuterSize(bullets[0], swiper.isHorizontal() ? 'width' : 'height', true);\n        el.forEach(subEl => {\n          subEl.style[swiper.isHorizontal() ? 'width' : 'height'] = `${bulletSize * (params.dynamicMainBullets + 4)}px`;\n        });\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          dynamicBulletIndex += current - (swiper.previousIndex || 0);\n          if (dynamicBulletIndex > params.dynamicMainBullets - 1) {\n            dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (dynamicBulletIndex < 0) {\n            dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = Math.max(current - dynamicBulletIndex, 0);\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.forEach(bulletEl => {\n        const classesToRemove = [...['', '-next', '-next-next', '-prev', '-prev-prev', '-main'].map(suffix => `${params.bulletActiveClass}${suffix}`)].map(s => typeof s === 'string' && s.includes(' ') ? s.split(' ') : s).flat();\n        bulletEl.classList.remove(...classesToRemove);\n      });\n      if (el.length > 1) {\n        bullets.forEach(bullet => {\n          const bulletIndex = elementIndex(bullet);\n          if (bulletIndex === current) {\n            bullet.classList.add(...params.bulletActiveClass.split(' '));\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              bullet.classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n            if (bulletIndex === firstIndex) {\n              setSideBullets(bullet, 'prev');\n            }\n            if (bulletIndex === lastIndex) {\n              setSideBullets(bullet, 'next');\n            }\n          }\n        });\n      } else {\n        const bullet = bullets[current];\n        if (bullet) {\n          bullet.classList.add(...params.bulletActiveClass.split(' '));\n        }\n        if (params.dynamicBullets) {\n          const firstDisplayedBullet = bullets[firstIndex];\n          const lastDisplayedBullet = bullets[lastIndex];\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            if (bullets[i]) {\n              bullets[i].classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n          }\n          setSideBullets(firstDisplayedBullet, 'prev');\n          setSideBullets(lastDisplayedBullet, 'next');\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.forEach(bullet => {\n          bullet.style[swiper.isHorizontal() ? offsetProp : 'top'] = `${bulletsOffset}px`;\n        });\n      }\n    }\n    el.forEach((subEl, subElIndex) => {\n      if (params.type === 'fraction') {\n        subEl.querySelectorAll(classesToSelector(params.currentClass)).forEach(fractionEl => {\n          fractionEl.textContent = params.formatFractionCurrent(current + 1);\n        });\n        subEl.querySelectorAll(classesToSelector(params.totalClass)).forEach(totalEl => {\n          totalEl.textContent = params.formatFractionTotal(total);\n        });\n      }\n      if (params.type === 'progressbar') {\n        let progressbarDirection;\n        if (params.progressbarOpposite) {\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n        } else {\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n        }\n        const scale = (current + 1) / total;\n        let scaleX = 1;\n        let scaleY = 1;\n        if (progressbarDirection === 'horizontal') {\n          scaleX = scale;\n        } else {\n          scaleY = scale;\n        }\n        subEl.querySelectorAll(classesToSelector(params.progressbarFillClass)).forEach(progressEl => {\n          progressEl.style.transform = `translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`;\n          progressEl.style.transitionDuration = `${swiper.params.speed}ms`;\n        });\n      }\n      if (params.type === 'custom' && params.renderCustom) {\n        subEl.innerHTML = params.renderCustom(swiper, current + 1, total);\n        if (subElIndex === 0) emit('paginationRender', subEl);\n      } else {\n        if (subElIndex === 0) emit('paginationRender', subEl);\n        emit('paginationUpdate', subEl);\n      }\n      if (swiper.params.watchOverflow && swiper.enabled) {\n        subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n      }\n    });\n  }\n  function render() {\n    // Render Container\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      let numberOfBullets = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      if (swiper.params.freeMode && swiper.params.freeMode.enabled && numberOfBullets > slidesLength) {\n        numberOfBullets = slidesLength;\n      }\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>` + ' / ' + `<span class=\"${params.totalClass}\"></span>`;\n      }\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n    }\n    swiper.pagination.bullets = [];\n    el.forEach(subEl => {\n      if (params.type !== 'custom') {\n        subEl.innerHTML = paginationHTML || '';\n      }\n      if (params.type === 'bullets') {\n        swiper.pagination.bullets.push(...subEl.querySelectorAll(classesToSelector(params.bulletClass)));\n      }\n    });\n    if (params.type !== 'custom') {\n      emit('paginationRender', el[0]);\n    }\n  }\n  function init() {\n    swiper.params.pagination = createElementIfNotDefined(swiper, swiper.originalParams.pagination, swiper.params.pagination, {\n      el: 'swiper-pagination'\n    });\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.shadowRoot.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = [...document.querySelectorAll(params.el)];\n    }\n    if (!el) {\n      el = params.el;\n    }\n    if (!el || el.length === 0) return;\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && Array.isArray(el) && el.length > 1) {\n      el = [...swiper.el.querySelectorAll(params.el)];\n      // check if it belongs to another nested Swiper\n      if (el.length > 1) {\n        el = el.filter(subEl => {\n          if (elementParents(subEl, '.swiper')[0] !== swiper.el) return false;\n          return true;\n        })[0];\n      }\n    }\n    if (Array.isArray(el) && el.length === 1) el = el[0];\n    Object.assign(swiper.pagination, {\n      el\n    });\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (params.type === 'bullets' && params.clickable) {\n        subEl.classList.add(params.clickableClass);\n      }\n      subEl.classList.add(params.modifierClass + params.type);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n      if (params.type === 'bullets' && params.dynamicBullets) {\n        subEl.classList.add(`${params.modifierClass}${params.type}-dynamic`);\n        dynamicBulletIndex = 0;\n        if (params.dynamicMainBullets < 1) {\n          params.dynamicMainBullets = 1;\n        }\n      }\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\n        subEl.classList.add(params.progressbarOppositeClass);\n      }\n      if (params.clickable) {\n        subEl.addEventListener('click', onBulletClick);\n      }\n      if (!swiper.enabled) {\n        subEl.classList.add(params.lockClass);\n      }\n    });\n  }\n  function destroy() {\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => {\n        subEl.classList.remove(params.hiddenClass);\n        subEl.classList.remove(params.modifierClass + params.type);\n        subEl.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n        if (params.clickable) {\n          subEl.removeEventListener('click', onBulletClick);\n        }\n      });\n    }\n    if (swiper.pagination.bullets) swiper.pagination.bullets.forEach(subEl => subEl.classList.remove(...params.bulletActiveClass.split(' ')));\n  }\n  on('changeDirection', () => {\n    if (!swiper.pagination || !swiper.pagination.el) return;\n    const params = swiper.params.pagination;\n    let {\n      el\n    } = swiper.pagination;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.classList.remove(params.horizontalClass, params.verticalClass);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    });\n  });\n  on('init', () => {\n    if (swiper.params.pagination.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      render();\n      update();\n    }\n  });\n  on('activeIndexChange', () => {\n    if (typeof swiper.snapIndex === 'undefined') {\n      update();\n    }\n  });\n  on('snapIndexChange', () => {\n    update();\n  });\n  on('snapGridLengthChange', () => {\n    render();\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.pagination.lockClass));\n    }\n  });\n  on('lock unlock', () => {\n    update();\n  });\n  on('click', (_s, e) => {\n    const targetEl = e.target;\n    let {\n      el\n    } = swiper.pagination;\n    if (!Array.isArray(el)) el = [el].filter(element => !!element);\n    if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && el && el.length > 0 && !targetEl.classList.contains(swiper.params.pagination.bulletClass)) {\n      if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;\n      const isHidden = el[0].classList.contains(swiper.params.pagination.hiddenClass);\n      if (isHidden === true) {\n        emit('paginationShow');\n      } else {\n        emit('paginationHide');\n      }\n      el.forEach(subEl => subEl.classList.toggle(swiper.params.pagination.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.remove(swiper.params.pagination.paginationDisabledClass));\n    }\n    init();\n    render();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.add(swiper.params.pagination.paginationDisabledClass));\n    }\n    destroy();\n  };\n  Object.assign(swiper.pagination, {\n    enable,\n    disable,\n    render,\n    update,\n    init,\n    destroy\n  });\n}","export default function classesToSelector(classes = '') {\n  return `.${classes.trim().replace(/([\\.:!+\\/])/g, '\\\\$1') // eslint-disable-line\n  .replace(/ /g, '.')}`;\n}","import { getDocument } from 'ssr-window';\nimport { createElement, elementOffset, nextTick } from '../../shared/utils.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Scrollbar({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  let isTouched = false;\n  let timeout = null;\n  let dragTimeout = null;\n  let dragStartPos;\n  let dragSize;\n  let trackSize;\n  let divider;\n  extendParams({\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n      scrollbarDisabledClass: 'swiper-scrollbar-disabled',\n      horizontalClass: `swiper-scrollbar-horizontal`,\n      verticalClass: `swiper-scrollbar-vertical`\n    }\n  });\n  swiper.scrollbar = {\n    el: null,\n    dragEl: null\n  };\n  function setTranslate() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n    const progress = swiper.params.loop ? swiper.progressLoop : swiper.progress;\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.transform = `translate3d(${newPos}px, 0, 0)`;\n      dragEl.style.width = `${newSize}px`;\n    } else {\n      dragEl.style.transform = `translate3d(0px, ${newPos}px, 0)`;\n      dragEl.style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(timeout);\n      el.style.opacity = 1;\n      timeout = setTimeout(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n  }\n  function setTransition(duration) {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.dragEl.style.transitionDuration = `${duration}ms`;\n  }\n  function updateSize() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    dragEl.style.width = '';\n    dragEl.style.height = '';\n    trackSize = swiper.isHorizontal() ? el.offsetWidth : el.offsetHeight;\n    divider = swiper.size / (swiper.virtualSize + swiper.params.slidesOffsetBefore - (swiper.params.centeredSlides ? swiper.snapGrid[0] : 0));\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.width = `${dragSize}px`;\n    } else {\n      dragEl.style.height = `${dragSize}px`;\n    }\n    if (divider >= 1) {\n      el.style.display = 'none';\n    } else {\n      el.style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      el.style.opacity = 0;\n    }\n    if (swiper.params.watchOverflow && swiper.enabled) {\n      scrollbar.el.classList[swiper.isLocked ? 'add' : 'remove'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function getPointerPosition(e) {\n    return swiper.isHorizontal() ? e.clientX : e.clientY;\n  }\n  function setDragPosition(e) {\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    let positionRatio;\n    positionRatio = (getPointerPosition(e) - elementOffset(el)[swiper.isHorizontal() ? 'left' : 'top'] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n    const position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  function onDragStart(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    isTouched = true;\n    dragStartPos = e.target === dragEl ? getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n    e.preventDefault();\n    e.stopPropagation();\n    wrapperEl.style.transitionDuration = '100ms';\n    dragEl.style.transitionDuration = '100ms';\n    setDragPosition(e);\n    clearTimeout(dragTimeout);\n    el.style.transitionDuration = '0ms';\n    if (params.hide) {\n      el.style.opacity = 1;\n    }\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = 'none';\n    }\n    emit('scrollbarDragStart', e);\n  }\n  function onDragMove(e) {\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    if (!isTouched) return;\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    setDragPosition(e);\n    wrapperEl.style.transitionDuration = '0ms';\n    el.style.transitionDuration = '0ms';\n    dragEl.style.transitionDuration = '0ms';\n    emit('scrollbarDragMove', e);\n  }\n  function onDragEnd(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    if (!isTouched) return;\n    isTouched = false;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = '';\n      wrapperEl.style.transitionDuration = '';\n    }\n    if (params.hide) {\n      clearTimeout(dragTimeout);\n      dragTimeout = nextTick(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n    emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  }\n  function events(method) {\n    const {\n      scrollbar,\n      params\n    } = swiper;\n    const el = scrollbar.el;\n    if (!el) return;\n    const target = el;\n    const activeListener = params.passiveListeners ? {\n      passive: false,\n      capture: false\n    } : false;\n    const passiveListener = params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    if (!target) return;\n    const eventMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n    target[eventMethod]('pointerdown', onDragStart, activeListener);\n    document[eventMethod]('pointermove', onDragMove, activeListener);\n    document[eventMethod]('pointerup', onDragEnd, passiveListener);\n  }\n  function enableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('on');\n  }\n  function disableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('off');\n  }\n  function init() {\n    const {\n      scrollbar,\n      el: swiperEl\n    } = swiper;\n    swiper.params.scrollbar = createElementIfNotDefined(swiper, swiper.originalParams.scrollbar, swiper.params.scrollbar, {\n      el: 'swiper-scrollbar'\n    });\n    const params = swiper.params.scrollbar;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.shadowRoot.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = document.querySelectorAll(params.el);\n    } else if (!el) {\n      el = params.el;\n    }\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && el.length > 1 && swiperEl.querySelectorAll(params.el).length === 1) {\n      el = swiperEl.querySelector(params.el);\n    }\n    if (el.length > 0) el = el[0];\n    el.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    let dragEl;\n    if (el) {\n      dragEl = el.querySelector(`.${swiper.params.scrollbar.dragClass}`);\n      if (!dragEl) {\n        dragEl = createElement('div', swiper.params.scrollbar.dragClass);\n        el.append(dragEl);\n      }\n    }\n    Object.assign(scrollbar, {\n      el,\n      dragEl\n    });\n    if (params.draggable) {\n      enableDraggable();\n    }\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function destroy() {\n    const params = swiper.params.scrollbar;\n    const el = swiper.scrollbar.el;\n    if (el) {\n      el.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    }\n    disableDraggable();\n  }\n  on('init', () => {\n    if (swiper.params.scrollbar.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      updateSize();\n      setTranslate();\n    }\n  });\n  on('update resize observerUpdate lock unlock', () => {\n    updateSize();\n  });\n  on('setTranslate', () => {\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    setTransition(duration);\n  });\n  on('enable disable', () => {\n    const {\n      el\n    } = swiper.scrollbar;\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n    }\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n    init();\n    updateSize();\n    setTranslate();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n    destroy();\n  };\n  Object.assign(swiper.scrollbar, {\n    enable,\n    disable,\n    updateSize,\n    setTranslate,\n    init,\n    destroy\n  });\n}","import { elementChildren } from '../../shared/utils.js';\nexport default function Parallax({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    parallax: {\n      enabled: false\n    }\n  });\n  const setTransform = (el, progress) => {\n    const {\n      rtl\n    } = swiper;\n    const rtlFactor = rtl ? -1 : 1;\n    const p = el.getAttribute('data-swiper-parallax') || '0';\n    let x = el.getAttribute('data-swiper-parallax-x');\n    let y = el.getAttribute('data-swiper-parallax-y');\n    const scale = el.getAttribute('data-swiper-parallax-scale');\n    const opacity = el.getAttribute('data-swiper-parallax-opacity');\n    const rotate = el.getAttribute('data-swiper-parallax-rotate');\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n    if (x.indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if (y.indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n      el.style.opacity = currentOpacity;\n    }\n    let transform = `translate3d(${x}, ${y}, 0px)`;\n    if (typeof scale !== 'undefined' && scale !== null) {\n      const currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n      transform += ` scale(${currentScale})`;\n    }\n    if (rotate && typeof rotate !== 'undefined' && rotate !== null) {\n      const currentRotate = rotate * progress * -1;\n      transform += ` rotate(${currentRotate}deg)`;\n    }\n    el.style.transform = transform;\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      slides,\n      progress,\n      snapGrid\n    } = swiper;\n    elementChildren(el, '[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(subEl => {\n      setTransform(subEl, progress);\n    });\n    slides.forEach((slideEl, slideIndex) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      slideEl.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale], [data-swiper-parallax-rotate]').forEach(subEl => {\n        setTransform(subEl, slideProgress);\n      });\n    });\n  };\n  const setTransition = (duration = swiper.params.speed) => {\n    const {\n      el\n    } = swiper;\n    el.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(parallaxEl => {\n      let parallaxDuration = parseInt(parallaxEl.getAttribute('data-swiper-parallax-duration'), 10) || duration;\n      if (duration === 0) parallaxDuration = 0;\n      parallaxEl.style.transitionDuration = `${parallaxDuration}ms`;\n    });\n  };\n  on('beforeInit', () => {\n    if (!swiper.params.parallax.enabled) return;\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n  });\n  on('init', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTransition', (_swiper, duration) => {\n    if (!swiper.params.parallax.enabled) return;\n    setTransition(duration);\n  });\n}","import { getWindow } from 'ssr-window';\nimport { elementChildren, elementOffset, elementParents, getTranslate } from '../../shared/utils.js';\nexport default function Zoom({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed'\n    }\n  });\n  swiper.zoom = {\n    enabled: false\n  };\n  let currentScale = 1;\n  let isScaling = false;\n  let fakeGestureTouched;\n  let fakeGestureMoved;\n  const evCache = [];\n  const gesture = {\n    originX: 0,\n    originY: 0,\n    slideEl: undefined,\n    slideWidth: undefined,\n    slideHeight: undefined,\n    imageEl: undefined,\n    imageWrapEl: undefined,\n    maxRatio: 3\n  };\n  const image = {\n    isTouched: undefined,\n    isMoved: undefined,\n    currentX: undefined,\n    currentY: undefined,\n    minX: undefined,\n    minY: undefined,\n    maxX: undefined,\n    maxY: undefined,\n    width: undefined,\n    height: undefined,\n    startX: undefined,\n    startY: undefined,\n    touchesStart: {},\n    touchesCurrent: {}\n  };\n  const velocity = {\n    x: undefined,\n    y: undefined,\n    prevPositionX: undefined,\n    prevPositionY: undefined,\n    prevTime: undefined\n  };\n  let scale = 1;\n  Object.defineProperty(swiper.zoom, 'scale', {\n    get() {\n      return scale;\n    },\n    set(value) {\n      if (scale !== value) {\n        const imageEl = gesture.imageEl;\n        const slideEl = gesture.slideEl;\n        emit('zoomChange', value, imageEl, slideEl);\n      }\n      scale = value;\n    }\n  });\n  function getDistanceBetweenTouches() {\n    if (evCache.length < 2) return 1;\n    const x1 = evCache[0].pageX;\n    const y1 = evCache[0].pageY;\n    const x2 = evCache[1].pageX;\n    const y2 = evCache[1].pageY;\n    const distance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n    return distance;\n  }\n  function getScaleOrigin() {\n    if (evCache.length < 2) return {\n      x: null,\n      y: null\n    };\n    const box = gesture.imageEl.getBoundingClientRect();\n    return [(evCache[0].pageX + (evCache[1].pageX - evCache[0].pageX) / 2 - box.x) / currentScale, (evCache[0].pageY + (evCache[1].pageY - evCache[0].pageY) / 2 - box.y) / currentScale];\n  }\n  function getSlideSelector() {\n    return swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  }\n  function eventWithinSlide(e) {\n    const slideSelector = getSlideSelector();\n    if (e.target.matches(slideSelector)) return true;\n    if (swiper.slides.filter(slideEl => slideEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n  function eventWithinZoomContainer(e) {\n    const selector = `.${swiper.params.zoom.containerClass}`;\n    if (e.target.matches(selector)) return true;\n    if ([...swiper.el.querySelectorAll(selector)].filter(containerEl => containerEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n\n  // Events\n  function onGestureStart(e) {\n    if (e.pointerType === 'mouse') {\n      evCache.splice(0, evCache.length);\n    }\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    evCache.push(e);\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureTouched = true;\n    gesture.scaleStart = getDistanceBetweenTouches();\n    if (!gesture.slideEl) {\n      gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      if (!gesture.slideEl) gesture.slideEl = swiper.slides[swiper.activeIndex];\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n      if (!gesture.imageWrapEl) {\n        gesture.imageEl = undefined;\n        return;\n      }\n      gesture.maxRatio = gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    }\n    if (gesture.imageEl) {\n      const [originX, originY] = getScaleOrigin();\n      gesture.originX = originX;\n      gesture.originY = originY;\n      gesture.imageEl.style.transitionDuration = '0ms';\n    }\n    isScaling = true;\n  }\n  function onGestureChange(e) {\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache[pointerIndex] = e;\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureMoved = true;\n    gesture.scaleMove = getDistanceBetweenTouches();\n    if (!gesture.imageEl) {\n      return;\n    }\n    zoom.scale = gesture.scaleMove / gesture.scaleStart * currentScale;\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = gesture.maxRatio - 1 + (zoom.scale - gesture.maxRatio + 1) ** 0.5;\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = params.minRatio + 1 - (params.minRatio - zoom.scale + 1) ** 0.5;\n    }\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function onGestureEnd(e) {\n    if (!eventWithinSlide(e)) return;\n    if (e.pointerType === 'mouse' && e.type === 'pointerout') return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache.splice(pointerIndex, 1);\n    if (!fakeGestureTouched || !fakeGestureMoved) {\n      return;\n    }\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    if (!gesture.imageEl) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.imageEl.style.transitionDuration = `${swiper.params.speed}ms`;\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n    currentScale = zoom.scale;\n    isScaling = false;\n    if (zoom.scale > 1 && gesture.slideEl) {\n      gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    } else if (zoom.scale <= 1 && gesture.slideEl) {\n      gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    }\n    if (zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n      gesture.slideEl = undefined;\n    }\n  }\n  function onTouchStart(e) {\n    const device = swiper.device;\n    if (!gesture.imageEl) return;\n    if (image.isTouched) return;\n    if (device.android && e.cancelable) e.preventDefault();\n    image.isTouched = true;\n    const event = evCache.length > 0 ? evCache[0] : e;\n    image.touchesStart.x = event.pageX;\n    image.touchesStart.y = event.pageY;\n  }\n  function onTouchMove(e) {\n    if (!eventWithinSlide(e) || !eventWithinZoomContainer(e)) return;\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !gesture.slideEl) return;\n    if (!image.isMoved) {\n      image.width = gesture.imageEl.offsetWidth;\n      image.height = gesture.imageEl.offsetHeight;\n      image.startX = getTranslate(gesture.imageWrapEl, 'x') || 0;\n      image.startY = getTranslate(gesture.imageWrapEl, 'y') || 0;\n      gesture.slideWidth = gesture.slideEl.offsetWidth;\n      gesture.slideHeight = gesture.slideEl.offsetHeight;\n      gesture.imageWrapEl.style.transitionDuration = '0ms';\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.touchesCurrent.x = evCache.length > 0 ? evCache[0].pageX : e.pageX;\n    image.touchesCurrent.y = evCache.length > 0 ? evCache[0].pageY : e.pageY;\n    const touchesDiff = Math.max(Math.abs(image.touchesCurrent.x - image.touchesStart.x), Math.abs(image.touchesCurrent.y - image.touchesStart.y));\n    if (touchesDiff > 5) {\n      swiper.allowClick = false;\n    }\n    if (!image.isMoved && !isScaling) {\n      if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\n        image.isTouched = false;\n        return;\n      }\n      if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    if (e.cancelable) {\n      e.preventDefault();\n    }\n    e.stopPropagation();\n    image.isMoved = true;\n    const scaleRatio = (zoom.scale - currentScale) / (gesture.maxRatio - swiper.params.zoom.minRatio);\n    const {\n      originX,\n      originY\n    } = gesture;\n    image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX + scaleRatio * (image.width - originX * 2);\n    image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY + scaleRatio * (image.height - originY * 2);\n    if (image.currentX < image.minX) {\n      image.currentX = image.minX + 1 - (image.minX - image.currentX + 1) ** 0.8;\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = image.maxX - 1 + (image.currentX - image.maxX + 1) ** 0.8;\n    }\n    if (image.currentY < image.minY) {\n      image.currentY = image.minY + 1 - (image.minY - image.currentY + 1) ** 0.8;\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = image.maxY - 1 + (image.currentY - image.maxY + 1) ** 0.8;\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTouchEnd() {\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n    gesture.imageWrapEl.style.transitionDuration = `${momentumDuration}ms`;\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTransitionEnd() {\n    const zoom = swiper.zoom;\n    if (gesture.slideEl && swiper.activeIndex !== swiper.slides.indexOf(gesture.slideEl)) {\n      if (gesture.imageEl) {\n        gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n      }\n      if (gesture.imageWrapEl) {\n        gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n      }\n      gesture.slideEl.classList.remove(`${swiper.params.zoom.zoomedSlideClass}`);\n      zoom.scale = 1;\n      currentScale = 1;\n      gesture.slideEl = undefined;\n      gesture.imageEl = undefined;\n      gesture.imageWrapEl = undefined;\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n  }\n  function zoomIn(e) {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (e && e.target) {\n        gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      }\n      if (!gesture.slideEl) {\n        if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n          gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n        } else {\n          gesture.slideEl = swiper.slides[swiper.activeIndex];\n        }\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.touchAction = 'none';\n    }\n    gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.pageX;\n      touchY = e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n    const forceZoomRatio = typeof e === 'number' ? e : null;\n    if (currentScale === 1 && forceZoomRatio) {\n      touchX = undefined;\n      touchY = undefined;\n    }\n    zoom.scale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    currentScale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    if (e && !(currentScale === 1 && forceZoomRatio)) {\n      slideWidth = gesture.slideEl.offsetWidth;\n      slideHeight = gesture.slideEl.offsetHeight;\n      offsetX = elementOffset(gesture.slideEl).left + window.scrollX;\n      offsetY = elementOffset(gesture.slideEl).top + window.scrollY;\n      diffX = offsetX + slideWidth / 2 - touchX;\n      diffY = offsetY + slideHeight / 2 - touchY;\n      imageWidth = gesture.imageEl.offsetWidth;\n      imageHeight = gesture.imageEl.offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n      translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\n      translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    if (forceZoomRatio && zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = `translate3d(${translateX}px, ${translateY}px,0)`;\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function zoomOut() {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n        gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n      } else {\n        gesture.slideEl = swiper.slides[swiper.activeIndex];\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = '';\n      swiper.wrapperEl.style.touchAction = '';\n    }\n    zoom.scale = 1;\n    currentScale = 1;\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n    gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    gesture.slideEl = undefined;\n    gesture.originX = 0;\n    gesture.originY = 0;\n  }\n\n  // Toggle Zoom\n  function zoomToggle(e) {\n    const zoom = swiper.zoom;\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoomOut();\n    } else {\n      // Zoom In\n      zoomIn(e);\n    }\n  }\n  function getListeners() {\n    const passiveListener = swiper.params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    const activeListenerWithCapture = swiper.params.passiveListeners ? {\n      passive: false,\n      capture: true\n    } : true;\n    return {\n      passiveListener,\n      activeListenerWithCapture\n    };\n  }\n\n  // Attach/Detach Events\n  function enable() {\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.addEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.addEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.addEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.addEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  function disable() {\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n    zoom.enabled = false;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.removeEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.removeEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.removeEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.removeEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  on('init', () => {\n    if (swiper.params.zoom.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    disable();\n  });\n  on('touchStart', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchStart(e);\n  });\n  on('touchEnd', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchEnd(e);\n  });\n  on('doubleTap', (_s, e) => {\n    if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n      zoomToggle(e);\n    }\n  });\n  on('transitionEnd', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n      onTransitionEnd();\n    }\n  });\n  on('slideChange', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n      onTransitionEnd();\n    }\n  });\n  Object.assign(swiper.zoom, {\n    enable,\n    disable,\n    in: zoomIn,\n    out: zoomOut,\n    toggle: zoomToggle\n  });\n}","/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\nimport { elementTransitionEnd, nextTick } from '../../shared/utils.js';\nexport default function Controller({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide' // or 'container'\n    }\n  });\n\n  swiper.controller = {\n    control: undefined\n  };\n  function LinearSpline(x, y) {\n    const binarySearch = function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }();\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];\n    };\n    return this;\n  }\n  function getInterpolateFunction(c) {\n    swiper.controller.spline = swiper.params.loop ? new LinearSpline(swiper.slidesGrid, c.slidesGrid) : new LinearSpline(swiper.snapGrid, c.snapGrid);\n  }\n  function setTranslate(_t, byController) {\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    const Swiper = swiper.constructor;\n    function setControlledTranslate(c) {\n      if (c.destroyed) return;\n\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        if (Number.isNaN(multiplier) || !Number.isFinite(multiplier)) {\n          multiplier = 1;\n        }\n        controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\n      }\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  }\n  function setTransition(duration, byController) {\n    const Swiper = swiper.constructor;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      if (c.destroyed) return;\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        elementTransitionEnd(c.wrapperEl, () => {\n          if (!controlled) return;\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  }\n  function removeSpline() {\n    if (!swiper.controller.control) return;\n    if (swiper.controller.spline) {\n      swiper.controller.spline = undefined;\n      delete swiper.controller.spline;\n    }\n  }\n  on('beforeInit', () => {\n    if (typeof window !== 'undefined' && (\n    // eslint-disable-line\n    typeof swiper.params.controller.control === 'string' || swiper.params.controller.control instanceof HTMLElement)) {\n      const controlElement = document.querySelector(swiper.params.controller.control);\n      if (controlElement && controlElement.swiper) {\n        swiper.controller.control = controlElement.swiper;\n      } else if (controlElement) {\n        const onControllerSwiper = e => {\n          swiper.controller.control = e.detail[0];\n          swiper.update();\n          controlElement.removeEventListener('init', onControllerSwiper);\n        };\n        controlElement.addEventListener('init', onControllerSwiper);\n      }\n      return;\n    }\n    swiper.controller.control = swiper.params.controller.control;\n  });\n  on('update', () => {\n    removeSpline();\n  });\n  on('resize', () => {\n    removeSpline();\n  });\n  on('observerUpdate', () => {\n    removeSpline();\n  });\n  on('setTranslate', (_s, translate, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTranslate(translate, byController);\n  });\n  on('setTransition', (_s, duration, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTransition(duration, byController);\n  });\n  Object.assign(swiper.controller, {\n    setTranslate,\n    setTransition\n  });\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport { createElement, elementIndex } from '../../shared/utils.js';\nexport default function A11y({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n      slideLabelMessage: '{{index}} / {{slidesLength}}',\n      containerMessage: null,\n      containerRoleDescriptionMessage: null,\n      itemRoleDescriptionMessage: null,\n      slideRole: 'group',\n      id: null\n    }\n  });\n  swiper.a11y = {\n    clicked: false\n  };\n  let liveRegion = null;\n  function notify(message) {\n    const notification = liveRegion;\n    if (notification.length === 0) return;\n    notification.innerHTML = '';\n    notification.innerHTML = message;\n  }\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function getRandomNumber(size = 16) {\n    const randomChar = () => Math.round(16 * Math.random()).toString(16);\n    return 'x'.repeat(size).replace(/x/g, randomChar);\n  }\n  function makeElFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '0');\n    });\n  }\n  function makeElNotFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '-1');\n    });\n  }\n  function addElRole(el, role) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('role', role);\n    });\n  }\n  function addElRoleDescription(el, description) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-roledescription', description);\n    });\n  }\n  function addElControls(el, controls) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-controls', controls);\n    });\n  }\n  function addElLabel(el, label) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-label', label);\n    });\n  }\n  function addElId(el, id) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('id', id);\n    });\n  }\n  function addElLive(el, live) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-live', live);\n    });\n  }\n  function disableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', true);\n    });\n  }\n  function enableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', false);\n    });\n  }\n  function onEnterOrSpaceKey(e) {\n    if (e.keyCode !== 13 && e.keyCode !== 32) return;\n    const params = swiper.params.a11y;\n    const targetEl = e.target;\n    if (swiper.pagination && swiper.pagination.el && (targetEl === swiper.pagination.el || swiper.pagination.el.contains(e.target))) {\n      if (!e.target.matches(classesToSelector(swiper.params.pagination.bulletClass))) return;\n    }\n    if (swiper.navigation && swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        notify(params.lastSlideMessage);\n      } else {\n        notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        notify(params.firstSlideMessage);\n      } else {\n        notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && targetEl.matches(classesToSelector(swiper.params.pagination.bulletClass))) {\n      targetEl.click();\n    }\n  }\n  function updateNavigation() {\n    if (swiper.params.loop || swiper.params.rewind || !swiper.navigation) return;\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (prevEl) {\n      if (swiper.isBeginning) {\n        disableEl(prevEl);\n        makeElNotFocusable(prevEl);\n      } else {\n        enableEl(prevEl);\n        makeElFocusable(prevEl);\n      }\n    }\n    if (nextEl) {\n      if (swiper.isEnd) {\n        disableEl(nextEl);\n        makeElNotFocusable(nextEl);\n      } else {\n        enableEl(nextEl);\n        makeElFocusable(nextEl);\n      }\n    }\n  }\n  function hasPagination() {\n    return swiper.pagination && swiper.pagination.bullets && swiper.pagination.bullets.length;\n  }\n  function hasClickablePagination() {\n    return hasPagination() && swiper.params.pagination.clickable;\n  }\n  function updatePagination() {\n    const params = swiper.params.a11y;\n    if (!hasPagination()) return;\n    swiper.pagination.bullets.forEach(bulletEl => {\n      if (swiper.params.pagination.clickable) {\n        makeElFocusable(bulletEl);\n        if (!swiper.params.pagination.renderBullet) {\n          addElRole(bulletEl, 'button');\n          addElLabel(bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, elementIndex(bulletEl) + 1));\n        }\n      }\n      if (bulletEl.matches(classesToSelector(swiper.params.pagination.bulletActiveClass))) {\n        bulletEl.setAttribute('aria-current', 'true');\n      } else {\n        bulletEl.removeAttribute('aria-current');\n      }\n    });\n  }\n  const initNavEl = (el, wrapperId, message) => {\n    makeElFocusable(el);\n    if (el.tagName !== 'BUTTON') {\n      addElRole(el, 'button');\n      el.addEventListener('keydown', onEnterOrSpaceKey);\n    }\n    addElLabel(el, message);\n    addElControls(el, wrapperId);\n  };\n  const handlePointerDown = () => {\n    swiper.a11y.clicked = true;\n  };\n  const handlePointerUp = () => {\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        if (!swiper.destroyed) {\n          swiper.a11y.clicked = false;\n        }\n      });\n    });\n  };\n  const handleFocus = e => {\n    if (swiper.a11y.clicked) return;\n    const slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n    if (!slideEl || !swiper.slides.includes(slideEl)) return;\n    const isActive = swiper.slides.indexOf(slideEl) === swiper.activeIndex;\n    const isVisible = swiper.params.watchSlidesProgress && swiper.visibleSlides && swiper.visibleSlides.includes(slideEl);\n    if (isActive || isVisible) return;\n    if (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents) return;\n    if (swiper.isHorizontal()) {\n      swiper.el.scrollLeft = 0;\n    } else {\n      swiper.el.scrollTop = 0;\n    }\n    swiper.slideTo(swiper.slides.indexOf(slideEl), 0);\n  };\n  const initSlides = () => {\n    const params = swiper.params.a11y;\n    if (params.itemRoleDescriptionMessage) {\n      addElRoleDescription(swiper.slides, params.itemRoleDescriptionMessage);\n    }\n    if (params.slideRole) {\n      addElRole(swiper.slides, params.slideRole);\n    }\n    const slidesLength = swiper.slides.length;\n    if (params.slideLabelMessage) {\n      swiper.slides.forEach((slideEl, index) => {\n        const slideIndex = swiper.params.loop ? parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10) : index;\n        const ariaLabelMessage = params.slideLabelMessage.replace(/\\{\\{index\\}\\}/, slideIndex + 1).replace(/\\{\\{slidesLength\\}\\}/, slidesLength);\n        addElLabel(slideEl, ariaLabelMessage);\n      });\n    }\n  };\n  const init = () => {\n    const params = swiper.params.a11y;\n    swiper.el.append(liveRegion);\n\n    // Container\n    const containerEl = swiper.el;\n    if (params.containerRoleDescriptionMessage) {\n      addElRoleDescription(containerEl, params.containerRoleDescriptionMessage);\n    }\n    if (params.containerMessage) {\n      addElLabel(containerEl, params.containerMessage);\n    }\n\n    // Wrapper\n    const wrapperEl = swiper.wrapperEl;\n    const wrapperId = params.id || wrapperEl.getAttribute('id') || `swiper-wrapper-${getRandomNumber(16)}`;\n    const live = swiper.params.autoplay && swiper.params.autoplay.enabled ? 'off' : 'polite';\n    addElId(wrapperEl, wrapperId);\n    addElLive(wrapperEl, live);\n\n    // Slide\n    initSlides();\n\n    // Navigation\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => initNavEl(el, wrapperId, params.nextSlideMessage));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => initNavEl(el, wrapperId, params.prevSlideMessage));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.addEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.addEventListener('focus', handleFocus, true);\n    swiper.el.addEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.addEventListener('pointerup', handlePointerUp, true);\n  };\n  function destroy() {\n    if (liveRegion && liveRegion.length > 0) liveRegion.remove();\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.removeEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.removeEventListener('focus', handleFocus, true);\n    swiper.el.removeEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.removeEventListener('pointerup', handlePointerUp, true);\n  }\n  on('beforeInit', () => {\n    liveRegion = createElement('span', swiper.params.a11y.notificationClass);\n    liveRegion.setAttribute('aria-live', 'assertive');\n    liveRegion.setAttribute('aria-atomic', 'true');\n    if (swiper.isElement) {\n      liveRegion.setAttribute('slot', 'container-end');\n    }\n  });\n  on('afterInit', () => {\n    if (!swiper.params.a11y.enabled) return;\n    init();\n  });\n  on('slidesLengthChange snapGridLengthChange slidesGridLengthChange', () => {\n    if (!swiper.params.a11y.enabled) return;\n    initSlides();\n  });\n  on('fromEdge toEdge afterInit lock unlock', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updateNavigation();\n  });\n  on('paginationUpdate', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updatePagination();\n  });\n  on('destroy', () => {\n    if (!swiper.params.a11y.enabled) return;\n    destroy();\n  });\n}","import { getWindow } from 'ssr-window';\nexport default function History({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    history: {\n      enabled: false,\n      root: '',\n      replaceState: false,\n      key: 'slides',\n      keepQuery: false\n    }\n  });\n  let initialized = false;\n  let paths = {};\n  const slugify = text => {\n    return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n  };\n  const getPathValues = urlOverride => {\n    const window = getWindow();\n    let location;\n    if (urlOverride) {\n      location = new URL(urlOverride);\n    } else {\n      location = window.location;\n    }\n    const pathArray = location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return {\n      key,\n      value\n    };\n  };\n  const setHistory = (key, index) => {\n    const window = getWindow();\n    if (!initialized || !swiper.params.history.enabled) return;\n    let location;\n    if (swiper.params.url) {\n      location = new URL(swiper.params.url);\n    } else {\n      location = window.location;\n    }\n    const slide = swiper.slides[index];\n    let value = slugify(slide.getAttribute('data-history'));\n    if (swiper.params.history.root.length > 0) {\n      let root = swiper.params.history.root;\n      if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);\n      value = `${root}/${key ? `${key}/` : ''}${value}`;\n    } else if (!location.pathname.includes(key)) {\n      value = `${key ? `${key}/` : ''}${value}`;\n    }\n    if (swiper.params.history.keepQuery) {\n      value += location.search;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({\n        value\n      }, null, value);\n    } else {\n      window.history.pushState({\n        value\n      }, null, value);\n    }\n  };\n  const scrollToSlide = (speed, value, runCallbacks) => {\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides[i];\n        const slideHistory = slugify(slide.getAttribute('data-history'));\n        if (slideHistory === value) {\n          const index = swiper.getSlideIndex(slide);\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  };\n  const setHistoryPopState = () => {\n    paths = getPathValues(swiper.params.url);\n    scrollToSlide(swiper.params.speed, paths.value, false);\n  };\n  const init = () => {\n    const window = getWindow();\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    initialized = true;\n    paths = getPathValues(swiper.params.url);\n    if (!paths.key && !paths.value) {\n      if (!swiper.params.history.replaceState) {\n        window.addEventListener('popstate', setHistoryPopState);\n      }\n      return;\n    }\n    scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', setHistoryPopState);\n    }\n  };\n  const destroy = () => {\n    const window = getWindow();\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', setHistoryPopState);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.history.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.history.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n}","import { getWindow, getDocument } from 'ssr-window';\nimport { elementChildren } from '../../shared/utils.js';\nexport default function HashNavigation({\n  swiper,\n  extendParams,\n  emit,\n  on\n}) {\n  let initialized = false;\n  const document = getDocument();\n  const window = getWindow();\n  extendParams({\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false\n    }\n  });\n  const onHashChange = () => {\n    emit('hashChange');\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides[swiper.activeIndex].getAttribute('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.getSlideIndex(elementChildren(swiper.slidesEl, `.${swiper.params.slideClass}[data-hash=\"${newHash}\"], swiper-slide[data-hash=\"${newHash}\"]`)[0]);\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  };\n  const setHash = () => {\n    if (!initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, `#${swiper.slides[swiper.activeIndex].getAttribute('data-hash')}` || '');\n      emit('hashSet');\n    } else {\n      const slide = swiper.slides[swiper.activeIndex];\n      const hash = slide.getAttribute('data-hash') || slide.getAttribute('data-history');\n      document.location.hash = hash || '';\n      emit('hashSet');\n    }\n  };\n  const init = () => {\n    if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) return;\n    initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides[i];\n        const slideHash = slide.getAttribute('data-hash') || slide.getAttribute('data-history');\n        if (slideHash === hash) {\n          const index = swiper.getSlideIndex(slide);\n          swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      window.addEventListener('hashchange', onHashChange);\n    }\n  };\n  const destroy = () => {\n    if (swiper.params.hashNavigation.watchState) {\n      window.removeEventListener('hashchange', onHashChange);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHash();\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHash();\n    }\n  });\n}","/* eslint no-underscore-dangle: \"off\" */\n/* eslint no-use-before-define: \"off\" */\nimport { getDocument } from 'ssr-window';\nexport default function Autoplay({\n  swiper,\n  extendParams,\n  on,\n  emit,\n  params\n}) {\n  swiper.autoplay = {\n    running: false,\n    paused: false,\n    timeLeft: 0\n  };\n  extendParams({\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n      pauseOnMouseEnter: false\n    }\n  });\n  let timeout;\n  let raf;\n  let autoplayDelayTotal = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayDelayCurrent = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayTimeLeft;\n  let autoplayStartTime = new Date().getTime;\n  let wasPaused;\n  let isTouched;\n  let pausedByTouch;\n  let touchStartTimeout;\n  let slideChanged;\n  let pausedByInteraction;\n  function onTransitionEnd(e) {\n    if (!swiper || swiper.destroyed || !swiper.wrapperEl) return;\n    if (e.target !== swiper.wrapperEl) return;\n    swiper.wrapperEl.removeEventListener('transitionend', onTransitionEnd);\n    resume();\n  }\n  const calcTimeLeft = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) {\n      wasPaused = true;\n    } else if (wasPaused) {\n      autoplayDelayCurrent = autoplayTimeLeft;\n      wasPaused = false;\n    }\n    const timeLeft = swiper.autoplay.paused ? autoplayTimeLeft : autoplayStartTime + autoplayDelayCurrent - new Date().getTime();\n    swiper.autoplay.timeLeft = timeLeft;\n    emit('autoplayTimeLeft', timeLeft, timeLeft / autoplayDelayTotal);\n    raf = requestAnimationFrame(() => {\n      calcTimeLeft();\n    });\n  };\n  const getSlideDelay = () => {\n    let activeSlideEl;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      activeSlideEl = swiper.slides.filter(slideEl => slideEl.classList.contains('swiper-slide-active'))[0];\n    } else {\n      activeSlideEl = swiper.slides[swiper.activeIndex];\n    }\n    if (!activeSlideEl) return undefined;\n    const currentSlideDelay = parseInt(activeSlideEl.getAttribute('data-swiper-autoplay'), 10);\n    return currentSlideDelay;\n  };\n  const run = delayForce => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    cancelAnimationFrame(raf);\n    calcTimeLeft();\n    let delay = typeof delayForce === 'undefined' ? swiper.params.autoplay.delay : delayForce;\n    autoplayDelayTotal = swiper.params.autoplay.delay;\n    autoplayDelayCurrent = swiper.params.autoplay.delay;\n    const currentSlideDelay = getSlideDelay();\n    if (!Number.isNaN(currentSlideDelay) && currentSlideDelay > 0 && typeof delayForce === 'undefined') {\n      delay = currentSlideDelay;\n      autoplayDelayTotal = currentSlideDelay;\n      autoplayDelayCurrent = currentSlideDelay;\n    }\n    autoplayTimeLeft = delay;\n    const speed = swiper.params.speed;\n    const proceed = () => {\n      if (!swiper || swiper.destroyed) return;\n      if (swiper.params.autoplay.reverseDirection) {\n        if (!swiper.isBeginning || swiper.params.loop || swiper.params.rewind) {\n          swiper.slidePrev(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, speed, true, true);\n          emit('autoplay');\n        }\n      } else {\n        if (!swiper.isEnd || swiper.params.loop || swiper.params.rewind) {\n          swiper.slideNext(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(0, speed, true, true);\n          emit('autoplay');\n        }\n      }\n      if (swiper.params.cssMode) {\n        autoplayStartTime = new Date().getTime();\n        requestAnimationFrame(() => {\n          run();\n        });\n      }\n    };\n    if (delay > 0) {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        proceed();\n      }, delay);\n    } else {\n      requestAnimationFrame(() => {\n        proceed();\n      });\n    }\n\n    // eslint-disable-next-line\n    return delay;\n  };\n  const start = () => {\n    swiper.autoplay.running = true;\n    run();\n    emit('autoplayStart');\n  };\n  const stop = () => {\n    swiper.autoplay.running = false;\n    clearTimeout(timeout);\n    cancelAnimationFrame(raf);\n    emit('autoplayStop');\n  };\n  const pause = (internal, reset) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    clearTimeout(timeout);\n    if (!internal) {\n      pausedByInteraction = true;\n    }\n    const proceed = () => {\n      emit('autoplayPause');\n      if (swiper.params.autoplay.waitForTransition) {\n        swiper.wrapperEl.addEventListener('transitionend', onTransitionEnd);\n      } else {\n        resume();\n      }\n    };\n    swiper.autoplay.paused = true;\n    if (reset) {\n      if (slideChanged) {\n        autoplayTimeLeft = swiper.params.autoplay.delay;\n      }\n      slideChanged = false;\n      proceed();\n      return;\n    }\n    const delay = autoplayTimeLeft || swiper.params.autoplay.delay;\n    autoplayTimeLeft = delay - (new Date().getTime() - autoplayStartTime);\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop) return;\n    if (autoplayTimeLeft < 0) autoplayTimeLeft = 0;\n    proceed();\n  };\n  const resume = () => {\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop || swiper.destroyed || !swiper.autoplay.running) return;\n    autoplayStartTime = new Date().getTime();\n    if (pausedByInteraction) {\n      pausedByInteraction = false;\n      run(autoplayTimeLeft);\n    } else {\n      run();\n    }\n    swiper.autoplay.paused = false;\n    emit('autoplayResume');\n  };\n  const onVisibilityChange = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    const document = getDocument();\n    if (document.visibilityState === 'hidden') {\n      pausedByInteraction = true;\n      pause(true);\n    }\n    if (document.visibilityState === 'visible') {\n      resume();\n    }\n  };\n  const onPointerEnter = e => {\n    if (e.pointerType !== 'mouse') return;\n    pausedByInteraction = true;\n    pause(true);\n  };\n  const onPointerLeave = e => {\n    if (e.pointerType !== 'mouse') return;\n    if (swiper.autoplay.paused) {\n      resume();\n    }\n  };\n  const attachMouseEvents = () => {\n    if (swiper.params.autoplay.pauseOnMouseEnter) {\n      swiper.el.addEventListener('pointerenter', onPointerEnter);\n      swiper.el.addEventListener('pointerleave', onPointerLeave);\n    }\n  };\n  const detachMouseEvents = () => {\n    swiper.el.removeEventListener('pointerenter', onPointerEnter);\n    swiper.el.removeEventListener('pointerleave', onPointerLeave);\n  };\n  const attachDocumentEvents = () => {\n    const document = getDocument();\n    document.addEventListener('visibilitychange', onVisibilityChange);\n  };\n  const detachDocumentEvents = () => {\n    const document = getDocument();\n    document.removeEventListener('visibilitychange', onVisibilityChange);\n  };\n  on('init', () => {\n    if (swiper.params.autoplay.enabled) {\n      attachMouseEvents();\n      attachDocumentEvents();\n      autoplayStartTime = new Date().getTime();\n      start();\n    }\n  });\n  on('destroy', () => {\n    detachMouseEvents();\n    detachDocumentEvents();\n    if (swiper.autoplay.running) {\n      stop();\n    }\n  });\n  on('beforeTransitionStart', (_s, speed, internal) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (internal || !swiper.params.autoplay.disableOnInteraction) {\n      pause(true, true);\n    } else {\n      stop();\n    }\n  });\n  on('sliderFirstMove', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.params.autoplay.disableOnInteraction) {\n      stop();\n      return;\n    }\n    isTouched = true;\n    pausedByTouch = false;\n    pausedByInteraction = false;\n    touchStartTimeout = setTimeout(() => {\n      pausedByInteraction = true;\n      pausedByTouch = true;\n      pause(true);\n    }, 200);\n  });\n  on('touchEnd', () => {\n    if (swiper.destroyed || !swiper.autoplay.running || !isTouched) return;\n    clearTimeout(touchStartTimeout);\n    clearTimeout(timeout);\n    if (swiper.params.autoplay.disableOnInteraction) {\n      pausedByTouch = false;\n      isTouched = false;\n      return;\n    }\n    if (pausedByTouch && swiper.params.cssMode) resume();\n    pausedByTouch = false;\n    isTouched = false;\n  });\n  on('slideChange', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    slideChanged = true;\n  });\n  Object.assign(swiper.autoplay, {\n    start,\n    stop,\n    pause,\n    resume\n  });\n}","import { getDocument } from 'ssr-window';\nimport { elementChildren, isObject } from '../../shared/utils.js';\nexport default function Thumb({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    thumbs: {\n      swiper: null,\n      multipleActiveThumbs: true,\n      autoScrollOffset: 0,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-thumbs'\n    }\n  });\n  let initialized = false;\n  let swiperCreated = false;\n  swiper.thumbs = {\n    swiper: null\n  };\n  function onThumbClick() {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && clickedSlide.classList.contains(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt(thumbsSwiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      swiper.slideToLoop(slideToIndex);\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n  function init() {\n    const {\n      thumbs: thumbsParams\n    } = swiper.params;\n    if (initialized) return false;\n    initialized = true;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Object.assign(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      Object.assign(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper.update();\n    } else if (isObject(thumbsParams.swiper)) {\n      const thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);\n      Object.assign(thumbsSwiperParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);\n      swiperCreated = true;\n    }\n    swiper.thumbs.swiper.el.classList.add(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', onThumbClick);\n    return true;\n  }\n  function update(initial) {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n    if (!swiper.params.thumbs.multipleActiveThumbs) {\n      thumbsToActivate = 1;\n    }\n    thumbsToActivate = Math.floor(thumbsToActivate);\n    thumbsSwiper.slides.forEach(slideEl => slideEl.classList.remove(thumbActiveClass));\n    if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        elementChildren(thumbsSwiper.slidesEl, `[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).forEach(slideEl => {\n          slideEl.classList.add(thumbActiveClass);\n        });\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        if (thumbsSwiper.slides[swiper.realIndex + i]) {\n          thumbsSwiper.slides[swiper.realIndex + i].classList.add(thumbActiveClass);\n        }\n      }\n    }\n    const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n    const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n    if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n      const currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      let direction;\n      if (thumbsSwiper.params.loop) {\n        const newThumbsSlide = thumbsSwiper.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') === `${swiper.realIndex}`)[0];\n        newThumbsIndex = thumbsSwiper.slides.indexOf(newThumbsSlide);\n        direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\n      } else {\n        newThumbsIndex = swiper.realIndex;\n        direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\n      }\n      if (useOffset) {\n        newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup === 1) {\n          // newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n  }\n  on('beforeInit', () => {\n    const {\n      thumbs\n    } = swiper.params;\n    if (!thumbs || !thumbs.swiper) return;\n    if (typeof thumbs.swiper === 'string' || thumbs.swiper instanceof HTMLElement) {\n      const document = getDocument();\n      const getThumbsElementAndInit = () => {\n        const thumbsElement = typeof thumbs.swiper === 'string' ? document.querySelector(thumbs.swiper) : thumbs.swiper;\n        if (thumbsElement && thumbsElement.swiper) {\n          thumbs.swiper = thumbsElement.swiper;\n          init();\n          update(true);\n        } else if (thumbsElement) {\n          const onThumbsSwiper = e => {\n            thumbs.swiper = e.detail[0];\n            thumbsElement.removeEventListener('init', onThumbsSwiper);\n            init();\n            update(true);\n            thumbs.swiper.update();\n            swiper.update();\n          };\n          thumbsElement.addEventListener('init', onThumbsSwiper);\n        }\n        return thumbsElement;\n      };\n      const watchForThumbsToAppear = () => {\n        if (swiper.destroyed) return;\n        const thumbsElement = getThumbsElementAndInit();\n        if (!thumbsElement) {\n          requestAnimationFrame(watchForThumbsToAppear);\n        }\n      };\n      requestAnimationFrame(watchForThumbsToAppear);\n    } else {\n      init();\n      update(true);\n    }\n  });\n  on('slideChange update resize observerUpdate', () => {\n    update();\n  });\n  on('setTransition', (_s, duration) => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    thumbsSwiper.setTransition(duration);\n  });\n  on('beforeDestroy', () => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    if (swiperCreated) {\n      thumbsSwiper.destroy();\n    }\n  });\n  Object.assign(swiper.thumbs, {\n    init,\n    update\n  });\n}","import { elementTransitionEnd, now } from '../../shared/utils.js';\nexport default function freeMode({\n  swiper,\n  extendParams,\n  emit,\n  once\n}) {\n  extendParams({\n    freeMode: {\n      enabled: false,\n      momentum: true,\n      momentumRatio: 1,\n      momentumBounce: true,\n      momentumBounceRatio: 1,\n      momentumVelocityRatio: 1,\n      sticky: false,\n      minimumVelocity: 0.02\n    }\n  });\n  function onTouchStart() {\n    const translate = swiper.getTranslate();\n    swiper.setTranslate(translate);\n    swiper.setTransition(0);\n    swiper.touchEventsData.velocities.length = 0;\n    swiper.freeMode.onTouchEnd({\n      currentPos: swiper.rtl ? swiper.translate : -swiper.translate\n    });\n  }\n  function onTouchMove() {\n    const {\n      touchEventsData: data,\n      touches\n    } = swiper;\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: now()\n    });\n  }\n  function onTouchEnd({\n    currentPos\n  }) {\n    const {\n      params,\n      wrapperEl,\n      rtlTranslate: rtl,\n      snapGrid,\n      touchEventsData: data\n    } = swiper;\n    // Time diff\n    const touchEndTime = now();\n    const timeDiff = touchEndTime - data.touchStartTime;\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n    if (params.freeMode.momentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeMode.minimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || now() - lastMoveEvent.time > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeMode.momentumVelocityRatio;\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeMode.momentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeMode.momentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeMode.sticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n        if (params.freeMode.sticky) {\n          // If freeMode.sticky is active and the user ends a swipe with a slow-velocity\n          // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n          // It's easy to see this when simulating touch with mouse events. To fix this,\n          // limit single-slide swipes to the default slide duration. This also has the\n          // nice side effect of matching slide speed if the user stopped moving before\n          // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n          // For faster swipes, also apply limits (albeit higher ones).\n          const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n          const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n          if (moveDistance < currentSlideSize) {\n            momentumDuration = params.speed;\n          } else if (moveDistance < 2 * currentSlideSize) {\n            momentumDuration = params.speed * 1.5;\n          } else {\n            momentumDuration = params.speed * 2.5;\n          }\n        }\n      } else if (params.freeMode.sticky) {\n        swiper.slideToClosest();\n        return;\n      }\n      if (params.freeMode.momentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        elementTransitionEnd(wrapperEl, () => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          emit('momentumBounce');\n          swiper.setTransition(params.speed);\n          setTimeout(() => {\n            swiper.setTranslate(afterBouncePosition);\n            elementTransitionEnd(wrapperEl, () => {\n              if (!swiper || swiper.destroyed) return;\n              swiper.transitionEnd();\n            });\n          }, 0);\n        });\n      } else if (swiper.velocity) {\n        emit('_freeModeNoMomentumRelease');\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          elementTransitionEnd(wrapperEl, () => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeMode.sticky) {\n      swiper.slideToClosest();\n      return;\n    } else if (params.freeMode) {\n      emit('_freeModeNoMomentumRelease');\n    }\n    if (!params.freeMode.momentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n  }\n  Object.assign(swiper, {\n    freeMode: {\n      onTouchStart,\n      onTouchMove,\n      onTouchEnd\n    }\n  });\n}","import appendSlide from './methods/appendSlide.js';\nimport prependSlide from './methods/prependSlide.js';\nimport addSlide from './methods/addSlide.js';\nimport removeSlide from './methods/removeSlide.js';\nimport removeAllSlides from './methods/removeAllSlides.js';\nexport default function Manipulation({\n  swiper\n}) {\n  Object.assign(swiper, {\n    appendSlide: appendSlide.bind(swiper),\n    prependSlide: prependSlide.bind(swiper),\n    addSlide: addSlide.bind(swiper),\n    removeSlide: removeSlide.bind(swiper),\n    removeAllSlides: removeAllSlides.bind(swiper)\n  });\n}","export default function appendSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  const appendElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.append(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.append(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) appendElement(slides[i]);\n    }\n  } else {\n    appendElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n}","export default function prependSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  const prependElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.prepend(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.prepend(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) prependElement(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    prependElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}","export default function addSlide(index, slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.recalcSlides();\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides[i];\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) slidesEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    slidesEl.append(slides);\n  }\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    slidesEl.append(slidesBuffer[i]);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function removeSlide(slidesIndexes) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function removeAllSlides() {\n  const swiper = this;\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}","import effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFade({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    fadeEffect: {\n      crossFade: false\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides\n    } = swiper;\n    const params = swiper.params.fadeEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = swiper.slides[i];\n      const offset = slideEl.swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs(slideEl.progress), 0) : 1 + Math.min(Math.max(slideEl.progress, -1), 0);\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.opacity = slideOpacity;\n      targetEl.style.transform = `translate3d(${tx}px, ${ty}px, 0px)`;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'fade',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","export default function effectInit(params) {\n  const {\n    effect,\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams,\n    perspective,\n    recreateShadows,\n    getEffectParams\n  } = params;\n  on('beforeInit', () => {\n    if (swiper.params.effect !== effect) return;\n    swiper.classNames.push(`${swiper.params.containerModifierClass}${effect}`);\n    if (perspective && perspective()) {\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n    }\n    const overwriteParamsResult = overwriteParams ? overwriteParams() : {};\n    Object.assign(swiper.params, overwriteParamsResult);\n    Object.assign(swiper.originalParams, overwriteParamsResult);\n  });\n  on('setTranslate', () => {\n    if (swiper.params.effect !== effect) return;\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    if (swiper.params.effect !== effect) return;\n    setTransition(duration);\n  });\n  on('transitionEnd', () => {\n    if (swiper.params.effect !== effect) return;\n    if (recreateShadows) {\n      if (!getEffectParams || !getEffectParams().slideShadows) return;\n      // remove shadows\n      swiper.slides.forEach(slideEl => {\n        slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => shadowEl.remove());\n      });\n      // create new one\n      recreateShadows();\n    }\n  });\n  let requireUpdateOnVirtual;\n  on('virtualUpdate', () => {\n    if (swiper.params.effect !== effect) return;\n    if (!swiper.slides.length) {\n      requireUpdateOnVirtual = true;\n    }\n    requestAnimationFrame(() => {\n      if (requireUpdateOnVirtual && swiper.slides && swiper.slides.length) {\n        setTranslate();\n        requireUpdateOnVirtual = false;\n      }\n    });\n  });\n}","import { getSlideTransformEl } from './utils.js';\nexport default function effectTarget(effectParams, slideEl) {\n  const transformEl = getSlideTransformEl(slideEl);\n  if (transformEl !== slideEl) {\n    transformEl.style.backfaceVisibility = 'hidden';\n    transformEl.style['-webkit-backface-visibility'] = 'hidden';\n  }\n  return transformEl;\n}","import { elementTransitionEnd } from './utils.js';\nexport default function effectVirtualTransitionEnd({\n  swiper,\n  duration,\n  transformElements,\n  allSlides\n}) {\n  const {\n    activeIndex\n  } = swiper;\n  const getSlide = el => {\n    if (!el.parentElement) {\n      // assume shadow root\n      const slide = swiper.slides.filter(slideEl => slideEl.shadowEl && slideEl.shadowEl === el.parentNode)[0];\n      return slide;\n    }\n    return el.parentElement;\n  };\n  if (swiper.params.virtualTranslate && duration !== 0) {\n    let eventTriggered = false;\n    let transitionEndTarget;\n    if (allSlides) {\n      transitionEndTarget = transformElements;\n    } else {\n      transitionEndTarget = transformElements.filter(transformEl => {\n        const el = transformEl.classList.contains('swiper-slide-transform') ? getSlide(transformEl) : transformEl;\n        return swiper.getSlideIndex(el) === activeIndex;\n      });\n    }\n    transitionEndTarget.forEach(el => {\n      elementTransitionEnd(el, () => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const evt = new window.CustomEvent('transitionend', {\n          bubbles: true,\n          cancelable: true\n        });\n        swiper.wrapperEl.dispatchEvent(evt);\n      });\n    });\n  }\n}","import effectInit from '../../shared/effect-init.js';\nimport { createElement } from '../../shared/utils.js';\nexport default function EffectCube({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94\n    }\n  });\n  const createSlideShadows = (slideEl, progress, isHorizontal) => {\n    let shadowBefore = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}`);\n      slideEl.append(shadowBefore);\n    }\n    if (!shadowAfter) {\n      shadowAfter = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}`);\n      slideEl.append(shadowAfter);\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // create new ones\n    const isHorizontal = swiper.isHorizontal();\n    swiper.slides.forEach(slideEl => {\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      createSlideShadows(slideEl, progress, isHorizontal);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      wrapperEl,\n      slides,\n      width: swiperWidth,\n      height: swiperHeight,\n      rtlTranslate: rtl,\n      size: swiperSize,\n      browser\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl = swiper.slidesEl.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          swiper.slidesEl.append(cubeShadowEl);\n        }\n        cubeShadowEl.style.height = `${swiperWidth}px`;\n      } else {\n        cubeShadowEl = el.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          el.append(cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + round * 4 * swiperSize;\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = 3 * swiperSize + swiperSize * 4 * round;\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = slideIndex * 90 + progress * 90;\n        if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\n      }\n      slideEl.style.transform = transform;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, isHorizontal);\n      }\n    }\n    wrapperEl.style.transformOrigin = `50% 50% -${swiperSize / 2}px`;\n    wrapperEl.style['-webkit-transform-origin'] = `50% 50% -${swiperSize / 2}px`;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl.style.transform = `translate3d(0px, ${swiperWidth / 2 + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`;\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n        const multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        cubeShadowEl.style.transform = `scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${swiperHeight / 2 + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`;\n      }\n    }\n    const zFactor = (browser.isSafari || browser.isWebView) && browser.needPerspectiveFix ? -swiperSize / 2 : 0;\n    wrapperEl.style.transform = `translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`;\n    wrapperEl.style.setProperty('--swiper-cube-translate-z', `${zFactor}px`);\n  };\n  const setTransition = duration => {\n    const {\n      el,\n      slides\n    } = swiper;\n    slides.forEach(slideEl => {\n      slideEl.style.transitionDuration = `${duration}ms`;\n      slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(subEl => {\n        subEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      const shadowEl = el.querySelector('.swiper-cube-shadow');\n      if (shadowEl) shadowEl.style.transitionDuration = `${duration}ms`;\n    }\n  };\n  effectInit({\n    effect: 'cube',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.cubeEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      resistanceRatio: 0,\n      spaceBetween: 0,\n      centeredSlides: false,\n      virtualTranslate: true\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFlip({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true\n    }\n  });\n  const createSlideShadows = (slideEl, progress, params) => {\n    let shadowBefore = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createShadow(params, slideEl, swiper.isHorizontal() ? 'left' : 'top');\n    }\n    if (!shadowAfter) {\n      shadowAfter = createShadow(params, slideEl, swiper.isHorizontal() ? 'right' : 'bottom');\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // Set shadows\n    const params = swiper.params.flipEffect;\n    swiper.slides.forEach(slideEl => {\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      createSlideShadows(slideEl, progress, params);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      rtlTranslate: rtl\n    } = swiper;\n    const params = swiper.params.flipEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, params);\n      }\n      const transform = `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'flip',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.flipEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import { createElement, getSlideTransformEl } from './utils.js';\nexport default function createShadow(params, slideEl, side) {\n  const shadowClass = `swiper-slide-shadow${side ? `-${side}` : ''}`;\n  const shadowContainer = getSlideTransformEl(slideEl);\n  let shadowEl = shadowContainer.querySelector(`.${shadowClass}`);\n  if (!shadowEl) {\n    shadowEl = createElement('div', `swiper-slide-shadow${side ? `-${side}` : ''}`);\n    shadowContainer.append(shadowEl);\n  }\n  return shadowEl;\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCoverflow({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      scale: 1,\n      modifier: 1,\n      slideShadows: true\n    }\n  });\n  const setTranslate = () => {\n    const {\n      width: swiperWidth,\n      height: swiperHeight,\n      slides,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const slideEl = slides[i];\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = slideEl.swiperSlideOffset;\n      const centerOffset = (center - slideOffset - slideSize / 2) / slideSize;\n      const offsetMultiplier = typeof params.modifier === 'function' ? params.modifier(centerOffset) : centerOffset * params.modifier;\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n      let stretch = params.stretch;\n      // Allow percentage to make a relative stretch for responsive sliders\n      if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n        stretch = parseFloat(params.stretch) / 100 * slideSize;\n      }\n      let translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\n      let translateX = isHorizontal ? stretch * offsetMultiplier : 0;\n      let scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier);\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n      if (Math.abs(scale) < 0.001) scale = 0;\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(${scale})`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = slideTransform;\n      slideEl.style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBeforeEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n        let shadowAfterEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n        if (!shadowBeforeEl) {\n          shadowBeforeEl = createShadow(params, slideEl, isHorizontal ? 'left' : 'top');\n        }\n        if (!shadowAfterEl) {\n          shadowAfterEl = createShadow(params, slideEl, isHorizontal ? 'right' : 'bottom');\n        }\n        if (shadowBeforeEl) shadowBeforeEl.style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if (shadowAfterEl) shadowAfterEl.style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n  };\n  effectInit({\n    effect: 'coverflow',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCreative({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    creativeEffect: {\n      limitProgress: 1,\n      shadowPerProgress: false,\n      progressMultiplier: 1,\n      perspective: true,\n      prev: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      },\n      next: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      }\n    }\n  });\n  const getTranslateValue = value => {\n    if (typeof value === 'string') return value;\n    return `${value}px`;\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      wrapperEl,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.creativeEffect;\n    const {\n      progressMultiplier: multiplier\n    } = params;\n    const isCenteredSlides = swiper.params.centeredSlides;\n    if (isCenteredSlides) {\n      const margin = slidesSizesGrid[0] / 2 - swiper.params.slidesOffsetBefore || 0;\n      wrapperEl.style.transform = `translateX(calc(50% - ${margin}px))`;\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideEl.progress, -params.limitProgress), params.limitProgress);\n      let originalProgress = progress;\n      if (!isCenteredSlides) {\n        originalProgress = Math.min(Math.max(slideEl.originalProgress, -params.limitProgress), params.limitProgress);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const t = [swiper.params.cssMode ? -offset - swiper.translate : -offset, 0, 0];\n      const r = [0, 0, 0];\n      let custom = false;\n      if (!swiper.isHorizontal()) {\n        t[1] = t[0];\n        t[0] = 0;\n      }\n      let data = {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        scale: 1,\n        opacity: 1\n      };\n      if (progress < 0) {\n        data = params.next;\n        custom = true;\n      } else if (progress > 0) {\n        data = params.prev;\n        custom = true;\n      }\n      // set translate\n      t.forEach((value, index) => {\n        t[index] = `calc(${value}px + (${getTranslateValue(data.translate[index])} * ${Math.abs(progress * multiplier)}))`;\n      });\n      // set rotates\n      r.forEach((value, index) => {\n        r[index] = data.rotate[index] * Math.abs(progress * multiplier);\n      });\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const translateString = t.join(', ');\n      const rotateString = `rotateX(${r[0]}deg) rotateY(${r[1]}deg) rotateZ(${r[2]}deg)`;\n      const scaleString = originalProgress < 0 ? `scale(${1 + (1 - data.scale) * originalProgress * multiplier})` : `scale(${1 - (1 - data.scale) * originalProgress * multiplier})`;\n      const opacityString = originalProgress < 0 ? 1 + (1 - data.opacity) * originalProgress * multiplier : 1 - (1 - data.opacity) * originalProgress * multiplier;\n      const transform = `translate3d(${translateString}) ${rotateString} ${scaleString}`;\n\n      // Set shadows\n      if (custom && data.shadow || !custom) {\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl && data.shadow) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) {\n          const shadowOpacity = params.shadowPerProgress ? progress * (1 / params.limitProgress) : progress;\n          shadowEl.style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);\n        }\n      }\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n      targetEl.style.opacity = opacityString;\n      if (data.origin) {\n        targetEl.style.transformOrigin = data.origin;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'creative',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => swiper.params.creativeEffect.perspective,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCards({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cardsEffect: {\n      slideShadows: true,\n      rotate: true,\n      perSlideRotate: 2,\n      perSlideOffset: 8\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides,\n      activeIndex\n    } = swiper;\n    const params = swiper.params.cardsEffect;\n    const {\n      startTranslate,\n      isTouched\n    } = swiper.touchEventsData;\n    const currentTranslate = swiper.translate;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideProgress, -4), 4);\n      let offset = slideEl.swiperSlideOffset;\n      if (swiper.params.centeredSlides && !swiper.params.cssMode) {\n        swiper.wrapperEl.style.transform = `translateX(${swiper.minTranslate()}px)`;\n      }\n      if (swiper.params.centeredSlides && swiper.params.cssMode) {\n        offset -= slides[0].swiperSlideOffset;\n      }\n      let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let tY = 0;\n      const tZ = -100 * Math.abs(progress);\n      let scale = 1;\n      let rotate = -params.perSlideRotate * progress;\n      let tXAdd = params.perSlideOffset - Math.abs(progress) * 0.75;\n      const slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;\n      const isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n      const isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n      if (isSwipeToNext || isSwipeToPrev) {\n        const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;\n        rotate += -28 * progress * subProgress;\n        scale += -0.5 * subProgress;\n        tXAdd += 96 * subProgress;\n        tY = `${-25 * subProgress * Math.abs(progress)}%`;\n      }\n      if (progress < 0) {\n        // next\n        tX = `calc(${tX}px + (${tXAdd * Math.abs(progress)}%))`;\n      } else if (progress > 0) {\n        // prev\n        tX = `calc(${tX}px + (-${tXAdd * Math.abs(progress)}%))`;\n      } else {\n        tX = `${tX}px`;\n      }\n      if (!swiper.isHorizontal()) {\n        const prevY = tY;\n        tY = tX;\n        tX = prevY;\n      }\n      const scaleString = progress < 0 ? `${1 + (1 - scale) * progress}` : `${1 - (1 - scale) * progress}`;\n      const transform = `\n        translate3d(${tX}, ${tY}, ${tZ}px)\n        rotateZ(${params.rotate ? rotate : 0}deg)\n        scale(${scaleString})\n      `;\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) shadowEl.style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'cards',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","\nconst menuHomeEl = document.querySelector(\".menu__home\");\nconst menuShoppingEl = document.querySelector(\".menu__shopping\");\n\nconst setCurrentPage = () => {\nconst currentPageName = window.location.pathname;\n// console.log(currentPageName);\n\n    if (currentPageName === '/index.html') {\n        // console.log('Ми на домашній сторінці');\n        menuHomeEl.classList.add(\"current\");\n        return;\n    } \n       menuShoppingEl.classList.add(\"current\");\n        // console.log('Ми на shopping-list');\n    \n};\n\nsetCurrentPage();\n\n\n\n\n\n\n\n\n","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"2FRjq\\\":\\\"shopping-list.094a5689.js\\\",\\\"6KBcx\\\":\\\"fund1@1x.b30a7f10.png\\\",\\\"bipQf\\\":\\\"fund1@2x.9de4df69.png\\\",\\\"8KuVH\\\":\\\"fund2@1x.b5817cc1.png\\\",\\\"aAzYn\\\":\\\"fund2@2x.7b2bd102.png\\\",\\\"6tGJv\\\":\\\"fund3@1x.6e2f5b67.png\\\",\\\"3subC\\\":\\\"fund3@2x.1caa8a5a.png\\\",\\\"eQAOO\\\":\\\"fund4@1x.1ebb8f8e.png\\\",\\\"dWQcX\\\":\\\"fund4@2x.215b18f4.png\\\",\\\"0jBAt\\\":\\\"fund5@1x.5695044b.png\\\",\\\"i95HH\\\":\\\"fund5@2x.e039e962.png\\\",\\\"jOB6N\\\":\\\"fund6@1x.c6aa65dc.png\\\",\\\"kDFGr\\\":\\\"fund6@2x.a6d72706.png\\\",\\\"awhUR\\\":\\\"fund7@1x.52902507.png\\\",\\\"hWVHo\\\":\\\"fund7@2x.c8266743.png\\\",\\\"4rwVK\\\":\\\"fund8@1x.e7851bc8.png\\\",\\\"kGDcZ\\\":\\\"fund8@2x.2b602f63.png\\\",\\\"1BvA6\\\":\\\"fund9@1x.78924eac.png\\\",\\\"jHOae\\\":\\\"fund9@2x.ecb1bae6.png\\\"}\"));"],"names":["$0380ce8f1f064ccc$export$6503ec6e8aabbaf","$0380ce8f1f064ccc$export$f7ad0328861e2f03","$0380ce8f1f064ccc$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","$8ebe3429075cb445$var$refs","openAuthorizationBtn","document","querySelector","closeAuthorizationBtn","modalAuthorization","buttonSignUp","buttonSignIn","buttonSubmit","formInputs","inputName","labelName","inputMail","labelMail","inputPassword","labelPassword","$8ebe3429075cb445$var$toggleModal","classList","toggle","addEventListener","remove","add","textContent","innerHTML","value","$17f8071d162f96bc$var$scrollUp","$17f8071d162f96bc$var$scrollUpSvgPath","$17f8071d162f96bc$var$pathLength","getTotalLength","style","strokeDasharray","transition","$17f8071d162f96bc$var$getTop","window","pageYOffset","documentElement","scrollTop","height","scrollHeight","innerHeight","dashoffset","strokeDashoffset","$17f8071d162f96bc$var$updateDashoffset","scrollTo","top","behavior","$74798ae935166997$var$switchDayNight","$74798ae935166997$var$bookNameArray","querySelectorAll","$74798ae935166997$var$addDarkTheme","body","backgroundColor","forEach","book","color","$74798ae935166997$var$removeDarkTheme","checked","localStorage","setItem","getItem","$gNC7o","parcelRequire","$06470ecdd856c5ab$var$supportListEl","$06470ecdd856c5ab$var$btnSwiperEl","$06470ecdd856c5ab$var$position","$06470ecdd856c5ab$var$markupSetFunds","fundArray","map","el","String","padStart","$1oVY8","markupCardFund","join","$06470ecdd856c5ab$var$swiper","$2pSj8","default","direction","spaceBetween","slidesPerView","rewind","navigation","nextEl","plugins","scrollContainer","update","slideNext","$c3aeca6f491dea63$export$447284bd0b7b482a","title","url","img","img2","module","exports","getBundleURL","resolve","$7dd1ddf6834435ca$export$bdfd709ae4826697","$7dd1ddf6834435ca$var$bundleURL","$7dd1ddf6834435ca$var$getBaseURL","replace","err","matches","stack","match","$7dd1ddf6834435ca$var$getBundleURL","$1054ffbfb2399630$export$52e5b057674ef9cf","position","$58sFY","$1c280aeb2839a22d$var$prototypes","$3lgo1","$42aG2","$lUFJw","$59lEw","$itDrZ","$aSak5","$61axM","$lrPYL","$lWyhG","$h5TWE","$9Vwwo","$1c280aeb2839a22d$var$extendedDefaults","$1c280aeb2839a22d$var$Swiper","constructor","args","params","prototype","toString","call","slice","$1EjTE","extend","document1","getDocument","swipers","containerEl","newParams","push","swiper","this","__swiper__","support","$ledMJ","getSupport","device","$4rC3V","getDevice","userAgent","browser","$lhE85","getBrowser","eventsListeners","eventsAnyListeners","modules","__modules__","Array","isArray","allModulesParams","mod","extendParams","$6gDqh","on","bind","once","off","emit","swiperParams","$959nv","originalParams","passedParams","eventName","onAny","assign","enabled","classNames","slides","slidesGrid","snapGrid","slidesSizesGrid","isHorizontal","isVertical","activeIndex","realIndex","isBeginning","isEnd","translate","previousTranslate","progress","velocity","animating","cssOverflowAdjustment","Math","trunc","allowSlideNext","allowSlidePrev","touchEventsData","isTouched","undefined","isMoved","allowTouchCallbacks","touchStartTime","isScrolling","currentTranslate","startTranslate","allowThresholdMove","focusableElements","lastClickTime","clickTimeout","velocities","allowMomentumBounce","startMoving","evCache","allowClick","allowTouchMove","touches","startX","startY","currentX","currentY","diff","imagesToLoad","imagesLoaded","init","getSlideIndex","slideEl","slidesEl","elementChildren","slideClass","firstSlideIndex","elementIndex","getSlideIndexByData","index","filter","getAttribute","recalcSlides","enable","grabCursor","setGrabCursor","disable","unsetGrabCursor","setProgress","speed","min","max","minTranslate","current","maxTranslate","translateTo","updateActiveIndex","updateSlidesClasses","emitContainerClasses","_emitClasses","cls","className","split","indexOf","containerModifierClass","getSlideClasses","destroyed","emitSlidesClasses","updates","slidesPerViewDynamic","view","exact","size","swiperSize","spv","centeredSlides","breakLoop","slideSize","swiperSlideSize","setTranslate","translateValue","rtlTranslate","newTranslate","translated","breakpoints","setBreakpoint","imageEl","complete","$7eaCI","processLazyPreloader","updateSize","updateSlides","updateProgress","freeMode","autoHeight","updateAutoHeight","slideTo","watchOverflow","checkOverflow","changeDirection","newDirection","needUpdate","currentDirection","width","changeLanguageDirection","rtl","dir","mount","element","mounted","shadowEl","isElement","getWrapperSelector","wrapperClass","trim","wrapperEl","shadowRoot","getWrapper","createElements","createElement","append","toLowerCase","elementStyle","wrongRTL","initialized","addClasses","loop","virtual","initialSlide","slidesBefore","runCallbacksOnInit","loopCreate","attachEvents","e","target","preload","destroy","deleteInstance","cleanStyles","detachEvents","loopDestroy","removeClasses","removeAttribute","slideVisibleClass","slideActiveClass","slideNextClass","slidePrevClass","deleteProps","static","newDefaults","extendedDefaults","defaults","m","installModule","prototypeGroup","protoMethod","use","$hoK65","$5NIfu","$1c280aeb2839a22d$export$2e2bcd8739ae039","$3bd3f193ccd5630c$var$isObject","obj","$3bd3f193ccd5630c$export$8b58be045bf06082","src","key","$3bd3f193ccd5630c$export$3fdcb9b4d81368d8","removeEventListener","activeElement","blur","nodeName","getElementById","createEvent","initEvent","children","childNodes","setAttribute","getElementsByTagName","createElementNS","importNode","location","hash","host","hostname","href","origin","pathname","protocol","search","$3bd3f193ccd5630c$export$f65ca476c09acec0","doc","$3bd3f193ccd5630c$export$8582633f185c62bb","navigator","history","replaceState","pushState","go","back","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","matchMedia","requestAnimationFrame","callback","cancelAnimationFrame","$3bd3f193ccd5630c$export$38b2d434cce3ea22","win","$1338f5f0d60fe216$export$8694e5c03a4df8e6","object","$1338f5f0d60fe216$export$bdd553fddd433dcb","delay","$1338f5f0d60fe216$export$461939dd4422153","now","$1338f5f0d60fe216$export$5ec402b7fcf74398","axis","window1","getWindow","matrix","curTransform","transformMatrix","curStyle","currentStyle","$1338f5f0d60fe216$export$3735103072e4a80","WebKitCSSMatrix","transform","webkitTransform","a","MozTransform","OTransform","MsTransform","msTransform","m41","parseFloat","m42","$1338f5f0d60fe216$export$a6cdc56e425d0d0a","o","$1338f5f0d60fe216$export$8b58be045bf06082","to","noExtend","nextSource","node","HTMLElement","nodeType","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","$1338f5f0d60fe216$export$a607267f322101fd","varName","varValue","setProperty","$1338f5f0d60fe216$export$a5dd2b4b1a116d6d","targetPosition","side","startPosition","time","startTime","duration","scrollSnapType","cssModeFrameID","isOutOfBound","animate","getTime","easeProgress","cos","PI","currentPosition","overflow","$1338f5f0d60fe216$export$616841b86f802685","$1338f5f0d60fe216$export$eb846d859f2895e6","selector","$1338f5f0d60fe216$export$c8a8987d4410bf2d","tag","classes","$1338f5f0d60fe216$export$d7820ec56f35bbaa","box","getBoundingClientRect","clientTop","clientLeft","scrollY","scrollLeft","scrollX","left","$1338f5f0d60fe216$export$392b9fa9626e91e0","prevEls","previousElementSibling","prev","$1338f5f0d60fe216$export$b245807c30cf5df8","nextEls","nextElementSibling","next","$1338f5f0d60fe216$export$4184470d4bd0f986","prop","$1338f5f0d60fe216$export$371885c503a01623","child","previousSibling","$1338f5f0d60fe216$export$aedc7b608ca8e855","parents","parent","parentElement","$1338f5f0d60fe216$export$6b974c5889da0bb5","fireCallBack","$1338f5f0d60fe216$export$863f37913038cf77","includeMargins","offsetWidth","$f745992e8d1b1180$var$support","$f745992e8d1b1180$export$d61c7b85ff180578","smoothScroll","touch","DocumentTouch","$f745992e8d1b1180$var$calcSupport","$33c7356d035118c5$var$deviceCached","$33c7356d035118c5$export$30c823bc834d6ab4","overrides","platform","ua","ios","android","screenWidth","screenHeight","ipad","ipod","iphone","windows","macos","os","$33c7356d035118c5$var$calcDevice","$f7ea505fdac53fb2$var$browser","$f7ea505fdac53fb2$export$89e15fc796a4a429","needPerspectiveFix","isSafari","includes","major","minor","num","Number","isWebView","test","$f7ea505fdac53fb2$var$calcBrowser","$caa86f81f75e9730$export$2e2bcd8739ae039","observer","animationFrame","resizeHandler","orientationChangeHandler","resizeObserver","ResizeObserver","entries","newWidth","newHeight","contentBoxSize","contentRect","inlineSize","blockSize","observe","unobserve","$4393da3adccaa7db$export$2e2bcd8739ae039","observers","attach","options","MutationObserver","WebkitMutationObserver","mutations","__preventObserver__","observerUpdate","attributes","childList","characterData","observeParents","observeSlideChildren","containerParents","elementParents","disconnect","splice","$26f00b4681ced12e$export$2e2bcd8739ae039","events","handler","priority","self","method","event","onceHandler","__emitterProxy","apply","offAny","eventHandler","data","context","unshift","$gXfEI","$2effa18fdcd4ebca$export$2e2bcd8739ae039","$fdMLQ","$56ZNO","$hIP6N","$dW6z4","$5P2Nk","$1kvfj","$KG4bf","$9VeMF","$c57e4cf0a3cc0e9b$export$2e2bcd8739ae039","clientWidth","clientHeight","parseInt","isNaN","$b14de6c650ce395b$export$2e2bcd8739ae039","getDirectionLabel","property","marginRight","getDirectionPropertyValue","label","isVirtual","previousSlidesLength","slidesLength","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidePosition","prevSlideSize","virtualSize","marginLeft","marginBottom","marginTop","cssMode","setCSSProperty","gridEnabled","grid","rows","initSlides","shouldResetSlideSize","slide","updateSlide","slideStyles","currentTransform","currentWebKitTransform","roundLengths","elementOuterSize","paddingLeft","paddingRight","boxSizing","floor","abs","slidesPerGroup","slidesPerGroupSkip","effect","setWrapperSize","updateWrapperSize","newSlidesGrid","slidesGridItem","groups","ceil","slidesAfter","groupSize","_","slideIndex","centeredSlidesBounds","allSlidesSize","slideSizeValue","maxSnap","snap","centerInsufficientSlides","allSlidesOffset","snapIndex","addToSnapGrid","addToSlidesGrid","v","watchSlidesProgress","updateSlidesOffset","backFaceHiddenClass","hasClassBackfaceClassAdded","contains","maxBackfaceHiddenSlides","$3b8d73f2acfa0ea0$export$2e2bcd8739ae039","activeSlides","setTransition","getSlideByIndex","visibleSlides","offsetHeight","$ce6e30db971b8f6a$export$2e2bcd8739ae039","minusOffset","offsetLeft","offsetTop","swiperSlideOffset","$a255c8b825922753$export$2e2bcd8739ae039","offsetCenter","visibleSlidesIndexes","slideOffset","slideProgress","originalSlideProgress","slideBefore","slideAfter","originalProgress","$43d3e22542fd4c38$export$2e2bcd8739ae039","multiplier","translatesDiff","progressLoop","wasBeginning","wasEnd","isBeginningRounded","isEndRounded","lastSlideIndex","firstSlideTranslate","lastSlideTranslate","translateMax","translateAbs","updateSlidesProgress","$0f7fe5860e74601f$export$2e2bcd8739ae039","getFilteredSlide","activeSlide","nextSlide","elementNextAll","prevSlide","elementPrevAll","$08c4ed821325a44e$export$2e2bcd8739ae039","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","getVirtualRealIndex","aIndex","normalizeSlideIndex","$08c4ed821325a44e$export$81ecffcda7ad6ebb","skip","$543214d309191af3$export$54749c0631f34ffc","closest","lazyEl","lazyPreloaderClass","$543214d309191af3$var$unlazy","$543214d309191af3$export$513ccb98c53b8039","amount","lazyPreloadPrevNext","slideIndexLastInView","$7394e7bbbcd710e0$export$2e2bcd8739ae039","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","$1vNo4","$ff3f3346f9416381$export$2e2bcd8739ae039","$kCYKF","$7THKu","$dzDR0","$dVcfr","$119efefc5c17e954$export$2e2bcd8739ae039","virtualTranslate","getTranslate","$f0467b48c9fa9010$export$2e2bcd8739ae039","byController","x","y","newProgress","$5bff9b105f3a15ca$export$2e2bcd8739ae039","$9e1d7562301634ad$export$2e2bcd8739ae039","$a22a1974ce4a087e$export$2e2bcd8739ae039","runCallbacks","translateBounds","internal","preventInteractionOnTransition","isH","animateCSSModeScroll","onTranslateToWrapperTransitionEnd","$kR0Vg","$3bfe96c57afe6ca0$export$2e2bcd8739ae039","$488q8","$99Zle","$f2e9791e5099a2fd$export$2e2bcd8739ae039","transitionDuration","$4aOW6","$301e70f0ee5514cd$export$2e2bcd8739ae039","step","$309f9b76d4fd47ea$export$2e2bcd8739ae039","$6ab48978240ea54a$export$2e2bcd8739ae039","$OZIeq","$d7398976190fd90b$export$2e2bcd8739ae039","$cGTS6","$7Y909","$3B7dt","$dhKLJ","$fn7l8","$hk5na","$09948a6d2dc2571f$export$2e2bcd8739ae039","initial","normalizedTranslate","normalizedGrid","normalizedGridNext","transitionStart","transitionEnd","t","_immediateVirtual","_cssModeVirtualInitialSet","onSlideToWrapperTransitionEnd","$93d4bf3a931cd83e$export$2e2bcd8739ae039","newIndex","$5cd51e7a21111153$export$2e2bcd8739ae039","perGroup","slidesPerGroupAuto","increment","loopPreventsSliding","loopFix","_clientLeft","$29ea6cd54fa440bc$export$2e2bcd8739ae039","normalize","val","normalizedSnapGrid","prevSnap","prevSnapIndex","prevIndex","lastIndex","$9ac1243abd623ac0$export$2e2bcd8739ae039","$b30eb28584e91039$export$2e2bcd8739ae039","threshold","currentSnap","$c9c878d368de6346$export$2e2bcd8739ae039","slideToIndex","slideSelector","loopedSlides","nextTick","$3Gh7G","$7ea6f47a36945eb6$export$2e2bcd8739ae039","$7AnfI","$5gsL1","$2ae2939469a141d4$export$2e2bcd8739ae039","slideRealIndex","$585deea5b955cef7$export$2e2bcd8739ae039","activeSlideIndex","byMousewheel","prependSlidesIndexes","appendSlidesIndexes","isNext","isPrev","slidesPrepended","slidesAppended","prepend","currentSlideTranslate","slideToLoop","controller","control","loopParams","c","$3d54c101ba970f47$export$2e2bcd8739ae039","newSlidesOrder","swiperSlideIndex","$3mSh2","$012177cdd3ce0659$export$2e2bcd8739ae039","$aozqy","$273d86d6596c268d$export$2e2bcd8739ae039","moving","simulateTouch","isLocked","touchEventsTarget","cursor","$7917a06587c5c882$export$2e2bcd8739ae039","$f9d4708c1dfbfc0b$var$dummyEventAttached","$f9d4708c1dfbfc0b$var$dummyEventListener","$f9d4708c1dfbfc0b$var$events","capture","nested","domMethod","swiperMethod","onTouchStart","passive","onTouchMove","onTouchEnd","preventClicks","preventClicksPropagation","onClick","onScroll","updateOnWindowResize","$kXZZT","onLoad","$f9d4708c1dfbfc0b$export$2e2bcd8739ae039","$97DRT","$ex2Z8","$1OTa3","$19FtL","$35dR0","$1jcRQ","$6a43b17d59f348c6$export$2e2bcd8739ae039","pointerType","originalEvent","targetEl","which","button","swipingClassHasValue","noSwipingClass","eventPath","composedPath","path","noSwipingSelector","isTargetShadow","noSwiping","base","__closestFrom","assignedSlot","found","getRootNode","$6a43b17d59f348c6$var$closestElement","swipeHandler","pageX","pageY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","innerWidth","preventDefault","swipeDirection","shouldPreventDefault","touchStartPreventDefault","touchStartForcePreventDefault","isContentEditable","$02baf1653270db8e$export$2e2bcd8739ae039","pointerIndex","findIndex","cachedEv","pointerId","targetTouch","preventedByNestedSwiper","prevX","prevY","touchReleaseOnEdges","targetTouches","diffX","diffY","sqrt","touchAngle","atan2","zoom","cancelable","touchMoveStopPropagation","stopPropagation","touchesDiff","previousX","previousY","oneWayMovement","touchRatio","prevTouchesDirection","touchesDirection","isLoop","evt","bubbles","dispatchEvent","loopFixed","disableParentSwiper","resistanceRatio","resistance","followFinger","$15353fd53fa0afb1$export$2e2bcd8739ae039","type","touchEndTime","timeDiff","pathTree","updateClickedSlide","currentPos","stopIndex","rewindFirstIndex","rewindLastIndex","ratio","longSwipesMs","longSwipes","longSwipesRatio","shortSwipes","prevEl","$f43968ae768025a8$var$timeout","$f43968ae768025a8$export$2e2bcd8739ae039","isVirtualLoop","autoplay","running","paused","resume","$23ec95d99b99a94a$export$2e2bcd8739ae039","stopImmediatePropagation","$0d76ce9bb77be3f2$export$2e2bcd8739ae039","$0f418bff419545b4$export$2e2bcd8739ae039","$bGu4B","$ff999bdc5ea561ff$export$2e2bcd8739ae039","$7ogML","$881af1db6e44c2b5$var$isGridEnabled","$881af1db6e44c2b5$export$2e2bcd8739ae039","breakpoint","getBreakpoint","breakpointsBase","currentBreakpoint","breakpointParams","wasMultiRow","isMultiRow","wasEnabled","fill","wasModuleEnabled","isModuleEnabled","directionChanged","needsReLoop","isEnabled","$5617cb898a0f8fe0$export$2e2bcd8739ae039","currentHeight","points","point","minRatio","substr","sort","b","$g0Bml","$73a2aa00ea89ae97$export$2e2bcd8739ae039","$8Ubu7","$ba79a0353521e453$export$2e2bcd8739ae039","suffixes","prefix","resultClasses","item","$ba79a0353521e453$var$prepareClasses","autoheight","centered","$67bc7655f50fd7fe$export$2e2bcd8739ae039","$c71e4cd26750bb38$export$2e2bcd8739ae039","wasLocked","lastSlideRightEdge","$69cbdaf801d551aa$export$2e2bcd8739ae039","uniqueNavElements","passiveListeners","$4902d140bb7ee8d5$export$2e2bcd8739ae039","moduleParamName","moduleParams","auto","$f468fb17181f9684$export$2e2bcd8739ae039","checkProps","$73166865f7b54cd7$export$2e2bcd8739ae039","$f4c91b3b7f316ab7$export$2e2bcd8739ae039","appendElement","tempDOM","$2813cfd83c41305e$export$2e2bcd8739ae039","prependElement","$18636735d4558718$export$2e2bcd8739ae039","activeIndexBuffer","baseLength","prependSlide","appendSlide","slidesBuffer","currentSlide","$716dd64e8af94877$export$2e2bcd8739ae039","slidesIndexes","indexToRemove","$09cd9ab98ba19d8c$export$2e2bcd8739ae039","removeSlide","$972bb72b4792baa3$export$2e2bcd8739ae039","overwriteParams","perspective","recreateShadows","getEffectParams","requireUpdateOnVirtual","overwriteParamsResult","_s","slideShadows","$a3fe64242580cf29$export$2e2bcd8739ae039","effectParams","transformEl","getSlideTransformEl","backfaceVisibility","$32bf8419d687a016$export$2e2bcd8739ae039","transformElements","allSlides","transitionEndTarget","eventTriggered","parentNode","getSlide","elementTransitionEnd","$aa588c71d5569b8d$export$2e2bcd8739ae039","shadowClass","shadowContainer","$d35165bd5db5382a$var$menuHomeEl","$d35165bd5db5382a$var$menuShoppingEl","register","JSON","parse"],"version":3,"file":"shopping-list.094a5689.js.map"}