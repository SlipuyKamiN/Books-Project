{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","src/js/auth-modal.js","src/js/scroll-up.js","node_modules/lodash.throttle/index.js","src/js/darkTheme.js","src/js/support.js","src/js/support/fund-array.js","node_modules/@parcel/runtime-js/lib/runtime-98e8bad01d0ec9e6.js","node_modules/@parcel/runtime-js/lib/runtime-87f37809ca426eaf.js","node_modules/@parcel/runtime-js/lib/runtime-59280da0b73b4122.js","node_modules/@parcel/runtime-js/lib/runtime-08448434b552cf07.js","node_modules/@parcel/runtime-js/lib/runtime-eb1e0d18acfb763f.js","node_modules/@parcel/runtime-js/lib/runtime-d8f145b619e15e0b.js","node_modules/@parcel/runtime-js/lib/runtime-0d13aafe5aaf6274.js","node_modules/@parcel/runtime-js/lib/runtime-fb79ae6ea49a569e.js","node_modules/@parcel/runtime-js/lib/runtime-804600641a04a35d.js","node_modules/@parcel/runtime-js/lib/runtime-513a0d5d5fedde08.js","node_modules/@parcel/runtime-js/lib/runtime-cf808a04ff2c2856.js","node_modules/@parcel/runtime-js/lib/runtime-499898038804f236.js","node_modules/@parcel/runtime-js/lib/runtime-38d54217db6c9072.js","node_modules/@parcel/runtime-js/lib/runtime-2036f32077104af6.js","node_modules/@parcel/runtime-js/lib/runtime-dd59a08cf06ccbe2.js","node_modules/@parcel/runtime-js/lib/runtime-90176b0aa3b0a5ef.js","node_modules/@parcel/runtime-js/lib/runtime-cec601d147377d48.js","node_modules/@parcel/runtime-js/lib/runtime-877cd2460ef7dbd6.js","src/js/support/markup-support.js","node_modules/swiper/swiper.esm.js","node_modules/swiper/core/core.js","node_modules/ssr-window/ssr-window.esm.js","node_modules/swiper/shared/utils.js","node_modules/swiper/shared/get-support.js","node_modules/swiper/shared/get-device.js","node_modules/swiper/shared/get-browser.js","node_modules/swiper/core/modules/resize/resize.js","node_modules/swiper/core/modules/observer/observer.js","node_modules/swiper/core/events-emitter.js","node_modules/swiper/core/update/index.js","node_modules/swiper/core/update/updateSize.js","node_modules/swiper/core/update/updateSlides.js","node_modules/swiper/core/update/updateAutoHeight.js","node_modules/swiper/core/update/updateSlidesOffset.js","node_modules/swiper/core/update/updateSlidesProgress.js","node_modules/swiper/core/update/updateProgress.js","node_modules/swiper/core/update/updateSlidesClasses.js","node_modules/swiper/core/update/updateActiveIndex.js","node_modules/swiper/shared/process-lazy-preloader.js","node_modules/swiper/core/update/updateClickedSlide.js","node_modules/swiper/core/translate/index.js","node_modules/swiper/core/translate/getTranslate.js","node_modules/swiper/core/translate/setTranslate.js","node_modules/swiper/core/translate/minTranslate.js","node_modules/swiper/core/translate/maxTranslate.js","node_modules/swiper/core/translate/translateTo.js","node_modules/swiper/core/transition/index.js","node_modules/swiper/core/transition/setTransition.js","node_modules/swiper/core/transition/transitionStart.js","node_modules/swiper/core/transition/transitionEmit.js","node_modules/swiper/core/transition/transitionEnd.js","node_modules/swiper/core/slide/index.js","node_modules/swiper/core/slide/slideTo.js","node_modules/swiper/core/slide/slideToLoop.js","node_modules/swiper/core/slide/slideNext.js","node_modules/swiper/core/slide/slidePrev.js","node_modules/swiper/core/slide/slideReset.js","node_modules/swiper/core/slide/slideToClosest.js","node_modules/swiper/core/slide/slideToClickedSlide.js","node_modules/swiper/core/loop/index.js","node_modules/swiper/core/loop/loopCreate.js","node_modules/swiper/core/loop/loopFix.js","node_modules/swiper/core/loop/loopDestroy.js","node_modules/swiper/core/grab-cursor/index.js","node_modules/swiper/core/grab-cursor/setGrabCursor.js","node_modules/swiper/core/grab-cursor/unsetGrabCursor.js","node_modules/swiper/core/events/index.js","node_modules/swiper/core/events/onTouchStart.js","node_modules/swiper/core/events/onTouchMove.js","node_modules/swiper/core/events/onTouchEnd.js","node_modules/swiper/core/events/onResize.js","node_modules/swiper/core/events/onClick.js","node_modules/swiper/core/events/onScroll.js","node_modules/swiper/core/events/onLoad.js","node_modules/swiper/core/breakpoints/index.js","node_modules/swiper/core/breakpoints/setBreakpoint.js","node_modules/swiper/core/breakpoints/getBreakpoint.js","node_modules/swiper/core/classes/index.js","node_modules/swiper/core/classes/addClasses.js","node_modules/swiper/core/classes/removeClasses.js","node_modules/swiper/core/check-overflow/index.js","node_modules/swiper/core/defaults.js","node_modules/swiper/core/moduleExtendParams.js","node_modules/swiper/modules/virtual/virtual.js","node_modules/swiper/modules/keyboard/keyboard.js","node_modules/swiper/modules/mousewheel/mousewheel.js","node_modules/swiper/modules/navigation/navigation.js","node_modules/swiper/shared/create-element-if-not-defined.js","node_modules/swiper/modules/pagination/pagination.js","node_modules/swiper/shared/classes-to-selector.js","node_modules/swiper/modules/scrollbar/scrollbar.js","node_modules/swiper/modules/parallax/parallax.js","node_modules/swiper/modules/zoom/zoom.js","node_modules/swiper/modules/controller/controller.js","node_modules/swiper/modules/a11y/a11y.js","node_modules/swiper/modules/history/history.js","node_modules/swiper/modules/hash-navigation/hash-navigation.js","node_modules/swiper/modules/autoplay/autoplay.js","node_modules/swiper/modules/thumbs/thumbs.js","node_modules/swiper/modules/free-mode/free-mode.js","node_modules/swiper/modules/manipulation/manipulation.js","node_modules/swiper/modules/manipulation/methods/appendSlide.js","node_modules/swiper/modules/manipulation/methods/prependSlide.js","node_modules/swiper/modules/manipulation/methods/addSlide.js","node_modules/swiper/modules/manipulation/methods/removeSlide.js","node_modules/swiper/modules/manipulation/methods/removeAllSlides.js","node_modules/swiper/modules/effect-fade/effect-fade.js","node_modules/swiper/shared/effect-init.js","node_modules/swiper/shared/effect-target.js","node_modules/swiper/shared/effect-virtual-transition-end.js","node_modules/swiper/modules/effect-cube/effect-cube.js","node_modules/swiper/modules/effect-flip/effect-flip.js","node_modules/swiper/shared/create-shadow.js","node_modules/swiper/modules/effect-coverflow/effect-coverflow.js","node_modules/swiper/modules/effect-creative/effect-creative.js","node_modules/swiper/modules/effect-cards/effect-cards.js","src/js/header.js","node_modules/@parcel/runtime-js/lib/runtime-e1c2b353f8e00e59.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","const refs = {\n  openAuthorizationBtn: document.querySelector('button.auth__modal-open-js'),\n  closeAuthorizationBtn: document.querySelector('button.auth__modal-close-js'),\n  modalAuthorization: document.querySelector('div.auth__modal-js'),\n  buttonSignUp: document.querySelector('.form__btn-up'),\n  buttonSignIn: document.querySelector('.form__btn-in'),\n  buttonSubmit: document.querySelector('.form__btn'),\n  formInputs: document.querySelector('div.form__render'),\n  inputName: document.querySelector('.form__input-name'),\n  labelName: document.querySelector('.form__label-name'),\n  inputMail: document.querySelector('.form__input-mail'),\n  labelMail: document.querySelector('.form__label-mail'),\n  inputPassword: document.querySelector('.form__input-password'),\n  labelPassword: document.querySelector('.form__label-password'),\n};\n\nrefs.openAuthorizationBtn.addEventListener('click', toggleModal);\nrefs.closeAuthorizationBtn.addEventListener('click', toggleModal);\n\nfunction toggleModal() {\n  refs.modalAuthorization.classList.toggle('is-hidden');\n}\n\nrefs.buttonSignIn.addEventListener('click', onButtonSignIn);\nrefs.buttonSignUp.addEventListener('click', onButtonSignUp);\n\nfunction onButtonSignIn() {\n  refs.buttonSignUp.classList.remove('active');\n  refs.buttonSignIn.classList.add('active');\n  refs.buttonSubmit.textContent = 'Sign in';\n  refs.formInputs.innerHTML = '';\n}\n\nfunction onButtonSignUp() {\n  refs.buttonSignIn.classList.remove('active');\n  refs.buttonSignUp.classList.add('active');\n  refs.buttonSubmit.textContent = 'Sign up';\n  refs.formInputs.innerHTML = `<div class=\"form__field\">\n          <input\n            type=\"text\"\n            class=\"form__input form__input-name\"\n            name=\"name\"\n            pattern=\"[a-zA-Z\\u0400-\\u04ff]{3,30}\"\n            required\n          />\n          <label for=\"name\" class=\"form__label form__label-name\">Name</label>\n        </div>`;\n}\n\nrefs.inputName.addEventListener('input', onInputName);\nrefs.inputMail.addEventListener('input', onInputMail);\nrefs.inputPassword.addEventListener('input', onInputPassword);\n\nfunction onInputName() {\n  if (refs.inputName.value) {\n    refs.labelName.classList.add('checked');\n  } else {\n    refs.labelName.classList.remove('checked');\n  }\n}\n\nfunction onInputMail() {\n  if (refs.inputMail.value) {\n    refs.labelMail.classList.add('checked');\n  } else {\n    refs.labelMail.classList.remove('checked');\n  }\n}\n\nfunction onInputPassword() {\n  if (refs.inputPassword.value) {\n    refs.labelPassword.classList.add('checked');\n  } else {\n    refs.labelPassword.classList.remove('checked');\n  }\n}\n","import throttle from 'lodash.throttle';\n\nconst offset = 100;\nconst scrollUp = document.querySelector('.scroll-up');\nconst scrollUpSvgPath = document.querySelector('.scroll-up__svg-path');\nconst pathLength = scrollUpSvgPath.getTotalLength();\n\nscrollUpSvgPath.style.strokeDasharray = `${pathLength} ${pathLength}`;\nscrollUpSvgPath.style.transition = 'stroke-dashoffset 20ms';\n\nconst getTop = () => window.pageYOffset || document.documentElement.scrollTop;\n\n// updateDashoffset\nconst updateDashoffset = () => {\n  const height = document.documentElement.scrollHeight - window.innerHeight;\n  const dashoffset = pathLength - (getTop() * pathLength) / height;\n  scrollUpSvgPath.style.strokeDashoffset = dashoffset;\n};\n\n// onScroll\nwindow.addEventListener(\n  'scroll',\n  throttle(() => {\n    updateDashoffset();\n    if (getTop() > offset) {\n      scrollUp.classList.add('scroll-up--active');\n    } else {\n      scrollUp.classList.remove('scroll-up--active');\n    }\n  }, 50)\n);\n\n// click\nscrollUp.addEventListener('click', () => {\n  window.scrollTo({\n    top: 0,\n    behavior: 'smooth',\n  });\n});\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = throttle;\n","const switchDayNight = document.querySelector('.mode-switch');\nconst bookNameArray = document.querySelectorAll('.book-name');\n\nfunction checkDarkModeStatus() {\n  if (localStorage.getItem('darkMode') === 'true') {\n    addDarkTheme();\n    switchDayNight.checked = true;\n  } else {\n    removeDarkTheme();\n    switchDayNight.checked = false;\n  }\n}\n\nswitchDayNight.addEventListener('change', () => {\n  if (switchDayNight.checked) {\n    addDarkTheme();\n  } else {\n    removeDarkTheme();\n  }\n  localStorage.setItem('darkMode', switchDayNight.checked);\n});\n\nfunction addDarkTheme() {\n  document.body.classList.add('dark');\n  document.body.style.backgroundColor = '#202024';\n  document.querySelector('header').style.backgroundColor = '#111111';\n\n  bookNameArray.forEach(book => {\n    book.style.color = 'rgba(255, 255, 255, 0.6)';\n  });\n}\n\nfunction removeDarkTheme() {\n  document.body.classList.remove('dark');\n  document.body.style.backgroundColor = '#f6f6f6';\n  document.querySelector('header').style.backgroundColor = '#FFFFFF';\n\n  bookNameArray.forEach(book => {\n    book.style.color = 'rgba(17, 17, 17, 0.6)';\n  });\n}\n\ncheckDarkModeStatus();\n","import { fundArray } from './support/fund-array';\nimport { markupCardFund } from './support/markup-support';\nimport Swiper from 'swiper';\n\nconst supportListEl = document.querySelector('.support__list-js');\nconst btnSwiperEl = document.querySelector('.swiper-button-next');\n\nlet position = 0;\n\nconst addLeadingZero = value => {\n  return String(value).padStart(2, '0');\n};\n\nconst markupSetFunds = fundArray\n  .map((el, i) => {\n    position = addLeadingZero(i + 1);\n\n    return markupCardFund(el, position);\n  })\n  .join('');\n\nsupportListEl.innerHTML = markupSetFunds;\n\nconst swiper = new Swiper('.swiper', {\n  direction: 'vertical',\n  spaceBetween: 20,\n  slidesPerView: 'auto',\n  rewind: true,\n\n  navigation: {\n    nextEl: '.swiper-button-next',\n  },\n\n  plugins: {\n    scrollContainer: true,\n  },\n});\n\nswiper.update();\n\nbtnSwiperEl.addEventListener('click', () => {\n  swiper.slideNext();\n});\n","export const fundArray = [\n  {\n    title: 'Save the Children',\n    url: 'https://www.savethechildren.net/what-we-do/emergencies/ukraine-crisis',\n    img: require('../../images/support/fund1@1x.png'),\n    img2: require('../../images/support/fund1@2x.png'),\n  },\n  {\n    title: 'Project HOPE',\n    url: 'https://www.projecthope.org/country/ukraine/',\n    img: require('../../images/support/fund2@1x.png'),\n    img2: require('../../images/support/fund2@2x.png'),\n  },\n  {\n    title: 'UNITED24',\n    url: 'https://u24.gov.ua/uk',\n    img: require('../../images/support/fund3@1x.png'),\n    img2: require('../../images/support/fund3@2x.png'),\n  },\n  {\n    title: 'International Medical Corps',\n    url: 'https://internationalmedicalcorps.org/country/ukraine/',\n    img: require('../../images/support/fund4@1x.png'),\n    img2: require('../../images/support/fund4@2x.png'),\n  },\n  {\n    title: 'Medicins Sans Frontieres',\n    url: 'https://www.msf.org/ukraine',\n    img: require('../../images/support/fund5@1x.png'),\n    img2: require('../../images/support/fund5@2x.png'),\n  },\n  {\n    title: 'RAZOM',\n    url: 'https://www.razomforukraine.org/',\n    img: require('../../images/support/fund6@1x.png'),\n    img2: require('../../images/support/fund6@2x.png'),\n  },\n  {\n    title: 'Action against hunger',\n    url: 'https://www.actionagainsthunger.org/location/europe/ukraine/',\n    img: require('../../images/support/fund7@1x.png'),\n    img2: require('../../images/support/fund7@2x.png'),\n  },\n  {\n    title: 'World vision',\n    url: 'https://www.wvi.org/emergencies/ukraine',\n    img: require('../../images/support/fund8@1x.png'),\n    img2: require('../../images/support/fund8@2x.png'),\n  },\n  {\n    title: 'Serhiy Prytula Charity Foundation',\n    url: 'https://prytulafoundation.org/en',\n    img: require('../../images/support/fund9@1x.png'),\n    img2: require('../../images/support/fund9@2x.png'),\n  },\n];\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"luM9t\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"3owfJ\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"hYVi5\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"jTC9K\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"fviWP\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"4tG7J\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"hB0H2\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"lCPvm\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"9wdTO\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"6sPmo\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"c8vcc\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"4Xd5G\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"26qM3\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"bMy2s\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"5uB8J\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"kTuPl\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"7ZCXc\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"lLwgo\")).toString();","export const markupCardFund = (\n  { title, url, img, img2 },\n  position\n) => `<li class=\"support__list-item swiper-slide\">\n  <p class=\"support__number\">${position}</p>\n  <a class=\"support__link\" href=\"${url}\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">\n    <img\n      srcset=\"${img} 1x, ${img2} 2x\"\n      src=\"${img}\"\n      alt=\"${title}\"\n      width=\"149\"\n      loading=\"lazy\"\n    />\n  </a>\n</li>`;\n","/**\n * Swiper 9.2.2\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2023 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: April 14, 2023\n */\n\nexport { default as Swiper, default } from './core/core.js';\nexport { default as Virtual } from './modules/virtual/virtual.js';\nexport { default as Keyboard } from './modules/keyboard/keyboard.js';\nexport { default as Mousewheel } from './modules/mousewheel/mousewheel.js';\nexport { default as Navigation } from './modules/navigation/navigation.js';\nexport { default as Pagination } from './modules/pagination/pagination.js';\nexport { default as Scrollbar } from './modules/scrollbar/scrollbar.js';\nexport { default as Parallax } from './modules/parallax/parallax.js';\nexport { default as Zoom } from './modules/zoom/zoom.js';\nexport { default as Controller } from './modules/controller/controller.js';\nexport { default as A11y } from './modules/a11y/a11y.js';\nexport { default as History } from './modules/history/history.js';\nexport { default as HashNavigation } from './modules/hash-navigation/hash-navigation.js';\nexport { default as Autoplay } from './modules/autoplay/autoplay.js';\nexport { default as Thumbs } from './modules/thumbs/thumbs.js';\nexport { default as FreeMode } from './modules/free-mode/free-mode.js';\nexport { default as Grid } from './modules/grid/grid.js';\nexport { default as Manipulation } from './modules/manipulation/manipulation.js';\nexport { default as EffectFade } from './modules/effect-fade/effect-fade.js';\nexport { default as EffectCube } from './modules/effect-cube/effect-cube.js';\nexport { default as EffectFlip } from './modules/effect-flip/effect-flip.js';\nexport { default as EffectCoverflow } from './modules/effect-coverflow/effect-coverflow.js';\nexport { default as EffectCreative } from './modules/effect-creative/effect-creative.js';\nexport { default as EffectCards } from './modules/effect-cards/effect-cards.js';","/* eslint no-param-reassign: \"off\" */\nimport { getDocument } from 'ssr-window';\nimport { extend, deleteProps, createElement, elementChildren, elementStyle, elementIndex } from '../shared/utils.js';\nimport { getSupport } from '../shared/get-support.js';\nimport { getDevice } from '../shared/get-device.js';\nimport { getBrowser } from '../shared/get-browser.js';\nimport Resize from './modules/resize/resize.js';\nimport Observer from './modules/observer/observer.js';\nimport eventsEmitter from './events-emitter.js';\nimport update from './update/index.js';\nimport translate from './translate/index.js';\nimport transition from './transition/index.js';\nimport slide from './slide/index.js';\nimport loop from './loop/index.js';\nimport grabCursor from './grab-cursor/index.js';\nimport events from './events/index.js';\nimport breakpoints from './breakpoints/index.js';\nimport classes from './classes/index.js';\nimport checkOverflow from './check-overflow/index.js';\nimport defaults from './defaults.js';\nimport moduleExtendParams from './moduleExtendParams.js';\nimport { processLazyPreloader, preload } from '../shared/process-lazy-preloader.js';\nconst prototypes = {\n  eventsEmitter,\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  events,\n  breakpoints,\n  checkOverflow,\n  classes\n};\nconst extendedDefaults = {};\nclass Swiper {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n    params = extend({}, params);\n    if (el && !params.el) params.el = el;\n    const document = getDocument();\n    if (params.el && typeof params.el === 'string' && document.querySelectorAll(params.el).length > 1) {\n      const swipers = [];\n      document.querySelectorAll(params.el).forEach(containerEl => {\n        const newParams = extend({}, params, {\n          el: containerEl\n        });\n        swipers.push(new Swiper(newParams));\n      });\n      // eslint-disable-next-line no-constructor-return\n      return swipers;\n    }\n\n    // Swiper Instance\n    const swiper = this;\n    swiper.__swiper__ = true;\n    swiper.support = getSupport();\n    swiper.device = getDevice({\n      userAgent: params.userAgent\n    });\n    swiper.browser = getBrowser();\n    swiper.eventsListeners = {};\n    swiper.eventsAnyListeners = [];\n    swiper.modules = [...swiper.__modules__];\n    if (params.modules && Array.isArray(params.modules)) {\n      swiper.modules.push(...params.modules);\n    }\n    const allModulesParams = {};\n    swiper.modules.forEach(mod => {\n      mod({\n        params,\n        swiper,\n        extendParams: moduleExtendParams(params, allModulesParams),\n        on: swiper.on.bind(swiper),\n        once: swiper.once.bind(swiper),\n        off: swiper.off.bind(swiper),\n        emit: swiper.emit.bind(swiper)\n      });\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = extend({}, defaults, allModulesParams);\n\n    // Extend defaults with passed params\n    swiper.params = extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = extend({}, swiper.params);\n    swiper.passedParams = extend({}, params);\n\n    // add event listeners\n    if (swiper.params && swiper.params.on) {\n      Object.keys(swiper.params.on).forEach(eventName => {\n        swiper.on(eventName, swiper.params.on[eventName]);\n      });\n    }\n    if (swiper.params && swiper.params.onAny) {\n      swiper.onAny(swiper.params.onAny);\n    }\n\n    // Extend Swiper\n    Object.assign(swiper, {\n      enabled: swiper.params.enabled,\n      el,\n      // Classes\n      classNames: [],\n      // Slides\n      slides: [],\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n      //\n      isBeginning: true,\n      isEnd: false,\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n      cssOverflowAdjustment() {\n        // Returns 0 unless `translate` is > 2**23\n        // Should be subtracted from css values to prevent overflow\n        return Math.trunc(this.translate / 2 ** 23) * 2 ** 23;\n      },\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n      // Touch Events\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        focusableElements: swiper.params.focusableElements,\n        // Last click time\n        lastClickTime: 0,\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        startMoving: undefined,\n        evCache: []\n      },\n      // Clicks\n      allowClick: true,\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0\n      },\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0\n    });\n    swiper.emit('_swiper');\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    // eslint-disable-next-line no-constructor-return\n    return swiper;\n  }\n  getSlideIndex(slideEl) {\n    const {\n      slidesEl,\n      params\n    } = this;\n    const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n    const firstSlideIndex = elementIndex(slides[0]);\n    return elementIndex(slideEl) - firstSlideIndex;\n  }\n  getSlideIndexByData(index) {\n    return this.getSlideIndex(this.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === index)[0]);\n  }\n  recalcSlides() {\n    const swiper = this;\n    const {\n      slidesEl,\n      params\n    } = swiper;\n    swiper.slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  }\n  enable() {\n    const swiper = this;\n    if (swiper.enabled) return;\n    swiper.enabled = true;\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n    swiper.emit('enable');\n  }\n  disable() {\n    const swiper = this;\n    if (!swiper.enabled) return;\n    swiper.enabled = false;\n    if (swiper.params.grabCursor) {\n      swiper.unsetGrabCursor();\n    }\n    swiper.emit('disable');\n  }\n  setProgress(progress, speed) {\n    const swiper = this;\n    progress = Math.min(Math.max(progress, 0), 1);\n    const min = swiper.minTranslate();\n    const max = swiper.maxTranslate();\n    const current = (max - min) * progress + min;\n    swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  emitContainerClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const cls = swiper.el.className.split(' ').filter(className => {\n      return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n    });\n    swiper.emit('_containerClasses', cls.join(' '));\n  }\n  getSlideClasses(slideEl) {\n    const swiper = this;\n    if (swiper.destroyed) return '';\n    return slideEl.className.split(' ').filter(className => {\n      return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\n    }).join(' ');\n  }\n  emitSlidesClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const updates = [];\n    swiper.slides.forEach(slideEl => {\n      const classNames = swiper.getSlideClasses(slideEl);\n      updates.push({\n        slideEl,\n        classNames\n      });\n      swiper.emit('_slideClass', slideEl, classNames);\n    });\n    swiper.emit('_slideClasses', updates);\n  }\n  slidesPerViewDynamic(view = 'current', exact = false) {\n    const swiper = this;\n    const {\n      params,\n      slides,\n      slidesGrid,\n      slidesSizesGrid,\n      size: swiperSize,\n      activeIndex\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      // eslint-disable-next-line\n      if (view === 'current') {\n        for (let i = activeIndex + 1; i < slides.length; i += 1) {\n          const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      } else {\n        // previous\n        for (let i = activeIndex - 1; i >= 0; i -= 1) {\n          const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      }\n    }\n    return spv;\n  }\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const {\n      snapGrid,\n      params\n    } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      }\n    });\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode && swiper.params.freeMode.enabled) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n      return swiper;\n    }\n    swiper.el.classList.remove(`${swiper.params.containerModifierClass}${currentDirection}`);\n    swiper.el.classList.add(`${swiper.params.containerModifierClass}${newDirection}`);\n    swiper.emitContainerClasses();\n    swiper.params.direction = newDirection;\n    swiper.slides.forEach(slideEl => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n    return swiper;\n  }\n  changeLanguageDirection(direction) {\n    const swiper = this;\n    if (swiper.rtl && direction === 'rtl' || !swiper.rtl && direction === 'ltr') return;\n    swiper.rtl = direction === 'rtl';\n    swiper.rtlTranslate = swiper.params.direction === 'horizontal' && swiper.rtl;\n    if (swiper.rtl) {\n      swiper.el.classList.add(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'rtl';\n    } else {\n      swiper.el.classList.remove(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'ltr';\n    }\n    swiper.update();\n  }\n  mount(element) {\n    const swiper = this;\n    if (swiper.mounted) return true;\n\n    // Find el\n    let el = element || swiper.params.el;\n    if (typeof el === 'string') {\n      el = document.querySelector(el);\n    }\n    if (!el) {\n      return false;\n    }\n    el.swiper = swiper;\n    if (el.shadowEl) {\n      swiper.isElement = true;\n    }\n    const getWrapperSelector = () => {\n      return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\n    };\n    const getWrapper = () => {\n      if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n        const res = el.shadowRoot.querySelector(getWrapperSelector());\n        // Children needs to return slot items\n        return res;\n      }\n      return elementChildren(el, getWrapperSelector())[0];\n    };\n    // Find Wrapper\n    let wrapperEl = getWrapper();\n    if (!wrapperEl && swiper.params.createElements) {\n      wrapperEl = createElement('div', swiper.params.wrapperClass);\n      el.append(wrapperEl);\n      elementChildren(el, `.${swiper.params.slideClass}`).forEach(slideEl => {\n        wrapperEl.append(slideEl);\n      });\n    }\n    Object.assign(swiper, {\n      el,\n      wrapperEl,\n      slidesEl: swiper.isElement ? el : wrapperEl,\n      mounted: true,\n      // RTL\n      rtl: el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl',\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl'),\n      wrongRTL: elementStyle(wrapperEl, 'display') === '-webkit-box'\n    });\n    return true;\n  }\n  init(el) {\n    const swiper = this;\n    if (swiper.initialized) return swiper;\n    const mounted = swiper.mount(el);\n    if (mounted === false) return swiper;\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor && swiper.enabled) {\n      swiper.setGrabCursor();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.virtual.slidesBefore, 0, swiper.params.runCallbacksOnInit, false, true);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n    }\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Attach events\n    swiper.attachEvents();\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      } else {\n        imageEl.addEventListener('load', e => {\n          processLazyPreloader(swiper, e.target);\n        });\n      }\n    });\n    preload(swiper);\n\n    // Init Flag\n    swiper.initialized = true;\n    preload(swiper);\n\n    // Emit\n    swiper.emit('init');\n    swiper.emit('afterInit');\n    return swiper;\n  }\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params,\n      el,\n      wrapperEl,\n      slides\n    } = swiper;\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      el.removeAttribute('style');\n      wrapperEl.removeAttribute('style');\n      if (slides && slides.length) {\n        slides.forEach(slideEl => {\n          slideEl.classList.remove(params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n          slideEl.removeAttribute('style');\n          slideEl.removeAttribute('data-swiper-slide-index');\n        });\n      }\n    }\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach(eventName => {\n      swiper.off(eventName);\n    });\n    if (deleteInstance !== false) {\n      swiper.el.swiper = null;\n      deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n    return null;\n  }\n  static extendDefaults(newDefaults) {\n    extend(extendedDefaults, newDefaults);\n  }\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n  static get defaults() {\n    return defaults;\n  }\n  static installModule(mod) {\n    if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\n    const modules = Swiper.prototype.__modules__;\n    if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\n      modules.push(mod);\n    }\n  }\n  static use(module) {\n    if (Array.isArray(module)) {\n      module.forEach(m => Swiper.installModule(m));\n      return Swiper;\n    }\n    Swiper.installModule(module);\n    return Swiper;\n  }\n}\nObject.keys(prototypes).forEach(prototypeGroup => {\n  Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\n    Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n  });\n});\nSwiper.use([Resize, Observer]);\nexport default Swiper;","/**\n * SSR Window 4.0.2\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2021, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: December 13, 2021\n */\n/* eslint-disable no-param-reassign */\nfunction isObject(obj) {\n    return (obj !== null &&\n        typeof obj === 'object' &&\n        'constructor' in obj &&\n        obj.constructor === Object);\n}\nfunction extend(target = {}, src = {}) {\n    Object.keys(src).forEach((key) => {\n        if (typeof target[key] === 'undefined')\n            target[key] = src[key];\n        else if (isObject(src[key]) &&\n            isObject(target[key]) &&\n            Object.keys(src[key]).length > 0) {\n            extend(target[key], src[key]);\n        }\n    });\n}\n\nconst ssrDocument = {\n    body: {},\n    addEventListener() { },\n    removeEventListener() { },\n    activeElement: {\n        blur() { },\n        nodeName: '',\n    },\n    querySelector() {\n        return null;\n    },\n    querySelectorAll() {\n        return [];\n    },\n    getElementById() {\n        return null;\n    },\n    createEvent() {\n        return {\n            initEvent() { },\n        };\n    },\n    createElement() {\n        return {\n            children: [],\n            childNodes: [],\n            style: {},\n            setAttribute() { },\n            getElementsByTagName() {\n                return [];\n            },\n        };\n    },\n    createElementNS() {\n        return {};\n    },\n    importNode() {\n        return null;\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n};\nfunction getDocument() {\n    const doc = typeof document !== 'undefined' ? document : {};\n    extend(doc, ssrDocument);\n    return doc;\n}\n\nconst ssrWindow = {\n    document: ssrDocument,\n    navigator: {\n        userAgent: '',\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n    history: {\n        replaceState() { },\n        pushState() { },\n        go() { },\n        back() { },\n    },\n    CustomEvent: function CustomEvent() {\n        return this;\n    },\n    addEventListener() { },\n    removeEventListener() { },\n    getComputedStyle() {\n        return {\n            getPropertyValue() {\n                return '';\n            },\n        };\n    },\n    Image() { },\n    Date() { },\n    screen: {},\n    setTimeout() { },\n    clearTimeout() { },\n    matchMedia() {\n        return {};\n    },\n    requestAnimationFrame(callback) {\n        if (typeof setTimeout === 'undefined') {\n            callback();\n            return null;\n        }\n        return setTimeout(callback, 0);\n    },\n    cancelAnimationFrame(id) {\n        if (typeof setTimeout === 'undefined') {\n            return;\n        }\n        clearTimeout(id);\n    },\n};\nfunction getWindow() {\n    const win = typeof window !== 'undefined' ? window : {};\n    extend(win, ssrWindow);\n    return win;\n}\n\nexport { extend, getDocument, getWindow, ssrDocument, ssrWindow };\n","import { getWindow, getDocument } from 'ssr-window';\nfunction deleteProps(obj) {\n  const object = obj;\n  Object.keys(object).forEach(key => {\n    try {\n      object[key] = null;\n    } catch (e) {\n      // no getter for object\n    }\n    try {\n      delete object[key];\n    } catch (e) {\n      // something got wrong\n    }\n  });\n}\nfunction nextTick(callback, delay = 0) {\n  return setTimeout(callback, delay);\n}\nfunction now() {\n  return Date.now();\n}\nfunction getComputedStyle(el) {\n  const window = getWindow();\n  let style;\n  if (window.getComputedStyle) {\n    style = window.getComputedStyle(el, null);\n  }\n  if (!style && el.currentStyle) {\n    style = el.currentStyle;\n  }\n  if (!style) {\n    style = el.style;\n  }\n  return style;\n}\nfunction getTranslate(el, axis = 'x') {\n  const window = getWindow();\n  let matrix;\n  let curTransform;\n  let transformMatrix;\n  const curStyle = getComputedStyle(el, null);\n  if (window.WebKitCSSMatrix) {\n    curTransform = curStyle.transform || curStyle.webkitTransform;\n    if (curTransform.split(',').length > 6) {\n      curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n    }\n    // Some old versions of Webkit choke when 'none' is passed; pass\n    // empty string instead in this case\n    transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n  } else {\n    transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n    matrix = transformMatrix.toString().split(',');\n  }\n  if (axis === 'x') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[4]);\n  }\n  if (axis === 'y') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[5]);\n  }\n  return curTransform || 0;\n}\nfunction isObject(o) {\n  return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\n}\nfunction isNode(node) {\n  // eslint-disable-next-line\n  if (typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined') {\n    return node instanceof HTMLElement;\n  }\n  return node && (node.nodeType === 1 || node.nodeType === 11);\n}\nfunction extend(...args) {\n  const to = Object(args[0]);\n  const noExtend = ['__proto__', 'constructor', 'prototype'];\n  for (let i = 1; i < args.length; i += 1) {\n    const nextSource = args[i];\n    if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {\n      const keysArray = Object.keys(Object(nextSource)).filter(key => noExtend.indexOf(key) < 0);\n      for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n        const nextKey = keysArray[nextIndex];\n        const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n        if (desc !== undefined && desc.enumerable) {\n          if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            to[nextKey] = {};\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n  }\n  return to;\n}\nfunction setCSSProperty(el, varName, varValue) {\n  el.style.setProperty(varName, varValue);\n}\nfunction animateCSSModeScroll({\n  swiper,\n  targetPosition,\n  side\n}) {\n  const window = getWindow();\n  const startPosition = -swiper.translate;\n  let startTime = null;\n  let time;\n  const duration = swiper.params.speed;\n  swiper.wrapperEl.style.scrollSnapType = 'none';\n  window.cancelAnimationFrame(swiper.cssModeFrameID);\n  const dir = targetPosition > startPosition ? 'next' : 'prev';\n  const isOutOfBound = (current, target) => {\n    return dir === 'next' && current >= target || dir === 'prev' && current <= target;\n  };\n  const animate = () => {\n    time = new Date().getTime();\n    if (startTime === null) {\n      startTime = time;\n    }\n    const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n    const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;\n    let currentPosition = startPosition + easeProgress * (targetPosition - startPosition);\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      currentPosition = targetPosition;\n    }\n    swiper.wrapperEl.scrollTo({\n      [side]: currentPosition\n    });\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.scrollSnapType = '';\n      setTimeout(() => {\n        swiper.wrapperEl.style.overflow = '';\n        swiper.wrapperEl.scrollTo({\n          [side]: currentPosition\n        });\n      });\n      window.cancelAnimationFrame(swiper.cssModeFrameID);\n      return;\n    }\n    swiper.cssModeFrameID = window.requestAnimationFrame(animate);\n  };\n  animate();\n}\nfunction getSlideTransformEl(slideEl) {\n  return slideEl.querySelector('.swiper-slide-transform') || slideEl.shadowEl && slideEl.shadowEl.querySelector('.swiper-slide-transform') || slideEl;\n}\nfunction findElementsInElements(elements = [], selector = '') {\n  const found = [];\n  elements.forEach(el => {\n    found.push(...el.querySelectorAll(selector));\n  });\n  return found;\n}\nfunction elementChildren(element, selector = '') {\n  return [...element.children].filter(el => el.matches(selector));\n}\nfunction createElement(tag, classes = []) {\n  const el = document.createElement(tag);\n  el.classList.add(...(Array.isArray(classes) ? classes : [classes]));\n  return el;\n}\nfunction elementOffset(el) {\n  const window = getWindow();\n  const document = getDocument();\n  const box = el.getBoundingClientRect();\n  const body = document.body;\n  const clientTop = el.clientTop || body.clientTop || 0;\n  const clientLeft = el.clientLeft || body.clientLeft || 0;\n  const scrollTop = el === window ? window.scrollY : el.scrollTop;\n  const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n  return {\n    top: box.top + scrollTop - clientTop,\n    left: box.left + scrollLeft - clientLeft\n  };\n}\nfunction elementPrevAll(el, selector) {\n  const prevEls = [];\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if (prev.matches(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return prevEls;\n}\nfunction elementNextAll(el, selector) {\n  const nextEls = [];\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if (next.matches(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return nextEls;\n}\nfunction elementStyle(el, prop) {\n  const window = getWindow();\n  return window.getComputedStyle(el, null).getPropertyValue(prop);\n}\nfunction elementIndex(el) {\n  let child = el;\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\nfunction elementParents(el, selector) {\n  const parents = []; // eslint-disable-line\n  let parent = el.parentElement; // eslint-disable-line\n  while (parent) {\n    if (selector) {\n      if (parent.matches(selector)) parents.push(parent);\n    } else {\n      parents.push(parent);\n    }\n    parent = parent.parentElement;\n  }\n  return parents;\n}\nfunction elementTransitionEnd(el, callback) {\n  function fireCallBack(e) {\n    if (e.target !== el) return;\n    callback.call(el, e);\n    el.removeEventListener('transitionend', fireCallBack);\n  }\n  if (callback) {\n    el.addEventListener('transitionend', fireCallBack);\n  }\n}\nfunction elementOuterSize(el, size, includeMargins) {\n  const window = getWindow();\n  if (includeMargins) {\n    return el[size === 'width' ? 'offsetWidth' : 'offsetHeight'] + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-right' : 'margin-top')) + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-left' : 'margin-bottom'));\n  }\n  return el.offsetWidth;\n}\nexport { animateCSSModeScroll, deleteProps, nextTick, now, getTranslate, isObject, extend, getComputedStyle, setCSSProperty, getSlideTransformEl,\n// dom\nfindElementsInElements, createElement, elementChildren, elementOffset, elementPrevAll, elementNextAll, elementStyle, elementIndex, elementParents, elementTransitionEnd, elementOuterSize };","import { getWindow, getDocument } from 'ssr-window';\nlet support;\nfunction calcSupport() {\n  const window = getWindow();\n  const document = getDocument();\n  return {\n    smoothScroll: document.documentElement && 'scrollBehavior' in document.documentElement.style,\n    touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch)\n  };\n}\nfunction getSupport() {\n  if (!support) {\n    support = calcSupport();\n  }\n  return support;\n}\nexport { getSupport };","import { getWindow } from 'ssr-window';\nimport { getSupport } from './get-support.js';\nlet deviceCached;\nfunction calcDevice({\n  userAgent\n} = {}) {\n  const support = getSupport();\n  const window = getWindow();\n  const platform = window.navigator.platform;\n  const ua = userAgent || window.navigator.userAgent;\n  const device = {\n    ios: false,\n    android: false\n  };\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const windows = platform === 'Win32';\n  let macos = platform === 'MacIntel';\n\n  // iPadOs 13 fix\n  const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n  if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    if (!ipad) ipad = [0, 1, '13_0_0'];\n    macos = false;\n  }\n\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.android = true;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n\n  // Export object\n  return device;\n}\nfunction getDevice(overrides = {}) {\n  if (!deviceCached) {\n    deviceCached = calcDevice(overrides);\n  }\n  return deviceCached;\n}\nexport { getDevice };","import { getWindow } from 'ssr-window';\nlet browser;\nfunction calcBrowser() {\n  const window = getWindow();\n  let needPerspectiveFix = false;\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n  }\n  if (isSafari()) {\n    const ua = String(window.navigator.userAgent);\n    if (ua.includes('Version/')) {\n      const [major, minor] = ua.split('Version/')[1].split(' ')[0].split('.').map(num => Number(num));\n      needPerspectiveFix = major < 16 || major === 16 && minor < 2;\n    }\n  }\n  return {\n    isSafari: needPerspectiveFix || isSafari(),\n    needPerspectiveFix,\n    isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)\n  };\n}\nfunction getBrowser() {\n  if (!browser) {\n    browser = calcBrowser();\n  }\n  return browser;\n}\nexport { getBrowser };","import { getWindow } from 'ssr-window';\nexport default function Resize({\n  swiper,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  let observer = null;\n  let animationFrame = null;\n  const resizeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('beforeResize');\n    emit('resize');\n  };\n  const createObserver = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    observer = new ResizeObserver(entries => {\n      animationFrame = window.requestAnimationFrame(() => {\n        const {\n          width,\n          height\n        } = swiper;\n        let newWidth = width;\n        let newHeight = height;\n        entries.forEach(({\n          contentBoxSize,\n          contentRect,\n          target\n        }) => {\n          if (target && target !== swiper.el) return;\n          newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n          newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n        });\n        if (newWidth !== width || newHeight !== height) {\n          resizeHandler();\n        }\n      });\n    });\n    observer.observe(swiper.el);\n  };\n  const removeObserver = () => {\n    if (animationFrame) {\n      window.cancelAnimationFrame(animationFrame);\n    }\n    if (observer && observer.unobserve && swiper.el) {\n      observer.unobserve(swiper.el);\n      observer = null;\n    }\n  };\n  const orientationChangeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('orientationchange');\n  };\n  on('init', () => {\n    if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\n      createObserver();\n      return;\n    }\n    window.addEventListener('resize', resizeHandler);\n    window.addEventListener('orientationchange', orientationChangeHandler);\n  });\n  on('destroy', () => {\n    removeObserver();\n    window.removeEventListener('resize', resizeHandler);\n    window.removeEventListener('orientationchange', orientationChangeHandler);\n  });\n}","import { getWindow } from 'ssr-window';\nimport { elementParents } from '../../../shared/utils.js';\nexport default function Observer({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const observers = [];\n  const window = getWindow();\n  const attach = (target, options = {}) => {\n    const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n    const observer = new ObserverFunc(mutations => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (swiper.__preventObserver__) return;\n      if (mutations.length === 1) {\n        emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        emit('observerUpdate', mutations[0]);\n      };\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n    });\n    observers.push(observer);\n  };\n  const init = () => {\n    if (!swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = elementParents(swiper.el);\n      for (let i = 0; i < containerParents.length; i += 1) {\n        attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    attach(swiper.el, {\n      childList: swiper.params.observeSlideChildren\n    });\n\n    // Observe wrapper\n    attach(swiper.wrapperEl, {\n      attributes: false\n    });\n  };\n  const destroy = () => {\n    observers.forEach(observer => {\n      observer.disconnect();\n    });\n    observers.splice(0, observers.length);\n  };\n  extendParams({\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false\n  });\n  on('init', init);\n  on('destroy', destroy);\n}","/* eslint-disable no-underscore-dangle */\n\nexport default {\n  on(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(event => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  },\n  once(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      self.off(events, onceHandler);\n      if (onceHandler.__emitterProxy) {\n        delete onceHandler.__emitterProxy;\n      }\n      handler.apply(self, args);\n    }\n    onceHandler.__emitterProxy = handler;\n    return self.on(events, onceHandler, priority);\n  },\n  onAny(handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    if (self.eventsAnyListeners.indexOf(handler) < 0) {\n      self.eventsAnyListeners[method](handler);\n    }\n    return self;\n  },\n  offAny(handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsAnyListeners) return self;\n    const index = self.eventsAnyListeners.indexOf(handler);\n    if (index >= 0) {\n      self.eventsAnyListeners.splice(index, 1);\n    }\n    return self;\n  },\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach(event => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  },\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    data.unshift(context);\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(event => {\n      if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n        self.eventsAnyListeners.forEach(eventHandler => {\n          eventHandler.apply(context, [event, ...data]);\n        });\n      }\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach(eventHandler => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n};","import updateSize from './updateSize.js';\nimport updateSlides from './updateSlides.js';\nimport updateAutoHeight from './updateAutoHeight.js';\nimport updateSlidesOffset from './updateSlidesOffset.js';\nimport updateSlidesProgress from './updateSlidesProgress.js';\nimport updateProgress from './updateProgress.js';\nimport updateSlidesClasses from './updateSlidesClasses.js';\nimport updateActiveIndex from './updateActiveIndex.js';\nimport updateClickedSlide from './updateClickedSlide.js';\nexport default {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide\n};","import { elementStyle } from '../../shared/utils.js';\nexport default function updateSize() {\n  const swiper = this;\n  let width;\n  let height;\n  const el = swiper.el;\n  if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\n    width = swiper.params.width;\n  } else {\n    width = el.clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\n    height = swiper.params.height;\n  } else {\n    height = el.clientHeight;\n  }\n  if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt(elementStyle(el, 'padding-left') || 0, 10) - parseInt(elementStyle(el, 'padding-right') || 0, 10);\n  height = height - parseInt(elementStyle(el, 'padding-top') || 0, 10) - parseInt(elementStyle(el, 'padding-bottom') || 0, 10);\n  if (Number.isNaN(width)) width = 0;\n  if (Number.isNaN(height)) height = 0;\n  Object.assign(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height\n  });\n}","import { elementChildren, elementOuterSize, elementStyle, setCSSProperty } from '../../shared/utils.js';\nexport default function updateSlides() {\n  const swiper = this;\n  function getDirectionLabel(property) {\n    if (swiper.isHorizontal()) {\n      return property;\n    }\n    // prettier-ignore\n    return {\n      'width': 'height',\n      'margin-top': 'margin-left',\n      'margin-bottom ': 'margin-right',\n      'margin-left': 'margin-top',\n      'margin-right': 'margin-bottom',\n      'padding-left': 'padding-top',\n      'padding-right': 'padding-bottom',\n      'marginRight': 'marginBottom'\n    }[property];\n  }\n  function getDirectionPropertyValue(node, label) {\n    return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n  }\n  const params = swiper.params;\n  const {\n    wrapperEl,\n    slidesEl,\n    size: swiperSize,\n    rtlTranslate: rtl,\n    wrongRTL\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = elementChildren(slidesEl, `.${swiper.params.slideClass}, swiper-slide`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.slidesGrid.length;\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  }\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  slides.forEach(slideEl => {\n    if (rtl) {\n      slideEl.style.marginLeft = '';\n    } else {\n      slideEl.style.marginRight = '';\n    }\n    slideEl.style.marginBottom = '';\n    slideEl.style.marginTop = '';\n  });\n\n  // reset cssMode offsets\n  if (params.centeredSlides && params.cssMode) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', '');\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', '');\n  }\n  const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n  if (gridEnabled) {\n    swiper.grid.initSlides(slidesLength);\n  }\n\n  // Calc slides\n  let slideSize;\n  const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\n    return typeof params.breakpoints[key].slidesPerView !== 'undefined';\n  }).length > 0;\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    let slide;\n    if (slides[i]) slide = slides[i];\n    if (gridEnabled) {\n      swiper.grid.updateSlide(i, slide, slidesLength, getDirectionLabel);\n    }\n    if (slides[i] && elementStyle(slide, 'display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      if (shouldResetSlideSize) {\n        slides[i].style[getDirectionLabel('width')] = ``;\n      }\n      const slideStyles = getComputedStyle(slide);\n      const currentTransform = slide.style.transform;\n      const currentWebKitTransform = slide.style.webkitTransform;\n      if (currentTransform) {\n        slide.style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? elementOuterSize(slide, 'width', true) : elementOuterSize(slide, 'height', true);\n      } else {\n        // eslint-disable-next-line\n        const width = getDirectionPropertyValue(slideStyles, 'width');\n        const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n        const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n        const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n        const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n        const boxSizing = slideStyles.getPropertyValue('box-sizing');\n        if (boxSizing && boxSizing === 'border-box') {\n          slideSize = width + marginLeft + marginRight;\n        } else {\n          const {\n            clientWidth,\n            offsetWidth\n          } = slide;\n          slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n        }\n      }\n      if (currentTransform) {\n        slide.style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n      if (slides[i]) {\n        slides[i].style[getDirectionLabel('width')] = `${slideSize}px`;\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    wrapperEl.style.width = `${swiper.virtualSize + params.spaceBetween}px`;\n  }\n  if (params.setWrapperSize) {\n    wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + params.spaceBetween}px`;\n  }\n  if (gridEnabled) {\n    swiper.grid.updateWrapperSize(slideSize, snapGrid, getDirectionLabel);\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    const newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (isVirtual && params.loop) {\n    const size = slidesSizesGrid[0] + spaceBetween;\n    if (params.slidesPerGroup > 1) {\n      const groups = Math.ceil((swiper.virtual.slidesBefore + swiper.virtual.slidesAfter) / params.slidesPerGroup);\n      const groupSize = size * params.slidesPerGroup;\n      for (let i = 0; i < groups; i += 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + groupSize);\n      }\n    }\n    for (let i = 0; i < swiper.virtual.slidesBefore + swiper.virtual.slidesAfter; i += 1) {\n      if (params.slidesPerGroup === 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + size);\n      }\n      slidesGrid.push(slidesGrid[slidesGrid.length - 1] + size);\n      swiper.virtualSize += size;\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n  if (params.spaceBetween !== 0) {\n    const key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n    slides.filter((_, slideIndex) => {\n      if (!params.cssMode || params.loop) return true;\n      if (slideIndex === slides.length - 1) {\n        return false;\n      }\n      return true;\n    }).forEach(slideEl => {\n      slideEl.style[key] = `${spaceBetween}px`;\n    });\n  }\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    const maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map(snap => {\n      if (snap < 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n  Object.assign(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid\n  });\n  if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\n    const addToSnapGrid = -swiper.snapGrid[0];\n    const addToSlidesGrid = -swiper.slidesGrid[0];\n    swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\n    swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\n  }\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (!isVirtual && !params.cssMode && (params.effect === 'slide' || params.effect === 'fade')) {\n    const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;\n    const hasClassBackfaceClassAdded = swiper.el.classList.contains(backFaceHiddenClass);\n    if (slidesLength <= params.maxBackfaceHiddenSlides) {\n      if (!hasClassBackfaceClassAdded) swiper.el.classList.add(backFaceHiddenClass);\n    } else if (hasClassBackfaceClassAdded) {\n      swiper.el.classList.remove(backFaceHiddenClass);\n    }\n  }\n}","export default function updateAutoHeight(speed) {\n  const swiper = this;\n  const activeSlides = [];\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  const getSlideByIndex = index => {\n    if (isVirtual) {\n      return swiper.getSlideIndexByData(index);\n    }\n    return swiper.slides[index];\n  };\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    if (swiper.params.centeredSlides) {\n      (swiper.visibleSlides || []).forEach(slide => {\n        activeSlides.push(slide);\n      });\n    } else {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        const index = swiper.activeIndex + i;\n        if (index > swiper.slides.length && !isVirtual) break;\n        activeSlides.push(getSlideByIndex(index));\n      }\n    }\n  } else {\n    activeSlides.push(getSlideByIndex(swiper.activeIndex));\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight || newHeight === 0) swiper.wrapperEl.style.height = `${newHeight}px`;\n}","export default function updateSlidesOffset() {\n  const swiper = this;\n  const slides = swiper.slides;\n  // eslint-disable-next-line\n  const minusOffset = swiper.isElement ? swiper.isHorizontal() ? swiper.wrapperEl.offsetLeft : swiper.wrapperEl.offsetTop : 0;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = (swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop) - minusOffset - swiper.cssOverflowAdjustment();\n  }\n}","export default function updateSlidesProgress(translate = this && this.translate || 0) {\n  const swiper = this;\n  const params = swiper.params;\n  const {\n    slides,\n    rtlTranslate: rtl,\n    snapGrid\n  } = swiper;\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideVisibleClass);\n  });\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    let slideOffset = slide.swiperSlideOffset;\n    if (params.cssMode && params.centeredSlides) {\n      slideOffset -= slides[0].swiperSlideOffset;\n    }\n    const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n    const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n    const slideBefore = -(offsetCenter - slideOffset);\n    const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n    const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n    if (isVisible) {\n      swiper.visibleSlides.push(slide);\n      swiper.visibleSlidesIndexes.push(i);\n      slides[i].classList.add(params.slideVisibleClass);\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n    slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\n  }\n}","export default function updateProgress(translate) {\n  const swiper = this;\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1;\n    // eslint-disable-next-line\n    translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n  }\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let {\n    progress,\n    isBeginning,\n    isEnd,\n    progressLoop\n  } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / translatesDiff;\n    const isBeginningRounded = Math.abs(translate - swiper.minTranslate()) < 1;\n    const isEndRounded = Math.abs(translate - swiper.maxTranslate()) < 1;\n    isBeginning = isBeginningRounded || progress <= 0;\n    isEnd = isEndRounded || progress >= 1;\n    if (isBeginningRounded) progress = 0;\n    if (isEndRounded) progress = 1;\n  }\n  if (params.loop) {\n    const firstSlideIndex = swiper.getSlideIndexByData(0);\n    const lastSlideIndex = swiper.getSlideIndexByData(swiper.slides.length - 1);\n    const firstSlideTranslate = swiper.slidesGrid[firstSlideIndex];\n    const lastSlideTranslate = swiper.slidesGrid[lastSlideIndex];\n    const translateMax = swiper.slidesGrid[swiper.slidesGrid.length - 1];\n    const translateAbs = Math.abs(translate);\n    if (translateAbs >= firstSlideTranslate) {\n      progressLoop = (translateAbs - firstSlideTranslate) / translateMax;\n    } else {\n      progressLoop = (translateAbs + translateMax - lastSlideTranslate) / translateMax;\n    }\n    if (progressLoop > 1) progressLoop -= 1;\n  }\n  Object.assign(swiper, {\n    progress,\n    progressLoop,\n    isBeginning,\n    isEnd\n  });\n  if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n    swiper.emit('fromEdge');\n  }\n  swiper.emit('progress', progress);\n}","import { elementChildren, elementNextAll, elementPrevAll } from '../../shared/utils.js';\nexport default function updateSlidesClasses() {\n  const swiper = this;\n  const {\n    slides,\n    params,\n    slidesEl,\n    activeIndex\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const getFilteredSlide = selector => {\n    return elementChildren(slidesEl, `.${params.slideClass}${selector}, swiper-slide${selector}`)[0];\n  };\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n  });\n  let activeSlide;\n  if (isVirtual) {\n    if (params.loop) {\n      let slideIndex = activeIndex - swiper.virtual.slidesBefore;\n      if (slideIndex < 0) slideIndex = swiper.virtual.slides.length + slideIndex;\n      if (slideIndex >= swiper.virtual.slides.length) slideIndex -= swiper.virtual.slides.length;\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${slideIndex}\"]`);\n    } else {\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${activeIndex}\"]`);\n    }\n  } else {\n    activeSlide = slides[activeIndex];\n  }\n  if (activeSlide) {\n    // Active classes\n    activeSlide.classList.add(params.slideActiveClass);\n\n    // Next Slide\n    let nextSlide = elementNextAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !nextSlide) {\n      nextSlide = slides[0];\n    }\n    if (nextSlide) {\n      nextSlide.classList.add(params.slideNextClass);\n    }\n    // Prev Slide\n    let prevSlide = elementPrevAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !prevSlide === 0) {\n      prevSlide = slides[slides.length - 1];\n    }\n    if (prevSlide) {\n      prevSlide.classList.add(params.slidePrevClass);\n    }\n  }\n  swiper.emitSlidesClasses();\n}","import { preload } from '../../shared/process-lazy-preloader.js';\nexport function getActiveIndexByTranslate(swiper) {\n  const {\n    slidesGrid,\n    params\n  } = swiper;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  let activeIndex;\n  for (let i = 0; i < slidesGrid.length; i += 1) {\n    if (typeof slidesGrid[i + 1] !== 'undefined') {\n      if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n        activeIndex = i;\n      } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n        activeIndex = i + 1;\n      }\n    } else if (translate >= slidesGrid[i]) {\n      activeIndex = i;\n    }\n  }\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n  }\n  return activeIndex;\n}\nexport default function updateActiveIndex(newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    snapGrid,\n    params,\n    activeIndex: previousIndex,\n    realIndex: previousRealIndex,\n    snapIndex: previousSnapIndex\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  const getVirtualRealIndex = aIndex => {\n    let realIndex = aIndex - swiper.virtual.slidesBefore;\n    if (realIndex < 0) {\n      realIndex = swiper.virtual.slides.length + realIndex;\n    }\n    if (realIndex >= swiper.virtual.slides.length) {\n      realIndex -= swiper.virtual.slides.length;\n    }\n    return realIndex;\n  };\n  if (typeof activeIndex === 'undefined') {\n    activeIndex = getActiveIndexByTranslate(swiper);\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.realIndex = getVirtualRealIndex(activeIndex);\n    }\n    return;\n  }\n  // Get real index\n  let realIndex;\n  if (swiper.virtual && params.virtual.enabled && params.loop) {\n    realIndex = getVirtualRealIndex(activeIndex);\n  } else if (swiper.slides[activeIndex]) {\n    realIndex = parseInt(swiper.slides[activeIndex].getAttribute('data-swiper-slide-index') || activeIndex, 10);\n  } else {\n    realIndex = activeIndex;\n  }\n  Object.assign(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex\n  });\n  if (swiper.initialized) {\n    preload(swiper);\n  }\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}","export const processLazyPreloader = (swiper, imageEl) => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  const slideSelector = () => swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  const slideEl = imageEl.closest(slideSelector());\n  if (slideEl) {\n    const lazyEl = slideEl.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n    if (lazyEl) lazyEl.remove();\n  }\n};\nconst unlazy = (swiper, index) => {\n  if (!swiper.slides[index]) return;\n  const imageEl = swiper.slides[index].querySelector('[loading=\"lazy\"]');\n  if (imageEl) imageEl.removeAttribute('loading');\n};\nexport const preload = swiper => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  let amount = swiper.params.lazyPreloadPrevNext;\n  const len = swiper.slides.length;\n  if (!len || !amount || amount < 0) return;\n  amount = Math.min(amount, len);\n  const slidesPerView = swiper.params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(swiper.params.slidesPerView);\n  const activeIndex = swiper.activeIndex;\n  const slideIndexLastInView = activeIndex + slidesPerView - 1;\n  if (swiper.params.rewind) {\n    for (let i = activeIndex - amount; i <= slideIndexLastInView + amount; i += 1) {\n      const realIndex = (i % len + len) % len;\n      if (realIndex !== activeIndex && realIndex > slideIndexLastInView) unlazy(swiper, realIndex);\n    }\n  } else {\n    for (let i = Math.max(slideIndexLastInView - amount, 0); i <= Math.min(slideIndexLastInView + amount, len - 1); i += 1) {\n      if (i !== activeIndex && i > slideIndexLastInView) unlazy(swiper, i);\n    }\n  }\n};","export default function updateClickedSlide(e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = e.closest(`.${params.slideClass}, swiper-slide`);\n  let slideFound = false;\n  let slideIndex;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) {\n        slideFound = true;\n        slideIndex = i;\n        break;\n      }\n    }\n  }\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt(slide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = slideIndex;\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}","import getTranslate from './getTranslate.js';\nimport setTranslate from './setTranslate.js';\nimport minTranslate from './minTranslate.js';\nimport maxTranslate from './maxTranslate.js';\nimport translateTo from './translateTo.js';\nexport default {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n  translateTo\n};","import { getTranslate } from '../../shared/utils.js';\nexport default function getSwiperTranslate(axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n  const {\n    params,\n    rtlTranslate: rtl,\n    translate,\n    wrapperEl\n  } = swiper;\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n  if (params.cssMode) {\n    return translate;\n  }\n  let currentTranslate = getTranslate(wrapperEl, axis);\n  currentTranslate += swiper.cssOverflowAdjustment();\n  if (rtl) currentTranslate = -currentTranslate;\n  return currentTranslate || 0;\n}","export default function setTranslate(translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl,\n    params,\n    wrapperEl,\n    progress\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    if (swiper.isHorizontal()) {\n      x -= swiper.cssOverflowAdjustment();\n    } else {\n      y -= swiper.cssOverflowAdjustment();\n    }\n    wrapperEl.style.transform = `translate3d(${x}px, ${y}px, ${z}px)`;\n  }\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, byController);\n}","export default function minTranslate() {\n  return -this.snapGrid[0];\n}","export default function maxTranslate() {\n  return -this.snapGrid[this.snapGrid.length - 1];\n}","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function translateTo(translate = 0, speed = this.params.speed, runCallbacks = true, translateBounds = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    wrapperEl\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate;\n\n  // Update progress\n  swiper.updateProgress(newTranslate);\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: -newTranslate,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: -newTranslate,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.wrapperEl.removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n      swiper.wrapperEl.addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n    }\n  }\n  return true;\n}","import setTransition from './setTransition.js';\nimport transitionStart from './transitionStart.js';\nimport transitionEnd from './transitionEnd.js';\nexport default {\n  setTransition,\n  transitionStart,\n  transitionEnd\n};","export default function setTransition(duration, byController) {\n  const swiper = this;\n  if (!swiper.params.cssMode) {\n    swiper.wrapperEl.style.transitionDuration = `${duration}ms`;\n  }\n  swiper.emit('setTransition', duration, byController);\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionStart(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  if (params.cssMode) return;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'Start'\n  });\n}","export default function transitionEmit({\n  swiper,\n  runCallbacks,\n  direction,\n  step\n}) {\n  const {\n    activeIndex,\n    previousIndex\n  } = swiper;\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n  }\n  swiper.emit(`transition${step}`);\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit(`slideResetTransition${step}`);\n      return;\n    }\n    swiper.emit(`slideChangeTransition${step}`);\n    if (dir === 'next') {\n      swiper.emit(`slideNextTransition${step}`);\n    } else {\n      swiper.emit(`slidePrevTransition${step}`);\n    }\n  }\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionEnd(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  swiper.animating = false;\n  if (params.cssMode) return;\n  swiper.setTransition(0);\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'End'\n  });\n}","import slideTo from './slideTo.js';\nimport slideToLoop from './slideToLoop.js';\nimport slideNext from './slideNext.js';\nimport slidePrev from './slidePrev.js';\nimport slideReset from './slideReset.js';\nimport slideToClosest from './slideToClosest.js';\nimport slideToClickedSlide from './slideToClickedSlide.js';\nexport default {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide\n};","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function slideTo(index = 0, speed = this.params.speed, runCallbacks = true, internal, initial) {\n  if (typeof index === 'string') {\n    index = parseInt(index, 10);\n  }\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    previousIndex,\n    activeIndex,\n    rtlTranslate: rtl,\n    wrapperEl,\n    enabled\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) {\n    return false;\n  }\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n  let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  const translate = -snapGrid[snapIndex];\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      const normalizedTranslate = -Math.floor(translate * 100);\n      const normalizedGrid = Math.floor(slidesGrid[i] * 100);\n      const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {\n          slideIndex = i;\n        } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\n          slideIndex = i + 1;\n        }\n      } else if (normalizedTranslate >= normalizedGrid) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) {\n        return false;\n      }\n    }\n  }\n  if (slideIndex !== (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  // Update progress\n  swiper.updateProgress(translate);\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset';\n\n  // Update Index\n  if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    const t = rtl ? translate : -translate;\n    if (speed === 0) {\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      if (isVirtual) {\n        swiper.wrapperEl.style.scrollSnapType = 'none';\n        swiper._immediateVirtual = true;\n      }\n      if (isVirtual && !swiper._cssModeVirtualInitialSet && swiper.params.initialSlide > 0) {\n        swiper._cssModeVirtualInitialSet = true;\n        requestAnimationFrame(() => {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n      }\n      if (isVirtual) {\n        requestAnimationFrame(() => {\n          swiper.wrapperEl.style.scrollSnapType = '';\n          swiper._immediateVirtual = false;\n        });\n      }\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: t,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: t,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  swiper.setTransition(speed);\n  swiper.setTranslate(translate);\n  swiper.updateActiveIndex(slideIndex);\n  swiper.updateSlidesClasses();\n  swiper.emit('beforeTransitionStart', speed, internal);\n  swiper.transitionStart(runCallbacks, direction);\n  if (speed === 0) {\n    swiper.transitionEnd(runCallbacks, direction);\n  } else if (!swiper.animating) {\n    swiper.animating = true;\n    if (!swiper.onSlideToWrapperTransitionEnd) {\n      swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n        if (!swiper || swiper.destroyed) return;\n        if (e.target !== this) return;\n        swiper.wrapperEl.removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.onSlideToWrapperTransitionEnd = null;\n        delete swiper.onSlideToWrapperTransitionEnd;\n        swiper.transitionEnd(runCallbacks, direction);\n      };\n    }\n    swiper.wrapperEl.addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n  }\n  return true;\n}","export default function slideToLoop(index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  if (typeof index === 'string') {\n    const indexAsNumber = parseInt(index, 10);\n    index = indexAsNumber;\n  }\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      // eslint-disable-next-line\n      newIndex = newIndex + swiper.virtual.slidesBefore;\n    } else {\n      newIndex = swiper.getSlideIndexByData(newIndex);\n    }\n  }\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideNext(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    enabled,\n    params,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  let perGroup = params.slidesPerGroup;\n  if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n    perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\n  }\n  const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'next'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  if (params.rewind && swiper.isEnd) {\n    return swiper.slideTo(0, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slidePrev(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    rtlTranslate,\n    enabled,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'prev'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\n    let prevSnapIndex;\n    snapGrid.forEach((snap, snapIndex) => {\n      if (normalizedTranslate >= snap) {\n        // prevSnap = snap;\n        prevSnapIndex = snapIndex;\n      }\n    });\n    if (typeof prevSnapIndex !== 'undefined') {\n      prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\n    }\n  }\n  let prevIndex = 0;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n    if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n      prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\n      prevIndex = Math.max(prevIndex, 0);\n    }\n  }\n  if (params.rewind && swiper.isBeginning) {\n    const lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    return swiper.slideTo(lastIndex, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideReset(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideToClosest(speed = this.params.speed, runCallbacks = true, internal, threshold = 0.5) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n  const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n    if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\n    const currentSnap = swiper.snapGrid[snapIndex];\n    if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.slidesGrid.length - 1);\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}","import { elementChildren, nextTick } from '../../shared/utils.js';\nexport default function slideToClickedSlide() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  const slideSelector = swiper.isElement ? `swiper-slide` : `.${params.slideClass}`;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt(swiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n        swiper.loopFix();\n        slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n        nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n      nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}","import loopCreate from './loopCreate.js';\nimport loopFix from './loopFix.js';\nimport loopDestroy from './loopDestroy.js';\nexport default {\n  loopCreate,\n  loopFix,\n  loopDestroy\n};","import { elementChildren } from '../../shared/utils.js';\nexport default function loopCreate(slideRealIndex) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  slides.forEach((el, index) => {\n    el.setAttribute('data-swiper-slide-index', index);\n  });\n  swiper.loopFix({\n    slideRealIndex,\n    direction: params.centeredSlides ? undefined : 'next'\n  });\n}","export default function loopFix({\n  slideRealIndex,\n  slideTo = true,\n  direction,\n  setTranslate,\n  activeSlideIndex,\n  byController,\n  byMousewheel\n} = {}) {\n  const swiper = this;\n  if (!swiper.params.loop) return;\n  swiper.emit('beforeLoopFix');\n  const {\n    slides,\n    allowSlidePrev,\n    allowSlideNext,\n    slidesEl,\n    params\n  } = swiper;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n  if (swiper.virtual && params.virtual.enabled) {\n    if (slideTo) {\n      if (!params.centeredSlides && swiper.snapIndex === 0) {\n        swiper.slideTo(swiper.virtual.slides.length, 0, false, true);\n      } else if (params.centeredSlides && swiper.snapIndex < params.slidesPerView) {\n        swiper.slideTo(swiper.virtual.slides.length + swiper.snapIndex, 0, false, true);\n      } else if (swiper.snapIndex === swiper.snapGrid.length - 1) {\n        swiper.slideTo(swiper.virtual.slidesBefore, 0, false, true);\n      }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    swiper.emit('loopFix');\n    return;\n  }\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10));\n  let loopedSlides = params.loopedSlides || slidesPerView;\n  if (loopedSlides % params.slidesPerGroup !== 0) {\n    loopedSlides += params.slidesPerGroup - loopedSlides % params.slidesPerGroup;\n  }\n  swiper.loopedSlides = loopedSlides;\n  const prependSlidesIndexes = [];\n  const appendSlidesIndexes = [];\n  let activeIndex = swiper.activeIndex;\n  if (typeof activeSlideIndex === 'undefined') {\n    activeSlideIndex = swiper.getSlideIndex(swiper.slides.filter(el => el.classList.contains(params.slideActiveClass))[0]);\n  } else {\n    activeIndex = activeSlideIndex;\n  }\n  const isNext = direction === 'next' || !direction;\n  const isPrev = direction === 'prev' || !direction;\n  let slidesPrepended = 0;\n  let slidesAppended = 0;\n  // prepend last slides before start\n  if (activeSlideIndex < loopedSlides) {\n    slidesPrepended = Math.max(loopedSlides - activeSlideIndex, params.slidesPerGroup);\n    for (let i = 0; i < loopedSlides - activeSlideIndex; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      prependSlidesIndexes.push(slides.length - index - 1);\n    }\n  } else if (activeSlideIndex /* + slidesPerView */ > swiper.slides.length - loopedSlides * 2) {\n    slidesAppended = Math.max(activeSlideIndex - (swiper.slides.length - loopedSlides * 2), params.slidesPerGroup);\n    for (let i = 0; i < slidesAppended; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      appendSlidesIndexes.push(index);\n    }\n  }\n  if (isPrev) {\n    prependSlidesIndexes.forEach(index => {\n      slidesEl.prepend(swiper.slides[index]);\n    });\n  }\n  if (isNext) {\n    appendSlidesIndexes.forEach(index => {\n      slidesEl.append(swiper.slides[index]);\n    });\n  }\n  swiper.recalcSlides();\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (slideTo) {\n    if (prependSlidesIndexes.length > 0 && isPrev) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex + slidesPrepended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex + slidesPrepended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        if (setTranslate) {\n          swiper.slideToLoop(slideRealIndex, 0, false, true);\n        }\n      }\n    } else if (appendSlidesIndexes.length > 0 && isNext) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex - slidesAppended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex - slidesAppended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        swiper.slideToLoop(slideRealIndex, 0, false, true);\n      }\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.controller && swiper.controller.control && !byController) {\n    const loopParams = {\n      slideRealIndex,\n      slideTo: false,\n      direction,\n      setTranslate,\n      activeSlideIndex,\n      byController: true\n    };\n    if (Array.isArray(swiper.controller.control)) {\n      swiper.controller.control.forEach(c => {\n        if (!c.destroyed && c.params.loop) c.loopFix(loopParams);\n      });\n    } else if (swiper.controller.control instanceof swiper.constructor && swiper.controller.control.params.loop) {\n      swiper.controller.control.loopFix(loopParams);\n    }\n  }\n  swiper.emit('loopFix');\n}","export default function loopDestroy() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  swiper.recalcSlides();\n  const newSlidesOrder = [];\n  swiper.slides.forEach(slideEl => {\n    const index = typeof slideEl.swiperSlideIndex === 'undefined' ? slideEl.getAttribute('data-swiper-slide-index') * 1 : slideEl.swiperSlideIndex;\n    newSlidesOrder[index] = slideEl;\n  });\n  swiper.slides.forEach(slideEl => {\n    slideEl.removeAttribute('data-swiper-slide-index');\n  });\n  newSlidesOrder.forEach(slideEl => {\n    slidesEl.append(slideEl);\n  });\n  swiper.recalcSlides();\n  swiper.slideTo(swiper.realIndex, 0);\n}","import setGrabCursor from './setGrabCursor.js';\nimport unsetGrabCursor from './unsetGrabCursor.js';\nexport default {\n  setGrabCursor,\n  unsetGrabCursor\n};","export default function setGrabCursor(moving) {\n  const swiper = this;\n  if (!swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n  const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","export default function unsetGrabCursor() {\n  const swiper = this;\n  if (swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n    return;\n  }\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","import { getDocument } from 'ssr-window';\nimport onTouchStart from './onTouchStart.js';\nimport onTouchMove from './onTouchMove.js';\nimport onTouchEnd from './onTouchEnd.js';\nimport onResize from './onResize.js';\nimport onClick from './onClick.js';\nimport onScroll from './onScroll.js';\nimport onLoad from './onLoad.js';\nlet dummyEventAttached = false;\nfunction dummyEventListener() {}\nconst events = (swiper, method) => {\n  const document = getDocument();\n  const {\n    params,\n    el,\n    wrapperEl,\n    device\n  } = swiper;\n  const capture = !!params.nested;\n  const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n  const swiperMethod = method;\n\n  // Touch Events\n  el[domMethod]('pointerdown', swiper.onTouchStart, {\n    passive: false\n  });\n  document[domMethod]('pointermove', swiper.onTouchMove, {\n    passive: false,\n    capture\n  });\n  document[domMethod]('pointerup', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointercancel', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerout', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerleave', swiper.onTouchEnd, {\n    passive: true\n  });\n\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el[domMethod]('click', swiper.onClick, true);\n  }\n  if (params.cssMode) {\n    wrapperEl[domMethod]('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  if (params.updateOnWindowResize) {\n    swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n  } else {\n    swiper[swiperMethod]('observerUpdate', onResize, true);\n  }\n\n  // Images loader\n  el[domMethod]('load', swiper.onLoad, {\n    capture: true\n  });\n};\nfunction attachEvents() {\n  const swiper = this;\n  const document = getDocument();\n  const {\n    params\n  } = swiper;\n  swiper.onTouchStart = onTouchStart.bind(swiper);\n  swiper.onTouchMove = onTouchMove.bind(swiper);\n  swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  if (params.cssMode) {\n    swiper.onScroll = onScroll.bind(swiper);\n  }\n  swiper.onClick = onClick.bind(swiper);\n  swiper.onLoad = onLoad.bind(swiper);\n  if (!dummyEventAttached) {\n    document.addEventListener('touchstart', dummyEventListener);\n    dummyEventAttached = true;\n  }\n  events(swiper, 'on');\n}\nfunction detachEvents() {\n  const swiper = this;\n  events(swiper, 'off');\n}\nexport default {\n  attachEvents,\n  detachEvents\n};","import { getWindow, getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\n\n// Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd\nfunction closestElement(selector, base = this) {\n  function __closestFrom(el) {\n    if (!el || el === getDocument() || el === getWindow()) return null;\n    if (el.assignedSlot) el = el.assignedSlot;\n    const found = el.closest(selector);\n    if (!found && !el.getRootNode) {\n      return null;\n    }\n    return found || __closestFrom(el.getRootNode().host);\n  }\n  return __closestFrom(base);\n}\nexport default function onTouchStart(event) {\n  const swiper = this;\n  const document = getDocument();\n  const window = getWindow();\n  const data = swiper.touchEventsData;\n  data.evCache.push(event);\n  const {\n    params,\n    touches,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  if (!swiper.animating && params.cssMode && params.loop) {\n    swiper.loopFix();\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  let targetEl = e.target;\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!swiper.wrapperEl.contains(targetEl)) return;\n  }\n  if ('which' in e && e.which === 3) return;\n  if ('button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n\n  // change target el for shadow root component\n  const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\n  // eslint-disable-next-line\n  const eventPath = event.composedPath ? event.composedPath() : event.path;\n  if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) {\n    targetEl = eventPath[0];\n  }\n  const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\n  const isTargetShadow = !!(e.target && e.target.shadowRoot);\n\n  // use closestElement for shadow root element to get the actual closest for nested shadow root element\n  if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, targetEl) : targetEl.closest(noSwipingSelector))) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!targetEl.closest(params.swipeHandler)) return;\n  }\n  touches.currentX = e.pageX;\n  touches.currentY = e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n    if (edgeSwipeDetection === 'prevent') {\n      event.preventDefault();\n    } else {\n      return;\n    }\n  }\n  Object.assign(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined\n  });\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  let preventDefault = true;\n  if (targetEl.matches(data.focusableElements)) {\n    preventDefault = false;\n    if (targetEl.nodeName === 'SELECT') {\n      data.isTouched = false;\n    }\n  }\n  if (document.activeElement && document.activeElement.matches(data.focusableElements) && document.activeElement !== targetEl) {\n    document.activeElement.blur();\n  }\n  const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n  if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !targetEl.isContentEditable) {\n    e.preventDefault();\n  }\n  if (swiper.params.freeMode && swiper.params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {\n    swiper.freeMode.onTouchStart();\n  }\n  swiper.emit('touchStart', e);\n}","import { getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\nexport default function onTouchMove(event) {\n  const document = getDocument();\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n  if (pointerIndex >= 0) data.evCache[pointerIndex] = e;\n  const targetTouch = data.evCache.length > 1 ? data.evCache[0] : e;\n  const pageX = targetTouch.pageX;\n  const pageY = targetTouch.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    if (!e.target.matches(data.focusableElements)) {\n      swiper.allowClick = false;\n    }\n    if (data.isTouched) {\n      Object.assign(touches, {\n        startX: pageX,\n        startY: pageY,\n        prevX: swiper.touches.currentX,\n        prevY: swiper.touches.currentY,\n        currentX: pageX,\n        currentY: pageY\n      });\n      data.touchStartTime = now();\n    }\n    return;\n  }\n  if (params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\n      return;\n    }\n  }\n  if (document.activeElement) {\n    if (e.target === document.activeElement && e.target.matches(data.focusableElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold) return;\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if (diffX * diffX + diffY * diffY >= 25) {\n        touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling || swiper.zoom && swiper.params.zoom && swiper.params.zoom.enabled && data.evCache.length > 1) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  if (!params.cssMode && e.cancelable) {\n    e.preventDefault();\n  }\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  let touchesDiff = swiper.isHorizontal() ? touches.currentX - touches.previousX : touches.currentY - touches.previousY;\n  if (params.oneWayMovement) {\n    diff = Math.abs(diff) * (rtl ? 1 : -1);\n    touchesDiff = Math.abs(touchesDiff) * (rtl ? 1 : -1);\n  }\n  touches.diff = diff;\n  diff *= params.touchRatio;\n  if (rtl) {\n    diff = -diff;\n    touchesDiff = -touchesDiff;\n  }\n  const prevTouchesDirection = swiper.touchesDirection;\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  swiper.touchesDirection = touchesDiff > 0 ? 'prev' : 'next';\n  const isLoop = swiper.params.loop && !params.cssMode;\n  if (!data.isMoved) {\n    if (isLoop) {\n      swiper.loopFix({\n        direction: swiper.swipeDirection\n      });\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      const evt = new window.CustomEvent('transitionend', {\n        bubbles: true,\n        cancelable: true\n      });\n      swiper.wrapperEl.dispatchEvent(evt);\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  let loopFixed;\n  if (data.isMoved && prevTouchesDirection !== swiper.touchesDirection && isLoop && Math.abs(diff) >= 1) {\n    // need another loop fix\n    swiper.loopFix({\n      direction: swiper.swipeDirection,\n      setTranslate: true\n    });\n    loopFixed = true;\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n  data.currentTranslate = diff + data.startTranslate;\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if (diff > 0) {\n    if (isLoop && !loopFixed && data.currentTranslate > (params.centeredSlides ? swiper.minTranslate() - swiper.size / 2 : swiper.minTranslate())) {\n      swiper.loopFix({\n        direction: 'prev',\n        setTranslate: true,\n        activeSlideIndex: 0\n      });\n    }\n    if (data.currentTranslate > swiper.minTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\n      }\n    }\n  } else if (diff < 0) {\n    if (isLoop && !loopFixed && data.currentTranslate < (params.centeredSlides ? swiper.maxTranslate() + swiper.size / 2 : swiper.maxTranslate())) {\n      swiper.loopFix({\n        direction: 'next',\n        setTranslate: true,\n        activeSlideIndex: swiper.slides.length - (params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10)))\n      });\n    }\n    if (data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\n      }\n    }\n  }\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n  if (!params.followFinger || params.cssMode) return;\n\n  // Update active index in free mode\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled && swiper.freeMode) {\n    swiper.freeMode.onTouchMove();\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}","import { now, nextTick } from '../../shared/utils.js';\nexport default function onTouchEnd(event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === event.pointerId);\n  if (pointerIndex >= 0) {\n    data.evCache.splice(pointerIndex, 1);\n  }\n  if (['pointercancel', 'pointerout', 'pointerleave'].includes(event.type)) {\n    const proceed = event.type === 'pointercancel' && (swiper.browser.isSafari || swiper.browser.isWebView);\n    if (!proceed) {\n      return;\n    }\n  }\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    slidesGrid,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    const pathTree = e.path || e.composedPath && e.composedPath();\n    swiper.updateClickedSlide(pathTree && pathTree[0] || e.target);\n    swiper.emit('tap click', e);\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n  data.lastClickTime = now();\n  nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n  if (params.cssMode) {\n    return;\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled) {\n    swiper.freeMode.onTouchEnd({\n      currentPos\n    });\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n    const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n  let rewindFirstIndex = null;\n  let rewindLastIndex = null;\n  if (params.rewind) {\n    if (swiper.isBeginning) {\n      rewindLastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    } else if (swiper.isEnd) {\n      rewindFirstIndex = 0;\n    }\n  }\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) {\n        swiper.slideTo(stopIndex + increment);\n      } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {\n        swiper.slideTo(rewindLastIndex);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}","let timeout;\nexport default function onResize() {\n  const swiper = this;\n  const {\n    params,\n    el\n  } = swiper;\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const {\n    allowSlideNext,\n    allowSlidePrev,\n    snapGrid\n  } = swiper;\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n  swiper.updateSize();\n  swiper.updateSlides();\n  swiper.updateSlidesClasses();\n  const isVirtualLoop = isVirtual && params.loop;\n  if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides && !isVirtualLoop) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    if (swiper.params.loop && !isVirtual) {\n      swiper.slideToLoop(swiper.realIndex, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n        swiper.autoplay.resume();\n      }\n    }, 500);\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}","export default function onClick(e) {\n  const swiper = this;\n  if (!swiper.enabled) return;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}","export default function onScroll() {\n  const swiper = this;\n  const {\n    wrapperEl,\n    rtlTranslate,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  swiper.previousTranslate = swiper.translate;\n  if (swiper.isHorizontal()) {\n    swiper.translate = -wrapperEl.scrollLeft;\n  } else {\n    swiper.translate = -wrapperEl.scrollTop;\n  }\n  // eslint-disable-next-line\n  if (swiper.translate === 0) swiper.translate = 0;\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, false);\n}","import { processLazyPreloader } from '../../shared/process-lazy-preloader.js';\nexport default function onLoad(e) {\n  const swiper = this;\n  processLazyPreloader(swiper, e.target);\n  swiper.update();\n}","import setBreakpoint from './setBreakpoint.js';\nimport getBreakpoint from './getBreakpoint.js';\nexport default {\n  setBreakpoint,\n  getBreakpoint\n};","import { extend } from '../../shared/utils.js';\nconst isGridEnabled = (swiper, params) => {\n  return swiper.grid && params.grid && params.grid.rows > 1;\n};\nexport default function setBreakpoint() {\n  const swiper = this;\n  const {\n    realIndex,\n    initialized,\n    params,\n    el\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return;\n\n  // Get breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n  if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n  const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n  const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n  const wasMultiRow = isGridEnabled(swiper, params);\n  const isMultiRow = isGridEnabled(swiper, breakpointParams);\n  const wasEnabled = params.enabled;\n  if (wasMultiRow && !isMultiRow) {\n    el.classList.remove(`${params.containerModifierClass}grid`, `${params.containerModifierClass}grid-column`);\n    swiper.emitContainerClasses();\n  } else if (!wasMultiRow && isMultiRow) {\n    el.classList.add(`${params.containerModifierClass}grid`);\n    if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n      el.classList.add(`${params.containerModifierClass}grid-column`);\n    }\n    swiper.emitContainerClasses();\n  }\n\n  // Toggle navigation, pagination, scrollbar\n  ['navigation', 'pagination', 'scrollbar'].forEach(prop => {\n    const wasModuleEnabled = params[prop] && params[prop].enabled;\n    const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n    if (wasModuleEnabled && !isModuleEnabled) {\n      swiper[prop].disable();\n    }\n    if (!wasModuleEnabled && isModuleEnabled) {\n      swiper[prop].enable();\n    }\n  });\n  const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n  const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n  if (directionChanged && initialized) {\n    swiper.changeDirection();\n  }\n  extend(swiper.params, breakpointParams);\n  const isEnabled = swiper.params.enabled;\n  Object.assign(swiper, {\n    allowTouchMove: swiper.params.allowTouchMove,\n    allowSlideNext: swiper.params.allowSlideNext,\n    allowSlidePrev: swiper.params.allowSlidePrev\n  });\n  if (wasEnabled && !isEnabled) {\n    swiper.disable();\n  } else if (!wasEnabled && isEnabled) {\n    swiper.enable();\n  }\n  swiper.currentBreakpoint = breakpoint;\n  swiper.emit('_beforeBreakpoint', breakpointParams);\n  if (needsReLoop && initialized) {\n    swiper.loopDestroy();\n    swiper.loopCreate(realIndex);\n    swiper.updateSlides();\n  }\n  swiper.emit('breakpoint', breakpointParams);\n}","import { getWindow } from 'ssr-window';\nexport default function getBreakpoint(breakpoints, base = 'window', containerEl) {\n  if (!breakpoints || base === 'container' && !containerEl) return undefined;\n  let breakpoint = false;\n  const window = getWindow();\n  const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n  const points = Object.keys(breakpoints).map(point => {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      const minRatio = parseFloat(point.substr(1));\n      const value = currentHeight * minRatio;\n      return {\n        value,\n        point\n      };\n    }\n    return {\n      value: point,\n      point\n    };\n  });\n  points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const {\n      point,\n      value\n    } = points[i];\n    if (base === 'window') {\n      if (window.matchMedia(`(min-width: ${value}px)`).matches) {\n        breakpoint = point;\n      }\n    } else if (value <= containerEl.clientWidth) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}","import addClasses from './addClasses.js';\nimport removeClasses from './removeClasses.js';\nexport default {\n  addClasses,\n  removeClasses\n};","function prepareClasses(entries, prefix) {\n  const resultClasses = [];\n  entries.forEach(item => {\n    if (typeof item === 'object') {\n      Object.keys(item).forEach(classNames => {\n        if (item[classNames]) {\n          resultClasses.push(prefix + classNames);\n        }\n      });\n    } else if (typeof item === 'string') {\n      resultClasses.push(prefix + item);\n    }\n  });\n  return resultClasses;\n}\nexport default function addClasses() {\n  const swiper = this;\n  const {\n    classNames,\n    params,\n    rtl,\n    el,\n    device\n  } = swiper;\n  // prettier-ignore\n  const suffixes = prepareClasses(['initialized', params.direction, {\n    'free-mode': swiper.params.freeMode && params.freeMode.enabled\n  }, {\n    'autoheight': params.autoHeight\n  }, {\n    'rtl': rtl\n  }, {\n    'grid': params.grid && params.grid.rows > 1\n  }, {\n    'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\n  }, {\n    'android': device.android\n  }, {\n    'ios': device.ios\n  }, {\n    'css-mode': params.cssMode\n  }, {\n    'centered': params.cssMode && params.centeredSlides\n  }, {\n    'watch-progress': params.watchSlidesProgress\n  }], params.containerModifierClass);\n  classNames.push(...suffixes);\n  el.classList.add(...classNames);\n  swiper.emitContainerClasses();\n}","export default function removeClasses() {\n  const swiper = this;\n  const {\n    el,\n    classNames\n  } = swiper;\n  el.classList.remove(...classNames);\n  swiper.emitContainerClasses();\n}","function checkOverflow() {\n  const swiper = this;\n  const {\n    isLocked: wasLocked,\n    params\n  } = swiper;\n  const {\n    slidesOffsetBefore\n  } = params;\n  if (slidesOffsetBefore) {\n    const lastSlideIndex = swiper.slides.length - 1;\n    const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\n    swiper.isLocked = swiper.size > lastSlideRightEdge;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n  if (params.allowSlideNext === true) {\n    swiper.allowSlideNext = !swiper.isLocked;\n  }\n  if (params.allowSlidePrev === true) {\n    swiper.allowSlidePrev = !swiper.isLocked;\n  }\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n  }\n  if (wasLocked !== swiper.isLocked) {\n    swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n  }\n}\nexport default {\n  checkOverflow\n};","export default {\n  init: true,\n  direction: 'horizontal',\n  oneWayMovement: false,\n  touchEventsTarget: 'wrapper',\n  initialSlide: 0,\n  speed: 300,\n  cssMode: false,\n  updateOnWindowResize: true,\n  resizeObserver: true,\n  nested: false,\n  createElements: false,\n  enabled: true,\n  focusableElements: 'input, select, option, textarea, button, video, label',\n  // Overrides\n  width: null,\n  height: null,\n  //\n  preventInteractionOnTransition: false,\n  // ssr\n  userAgent: null,\n  url: null,\n  // To support iOS's swipe-to-go-back gesture (when being used in-app).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n  // Autoheight\n  autoHeight: false,\n  // Set wrapper width\n  setWrapperSize: false,\n  // Virtual Translate\n  virtualTranslate: false,\n  // Effects\n  effect: 'slide',\n  // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsBase: 'window',\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerGroup: 1,\n  slidesPerGroupSkip: 0,\n  slidesPerGroupAuto: false,\n  centeredSlides: false,\n  centeredSlidesBounds: false,\n  slidesOffsetBefore: 0,\n  // in px\n  slidesOffsetAfter: 0,\n  // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: true,\n  // Round length\n  roundLengths: false,\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 5,\n  touchMoveStopPropagation: false,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n  // Progress\n  watchSlidesProgress: false,\n  // Cursor\n  grabCursor: false,\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n  // loop\n  loop: false,\n  loopedSlides: null,\n  loopPreventsSliding: true,\n  // rewind\n  rewind: false,\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null,\n  // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n  // Passive Listeners\n  passiveListeners: true,\n  maxBackfaceHiddenSlides: 10,\n  // NS\n  containerModifierClass: 'swiper-',\n  // NEW\n  slideClass: 'swiper-slide',\n  slideActiveClass: 'swiper-slide-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideNextClass: 'swiper-slide-next',\n  slidePrevClass: 'swiper-slide-prev',\n  wrapperClass: 'swiper-wrapper',\n  lazyPreloaderClass: 'swiper-lazy-preloader',\n  lazyPreloadPrevNext: 0,\n  // Callbacks\n  runCallbacksOnInit: true,\n  // Internals\n  _emitClasses: false\n};","import { extend } from '../shared/utils.js';\nexport default function moduleExtendParams(params, allModulesParams) {\n  return function extendParams(obj = {}) {\n    const moduleParamName = Object.keys(obj)[0];\n    const moduleParams = obj[moduleParamName];\n    if (typeof moduleParams !== 'object' || moduleParams === null) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (['navigation', 'pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        auto: true\n      };\n    }\n    if (!(moduleParamName in params && 'enabled' in moduleParams)) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        enabled: true\n      };\n    }\n    if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\n      params[moduleParamName].enabled = true;\n    }\n    if (!params[moduleParamName]) params[moduleParamName] = {\n      enabled: false\n    };\n    extend(allModulesParams, obj);\n  };\n}","import { getDocument } from 'ssr-window';\nimport { createElement, elementChildren, setCSSProperty } from '../../shared/utils.js';\nexport default function Virtual({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      renderExternalUpdate: true,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0\n    }\n  });\n  let cssModeTimeout;\n  const document = getDocument();\n  swiper.virtual = {\n    cache: {},\n    from: undefined,\n    to: undefined,\n    slides: [],\n    offset: 0,\n    slidesGrid: []\n  };\n  const tempDOM = document.createElement('div');\n  function renderSlide(slide, index) {\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    // eslint-disable-next-line\n    let slideEl;\n    if (params.renderSlide) {\n      slideEl = params.renderSlide.call(swiper, slide, index);\n      if (typeof slideEl === 'string') {\n        tempDOM.innerHTML = slideEl;\n        slideEl = tempDOM.children[0];\n      }\n    } else if (swiper.isElement) {\n      slideEl = createElement('swiper-slide');\n    } else {\n      slideEl = createElement('div', swiper.params.slideClass);\n    }\n    slideEl.setAttribute('data-swiper-slide-index', index);\n    if (!params.renderSlide) {\n      slideEl.innerHTML = slide;\n    }\n    if (params.cache) swiper.virtual.cache[index] = slideEl;\n    return slideEl;\n  }\n  function update(force) {\n    const {\n      slidesPerView,\n      slidesPerGroup,\n      centeredSlides,\n      loop: isLoop\n    } = swiper.params;\n    const {\n      addSlidesBefore,\n      addSlidesAfter\n    } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      offset: previousOffset\n    } = swiper.virtual;\n    if (!swiper.params.cssMode) {\n      swiper.updateActiveIndex();\n    }\n    const activeIndex = swiper.activeIndex || 0;\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\n      slidesBefore = (isLoop ? slidesPerView : slidesPerGroup) + addSlidesBefore;\n    }\n    let from = activeIndex - slidesBefore;\n    let to = activeIndex + slidesAfter;\n    if (!isLoop) {\n      from = Math.max(from, 0);\n      to = Math.min(to, slides.length - 1);\n    }\n    let offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n    if (isLoop && activeIndex >= slidesBefore) {\n      from -= slidesBefore;\n      if (!centeredSlides) offset += swiper.slidesGrid[0];\n    } else if (isLoop && activeIndex < slidesBefore) {\n      from = -slidesBefore;\n      if (centeredSlides) offset += swiper.slidesGrid[0];\n    }\n    Object.assign(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n      slidesBefore,\n      slidesAfter\n    });\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      emit('virtualUpdate');\n    }\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.forEach(slideEl => {\n          slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n        });\n      }\n      swiper.updateProgress();\n      emit('virtualUpdate');\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()\n      });\n      if (swiper.params.virtual.renderExternalUpdate) {\n        onRendered();\n      } else {\n        emit('virtualUpdate');\n      }\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    const getSlideIndex = index => {\n      let slideIndex = index;\n      if (index < 0) {\n        slideIndex = slides.length + index;\n      } else if (slideIndex >= slides.length) {\n        // eslint-disable-next-line\n        slideIndex = slideIndex - slides.length;\n      }\n      return slideIndex;\n    };\n    if (force) {\n      swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}, swiper-slide`).forEach(slideEl => {\n        slideEl.remove();\n      });\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          const slideIndex = getSlideIndex(i);\n          swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${slideIndex}\"], swiper-slide[data-swiper-slide-index=\"${slideIndex}\"]`).forEach(slideEl => {\n            slideEl.remove();\n          });\n        }\n      }\n    }\n    const loopFrom = isLoop ? -slides.length : 0;\n    const loopTo = isLoop ? slides.length * 2 : slides.length;\n    for (let i = loopFrom; i < loopTo; i += 1) {\n      if (i >= from && i <= to) {\n        const slideIndex = getSlideIndex(i);\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(slideIndex);\n        } else {\n          if (i > previousTo) appendIndexes.push(slideIndex);\n          if (i < previousFrom) prependIndexes.push(slideIndex);\n        }\n      }\n    }\n    appendIndexes.forEach(index => {\n      swiper.slidesEl.append(renderSlide(slides[index], index));\n    });\n    if (isLoop) {\n      for (let i = prependIndexes.length - 1; i >= 0; i -= 1) {\n        const index = prependIndexes[i];\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      }\n    } else {\n      prependIndexes.sort((a, b) => b - a);\n      prependIndexes.forEach(index => {\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      });\n    }\n    elementChildren(swiper.slidesEl, '.swiper-slide, swiper-slide').forEach(slideEl => {\n      slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n    });\n    onRendered();\n  }\n  function appendSlide(slides) {\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    update(true);\n  }\n  function prependSlide(slides) {\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach(cachedIndex => {\n        const cachedEl = cache[cachedIndex];\n        const cachedElIndex = cachedEl.getAttribute('data-swiper-slide-index');\n        if (cachedElIndex) {\n          cachedEl.setAttribute('data-swiper-slide-index', parseInt(cachedElIndex, 10) + numberOfNewSlides);\n        }\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cachedEl;\n      });\n      swiper.virtual.cache = newCache;\n    }\n    update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  }\n  function removeSlide(slidesIndexes) {\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    update(true);\n    swiper.slideTo(activeIndex, 0);\n  }\n  function removeAllSlides() {\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    update(true);\n    swiper.slideTo(0, 0);\n  }\n  on('beforeInit', () => {\n    if (!swiper.params.virtual.enabled) return;\n    let domSlidesAssigned;\n    if (typeof swiper.passedParams.virtual.slides === 'undefined') {\n      const slides = [...swiper.slidesEl.children].filter(el => el.matches(`.${swiper.params.slideClass}, swiper-slide`));\n      if (slides && slides.length) {\n        swiper.virtual.slides = [...slides];\n        domSlidesAssigned = true;\n        slides.forEach((slideEl, slideIndex) => {\n          slideEl.setAttribute('data-swiper-slide-index', slideIndex);\n          swiper.virtual.cache[slideIndex] = slideEl;\n          slideEl.remove();\n        });\n      }\n    }\n    if (!domSlidesAssigned) {\n      swiper.virtual.slides = swiper.params.virtual.slides;\n    }\n    swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n    if (!swiper.params.initialSlide) {\n      update();\n    }\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode && !swiper._immediateVirtual) {\n      clearTimeout(cssModeTimeout);\n      cssModeTimeout = setTimeout(() => {\n        update();\n      }, 100);\n    } else {\n      update();\n    }\n  });\n  on('init update resize', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode) {\n      setCSSProperty(swiper.wrapperEl, '--swiper-virtual-size', `${swiper.virtualSize}px`);\n    }\n  });\n  Object.assign(swiper.virtual, {\n    appendSlide,\n    prependSlide,\n    removeSlide,\n    removeAllSlides,\n    update\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow, getDocument } from 'ssr-window';\nimport { elementOffset, elementParents } from '../../shared/utils.js';\nexport default function Keyboard({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  const window = getWindow();\n  swiper.keyboard = {\n    enabled: false\n  };\n  extendParams({\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n      pageUpDown: true\n    }\n  });\n  function handle(event) {\n    if (!swiper.enabled) return;\n    const {\n      rtlTranslate: rtl\n    } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    const pageUpDown = swiper.params.keyboard.pageUpDown;\n    const isPageUp = pageUpDown && kc === 33;\n    const isPageDown = pageUpDown && kc === 34;\n    const isArrowLeft = kc === 37;\n    const isArrowRight = kc === 39;\n    const isArrowUp = kc === 38;\n    const isArrowDown = kc === 40;\n    // Directions locks\n    if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (elementParents(swiper.el, `.${swiper.params.slideClass}, swiper-slide`).length > 0 && elementParents(swiper.el, `.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const el = swiper.el;\n      const swiperWidth = el.clientWidth;\n      const swiperHeight = el.clientHeight;\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = elementOffset(el);\n      if (rtl) swiperOffset.left -= el.scrollLeft;\n      const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiperWidth, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiperHeight], [swiperOffset.left + swiperWidth, swiperOffset.top + swiperHeight]];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\n          if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();\n      if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();\n    } else {\n      if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if (isPageDown || isArrowDown) swiper.slideNext();\n      if (isPageUp || isArrowUp) swiper.slidePrev();\n    }\n    emit('keyPress', kc);\n    return undefined;\n  }\n  function enable() {\n    if (swiper.keyboard.enabled) return;\n    document.addEventListener('keydown', handle);\n    swiper.keyboard.enabled = true;\n  }\n  function disable() {\n    if (!swiper.keyboard.enabled) return;\n    document.removeEventListener('keydown', handle);\n    swiper.keyboard.enabled = false;\n  }\n  on('init', () => {\n    if (swiper.params.keyboard.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.keyboard.enabled) {\n      disable();\n    }\n  });\n  Object.assign(swiper.keyboard, {\n    enable,\n    disable\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow } from 'ssr-window';\nimport { now, nextTick } from '../../shared/utils.js';\nexport default function Mousewheel({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarget: 'container',\n      thresholdDelta: null,\n      thresholdTime: null\n    }\n  });\n  swiper.mousewheel = {\n    enabled: false\n  };\n  let timeout;\n  let lastScrollTime = now();\n  let lastEventBeforeSnap;\n  const recentWheelEvents = [];\n  function normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n    if (e.shiftKey && !pX) {\n      // if user scrolls with shift he wants horizontal scroll\n      pX = pY;\n      pY = 0;\n    }\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) {\n        // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else {\n        // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = pX < 1 ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = pY < 1 ? -1 : 1;\n    }\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY\n    };\n  }\n  function handleMouseEnter() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = true;\n  }\n  function handleMouseLeave() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = false;\n  }\n  function animateSlider(newEvent) {\n    if (swiper.params.mousewheel.thresholdDelta && newEvent.delta < swiper.params.mousewheel.thresholdDelta) {\n      // Prevent if delta of wheel scroll delta is below configured threshold\n      return false;\n    }\n    if (swiper.params.mousewheel.thresholdTime && now() - lastScrollTime < swiper.params.mousewheel.thresholdTime) {\n      // Prevent if time between scrolls is below configured threshold\n      return false;\n    }\n\n    // If the movement is NOT big enough and\n    // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n    //   Don't go any further (avoid insignificant scroll movement).\n    if (newEvent.delta >= 6 && now() - lastScrollTime < 60) {\n      // Return false as a default\n      return true;\n    }\n    // If user is scrolling towards the end:\n    //   If the slider hasn't hit the latest slide or\n    //   if the slider is a loop and\n    //   if the slider isn't moving right now:\n    //     Go to next slide and\n    //     emit a scroll event.\n    // Else (the user is scrolling towards the beginning) and\n    // if the slider hasn't hit the first slide or\n    // if the slider is a loop and\n    // if the slider isn't moving right now:\n    //   Go to prev slide and\n    //   emit a scroll event.\n    if (newEvent.direction < 0) {\n      if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n        swiper.slideNext();\n        emit('scroll', newEvent.raw);\n      }\n    } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n      swiper.slidePrev();\n      emit('scroll', newEvent.raw);\n    }\n    // If you got here is because an animation has been triggered so store the current time\n    lastScrollTime = new window.Date().getTime();\n    // Return false as a default\n    return false;\n  }\n  function releaseScroll(newEvent) {\n    const params = swiper.params.mousewheel;\n    if (newEvent.direction < 0) {\n      if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n        // Return true to animate scroll on edges\n        return true;\n      }\n    } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n      // Return true to animate scroll on edges\n      return true;\n    }\n    return false;\n  }\n  function handle(event) {\n    let e = event;\n    let disableParentSwiper = true;\n    if (!swiper.enabled) return;\n    const params = swiper.params.mousewheel;\n    if (swiper.params.cssMode) {\n      e.preventDefault();\n    }\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    const targetElContainsTarget = targetEl && targetEl.contains(e.target);\n    if (!swiper.mouseEntered && !targetElContainsTarget && !params.releaseOnEdges) return true;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n    const data = normalize(e);\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor;else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY;else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n    if (delta === 0) return true;\n    if (params.invert) delta = -delta;\n\n    // Get the scroll positions\n    let positions = swiper.getTranslate() + delta * params.sensitivity;\n    if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();\n    if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate();\n\n    // When loop is true:\n    //     the disableParentSwiper will be true.\n    // When loop is false:\n    //     if the scroll positions is not on edge,\n    //     then the disableParentSwiper will be true.\n    //     if the scroll on edge positions,\n    //     then the disableParentSwiper will be false.\n    disableParentSwiper = swiper.params.loop ? true : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());\n    if (disableParentSwiper && swiper.params.nested) e.stopPropagation();\n    if (!swiper.params.freeMode || !swiper.params.freeMode.enabled) {\n      // Register the new event in a variable which stores the relevant data\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta),\n        raw: event\n      };\n\n      // Keep the most recent events\n      if (recentWheelEvents.length >= 2) {\n        recentWheelEvents.shift(); // only store the last N events\n      }\n\n      const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n      recentWheelEvents.push(newEvent);\n\n      // If there is at least one previous recorded event:\n      //   If direction has changed or\n      //   if the scroll is quicker than the previous one:\n      //     Animate the slider.\n      // Else (this is the first time the wheel is moved):\n      //     Animate the slider.\n      if (prevEvent) {\n        if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta || newEvent.time > prevEvent.time + 150) {\n          animateSlider(newEvent);\n        }\n      } else {\n        animateSlider(newEvent);\n      }\n\n      // If it's time to release the scroll:\n      //   Return now so you don't hit the preventDefault.\n      if (releaseScroll(newEvent)) {\n        return true;\n      }\n    } else {\n      // Freemode or scrollContainer:\n\n      // If we recently snapped after a momentum scroll, then ignore wheel events\n      // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n      // or if it's a new scroll (larger delta or inverse sign as last event before\n      // an end-of-momentum snap).\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta)\n      };\n      const ignoreWheelEvents = lastEventBeforeSnap && newEvent.time < lastEventBeforeSnap.time + 500 && newEvent.delta <= lastEventBeforeSnap.delta && newEvent.direction === lastEventBeforeSnap.direction;\n      if (!ignoreWheelEvents) {\n        lastEventBeforeSnap = undefined;\n        let position = swiper.getTranslate() + delta * params.sensitivity;\n        const wasBeginning = swiper.isBeginning;\n        const wasEnd = swiper.isEnd;\n        if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n        if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n        if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {\n          swiper.updateSlidesClasses();\n        }\n        if (swiper.params.loop) {\n          swiper.loopFix({\n            direction: newEvent.direction < 0 ? 'next' : 'prev',\n            byMousewheel: true\n          });\n        }\n        if (swiper.params.freeMode.sticky) {\n          // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n          // the end of a momentum scroll by storing recent (N=15?) wheel events.\n          // 1. do all N events have decreasing or same (absolute value) delta?\n          // 2. did all N events arrive in the last M (M=500?) msecs?\n          // 3. does the earliest event have an (absolute value) delta that's\n          //    at least P (P=1?) larger than the most recent event's delta?\n          // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n          // If 1-4 are \"yes\" then we're near the end of a momentum scroll deceleration.\n          // Snap immediately and ignore remaining wheel events in this scroll.\n          // See comment above for \"remaining wheel events in this scroll\" determination.\n          // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n          clearTimeout(timeout);\n          timeout = undefined;\n          if (recentWheelEvents.length >= 15) {\n            recentWheelEvents.shift(); // only store the last N events\n          }\n\n          const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n          const firstEvent = recentWheelEvents[0];\n          recentWheelEvents.push(newEvent);\n          if (prevEvent && (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)) {\n            // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n            recentWheelEvents.splice(0);\n          } else if (recentWheelEvents.length >= 15 && newEvent.time - firstEvent.time < 500 && firstEvent.delta - newEvent.delta >= 1 && newEvent.delta <= 6) {\n            // We're at the end of the deceleration of a momentum scroll, so there's no need\n            // to wait for more events. Snap ASAP on the next tick.\n            // Also, because there's some remaining momentum we'll bias the snap in the\n            // direction of the ongoing scroll because it's better UX for the scroll to snap\n            // in the same direction as the scroll instead of reversing to snap.  Therefore,\n            // if it's already scrolled more than 20% in the current direction, keep going.\n            const snapToThreshold = delta > 0 ? 0.8 : 0.2;\n            lastEventBeforeSnap = newEvent;\n            recentWheelEvents.splice(0);\n            timeout = nextTick(() => {\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 0); // no delay; move on next tick\n          }\n\n          if (!timeout) {\n            // if we get here, then we haven't detected the end of a momentum scroll, so\n            // we'll consider a scroll \"complete\" when there haven't been any wheel events\n            // for 500ms.\n            timeout = nextTick(() => {\n              const snapToThreshold = 0.5;\n              lastEventBeforeSnap = newEvent;\n              recentWheelEvents.splice(0);\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 500);\n          }\n        }\n\n        // Emit event\n        if (!ignoreWheelEvents) emit('scroll', e);\n\n        // Stop autoplay\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n        // Return page scroll on edge positions\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n      }\n    }\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    return false;\n  }\n  function events(method) {\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    targetEl[method]('mouseenter', handleMouseEnter);\n    targetEl[method]('mouseleave', handleMouseLeave);\n    targetEl[method]('wheel', handle);\n  }\n  function enable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.removeEventListener('wheel', handle);\n      return true;\n    }\n    if (swiper.mousewheel.enabled) return false;\n    events('addEventListener');\n    swiper.mousewheel.enabled = true;\n    return true;\n  }\n  function disable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.addEventListener(event, handle);\n      return true;\n    }\n    if (!swiper.mousewheel.enabled) return false;\n    events('removeEventListener');\n    swiper.mousewheel.enabled = false;\n    return true;\n  }\n  on('init', () => {\n    if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n      disable();\n    }\n    if (swiper.params.mousewheel.enabled) enable();\n  });\n  on('destroy', () => {\n    if (swiper.params.cssMode) {\n      enable();\n    }\n    if (swiper.mousewheel.enabled) disable();\n  });\n  Object.assign(swiper.mousewheel, {\n    enable,\n    disable\n  });\n}","import createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Navigation({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n      navigationDisabledClass: 'swiper-navigation-disabled'\n    }\n  });\n  swiper.navigation = {\n    nextEl: null,\n    prevEl: null\n  };\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function getEl(el) {\n    let res;\n    if (el && typeof el === 'string' && swiper.isElement) {\n      res = swiper.el.shadowRoot.querySelector(el);\n      if (res) return res;\n    }\n    if (el) {\n      if (typeof el === 'string') res = [...document.querySelectorAll(el)];\n      if (swiper.params.uniqueNavElements && typeof el === 'string' && res.length > 1 && swiper.el.querySelectorAll(el).length === 1) {\n        res = swiper.el.querySelector(el);\n      }\n    }\n    if (el && !res) return el;\n    // if (Array.isArray(res) && res.length === 1) res = res[0];\n    return res;\n  }\n  function toggleEl(el, disabled) {\n    const params = swiper.params.navigation;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (subEl) {\n        subEl.classList[disabled ? 'add' : 'remove'](...params.disabledClass.split(' '));\n        if (subEl.tagName === 'BUTTON') subEl.disabled = disabled;\n        if (swiper.params.watchOverflow && swiper.enabled) {\n          subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n        }\n      }\n    });\n  }\n  function update() {\n    // Update Navigation Buttons\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (swiper.params.loop) {\n      toggleEl(prevEl, false);\n      toggleEl(nextEl, false);\n      return;\n    }\n    toggleEl(prevEl, swiper.isBeginning && !swiper.params.rewind);\n    toggleEl(nextEl, swiper.isEnd && !swiper.params.rewind);\n  }\n  function onPrevClick(e) {\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slidePrev();\n    emit('navigationPrev');\n  }\n  function onNextClick(e) {\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slideNext();\n    emit('navigationNext');\n  }\n  function init() {\n    const params = swiper.params.navigation;\n    swiper.params.navigation = createElementIfNotDefined(swiper, swiper.originalParams.navigation, swiper.params.navigation, {\n      nextEl: 'swiper-button-next',\n      prevEl: 'swiper-button-prev'\n    });\n    if (!(params.nextEl || params.prevEl)) return;\n    let nextEl = getEl(params.nextEl);\n    let prevEl = getEl(params.prevEl);\n    Object.assign(swiper.navigation, {\n      nextEl,\n      prevEl\n    });\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const initButton = (el, dir) => {\n      if (el) {\n        el.addEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      }\n      if (!swiper.enabled && el) {\n        el.classList.add(...params.lockClass.split(' '));\n      }\n    };\n    nextEl.forEach(el => initButton(el, 'next'));\n    prevEl.forEach(el => initButton(el, 'prev'));\n  }\n  function destroy() {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const destroyButton = (el, dir) => {\n      el.removeEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      el.classList.remove(...swiper.params.navigation.disabledClass.split(' '));\n    };\n    nextEl.forEach(el => destroyButton(el, 'next'));\n    prevEl.forEach(el => destroyButton(el, 'prev'));\n  }\n  on('init', () => {\n    if (swiper.params.navigation.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      update();\n    }\n  });\n  on('toEdge fromEdge lock unlock', () => {\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.navigation.lockClass));\n  });\n  on('click', (_s, e) => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const targetEl = e.target;\n    if (swiper.params.navigation.hideOnClick && !prevEl.includes(targetEl) && !nextEl.includes(targetEl)) {\n      if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\n      let isHidden;\n      if (nextEl.length) {\n        isHidden = nextEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      } else if (prevEl.length) {\n        isHidden = prevEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      }\n      if (isHidden === true) {\n        emit('navigationShow');\n      } else {\n        emit('navigationHide');\n      }\n      [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList.toggle(swiper.params.navigation.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    init();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    destroy();\n  };\n  Object.assign(swiper.navigation, {\n    enable,\n    disable,\n    update,\n    init,\n    destroy\n  });\n}","import { createElement, elementChildren } from './utils.js';\nexport default function createElementIfNotDefined(swiper, originalParams, params, checkProps) {\n  if (swiper.params.createElements) {\n    Object.keys(checkProps).forEach(key => {\n      if (!params[key] && params.auto === true) {\n        let element = elementChildren(swiper.el, `.${checkProps[key]}`)[0];\n        if (!element) {\n          element = createElement('div', checkProps[key]);\n          element.className = checkProps[key];\n          swiper.el.append(element);\n        }\n        params[key] = element;\n        originalParams[key] = element;\n      }\n    });\n  }\n  return params;\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nimport { elementIndex, elementOuterSize, elementParents } from '../../shared/utils.js';\nexport default function Pagination({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const pfx = 'swiper-pagination';\n  extendParams({\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets',\n      // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: `${pfx}-bullet`,\n      bulletActiveClass: `${pfx}-bullet-active`,\n      modifierClass: `${pfx}-`,\n      currentClass: `${pfx}-current`,\n      totalClass: `${pfx}-total`,\n      hiddenClass: `${pfx}-hidden`,\n      progressbarFillClass: `${pfx}-progressbar-fill`,\n      progressbarOppositeClass: `${pfx}-progressbar-opposite`,\n      clickableClass: `${pfx}-clickable`,\n      lockClass: `${pfx}-lock`,\n      horizontalClass: `${pfx}-horizontal`,\n      verticalClass: `${pfx}-vertical`,\n      paginationDisabledClass: `${pfx}-disabled`\n    }\n  });\n  swiper.pagination = {\n    el: null,\n    bullets: []\n  };\n  let bulletSize;\n  let dynamicBulletIndex = 0;\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function isPaginationDisabled() {\n    return !swiper.params.pagination.el || !swiper.pagination.el || Array.isArray(swiper.pagination.el) && swiper.pagination.el.length === 0;\n  }\n  function setSideBullets(bulletEl, position) {\n    const {\n      bulletActiveClass\n    } = swiper.params.pagination;\n    if (!bulletEl) return;\n    bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n    if (bulletEl) {\n      bulletEl.classList.add(`${bulletActiveClass}-${position}`);\n      bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n      if (bulletEl) {\n        bulletEl.classList.add(`${bulletActiveClass}-${position}-${position}`);\n      }\n    }\n  }\n  function onBulletClick(e) {\n    const bulletEl = e.target.closest(classesToSelector(swiper.params.pagination.bulletClass));\n    if (!bulletEl) {\n      return;\n    }\n    e.preventDefault();\n    const index = elementIndex(bulletEl) * swiper.params.slidesPerGroup;\n    if (swiper.params.loop) {\n      if (swiper.realIndex === index) return;\n      if (index < swiper.loopedSlides || index > swiper.slides.length - swiper.loopedSlides) {\n        swiper.loopFix({\n          direction: index < swiper.loopedSlides ? 'prev' : 'next',\n          activeSlideIndex: index,\n          slideTo: false\n        });\n      }\n      swiper.slideToLoop(index);\n    } else {\n      swiper.slideTo(index);\n    }\n  }\n  function update() {\n    // Render || Update Pagination bullets/items\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    // Current/Total\n    let current;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const total = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = swiper.params.slidesPerGroup > 1 ? Math.floor(swiper.realIndex / swiper.params.slidesPerGroup) : swiper.realIndex;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        bulletSize = elementOuterSize(bullets[0], swiper.isHorizontal() ? 'width' : 'height', true);\n        el.forEach(subEl => {\n          subEl.style[swiper.isHorizontal() ? 'width' : 'height'] = `${bulletSize * (params.dynamicMainBullets + 4)}px`;\n        });\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          dynamicBulletIndex += current - (swiper.previousIndex || 0);\n          if (dynamicBulletIndex > params.dynamicMainBullets - 1) {\n            dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (dynamicBulletIndex < 0) {\n            dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = Math.max(current - dynamicBulletIndex, 0);\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.forEach(bulletEl => {\n        const classesToRemove = [...['', '-next', '-next-next', '-prev', '-prev-prev', '-main'].map(suffix => `${params.bulletActiveClass}${suffix}`)].map(s => typeof s === 'string' && s.includes(' ') ? s.split(' ') : s).flat();\n        bulletEl.classList.remove(...classesToRemove);\n      });\n      if (el.length > 1) {\n        bullets.forEach(bullet => {\n          const bulletIndex = elementIndex(bullet);\n          if (bulletIndex === current) {\n            bullet.classList.add(...params.bulletActiveClass.split(' '));\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              bullet.classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n            if (bulletIndex === firstIndex) {\n              setSideBullets(bullet, 'prev');\n            }\n            if (bulletIndex === lastIndex) {\n              setSideBullets(bullet, 'next');\n            }\n          }\n        });\n      } else {\n        const bullet = bullets[current];\n        if (bullet) {\n          bullet.classList.add(...params.bulletActiveClass.split(' '));\n        }\n        if (params.dynamicBullets) {\n          const firstDisplayedBullet = bullets[firstIndex];\n          const lastDisplayedBullet = bullets[lastIndex];\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            if (bullets[i]) {\n              bullets[i].classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n          }\n          setSideBullets(firstDisplayedBullet, 'prev');\n          setSideBullets(lastDisplayedBullet, 'next');\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.forEach(bullet => {\n          bullet.style[swiper.isHorizontal() ? offsetProp : 'top'] = `${bulletsOffset}px`;\n        });\n      }\n    }\n    el.forEach((subEl, subElIndex) => {\n      if (params.type === 'fraction') {\n        subEl.querySelectorAll(classesToSelector(params.currentClass)).forEach(fractionEl => {\n          fractionEl.textContent = params.formatFractionCurrent(current + 1);\n        });\n        subEl.querySelectorAll(classesToSelector(params.totalClass)).forEach(totalEl => {\n          totalEl.textContent = params.formatFractionTotal(total);\n        });\n      }\n      if (params.type === 'progressbar') {\n        let progressbarDirection;\n        if (params.progressbarOpposite) {\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n        } else {\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n        }\n        const scale = (current + 1) / total;\n        let scaleX = 1;\n        let scaleY = 1;\n        if (progressbarDirection === 'horizontal') {\n          scaleX = scale;\n        } else {\n          scaleY = scale;\n        }\n        subEl.querySelectorAll(classesToSelector(params.progressbarFillClass)).forEach(progressEl => {\n          progressEl.style.transform = `translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`;\n          progressEl.style.transitionDuration = `${swiper.params.speed}ms`;\n        });\n      }\n      if (params.type === 'custom' && params.renderCustom) {\n        subEl.innerHTML = params.renderCustom(swiper, current + 1, total);\n        if (subElIndex === 0) emit('paginationRender', subEl);\n      } else {\n        if (subElIndex === 0) emit('paginationRender', subEl);\n        emit('paginationUpdate', subEl);\n      }\n      if (swiper.params.watchOverflow && swiper.enabled) {\n        subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n      }\n    });\n  }\n  function render() {\n    // Render Container\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      let numberOfBullets = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      if (swiper.params.freeMode && swiper.params.freeMode.enabled && numberOfBullets > slidesLength) {\n        numberOfBullets = slidesLength;\n      }\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>` + ' / ' + `<span class=\"${params.totalClass}\"></span>`;\n      }\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n    }\n    swiper.pagination.bullets = [];\n    el.forEach(subEl => {\n      if (params.type !== 'custom') {\n        subEl.innerHTML = paginationHTML || '';\n      }\n      if (params.type === 'bullets') {\n        swiper.pagination.bullets.push(...subEl.querySelectorAll(classesToSelector(params.bulletClass)));\n      }\n    });\n    if (params.type !== 'custom') {\n      emit('paginationRender', el[0]);\n    }\n  }\n  function init() {\n    swiper.params.pagination = createElementIfNotDefined(swiper, swiper.originalParams.pagination, swiper.params.pagination, {\n      el: 'swiper-pagination'\n    });\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.shadowRoot.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = [...document.querySelectorAll(params.el)];\n    }\n    if (!el) {\n      el = params.el;\n    }\n    if (!el || el.length === 0) return;\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && Array.isArray(el) && el.length > 1) {\n      el = [...swiper.el.querySelectorAll(params.el)];\n      // check if it belongs to another nested Swiper\n      if (el.length > 1) {\n        el = el.filter(subEl => {\n          if (elementParents(subEl, '.swiper')[0] !== swiper.el) return false;\n          return true;\n        })[0];\n      }\n    }\n    if (Array.isArray(el) && el.length === 1) el = el[0];\n    Object.assign(swiper.pagination, {\n      el\n    });\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (params.type === 'bullets' && params.clickable) {\n        subEl.classList.add(params.clickableClass);\n      }\n      subEl.classList.add(params.modifierClass + params.type);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n      if (params.type === 'bullets' && params.dynamicBullets) {\n        subEl.classList.add(`${params.modifierClass}${params.type}-dynamic`);\n        dynamicBulletIndex = 0;\n        if (params.dynamicMainBullets < 1) {\n          params.dynamicMainBullets = 1;\n        }\n      }\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\n        subEl.classList.add(params.progressbarOppositeClass);\n      }\n      if (params.clickable) {\n        subEl.addEventListener('click', onBulletClick);\n      }\n      if (!swiper.enabled) {\n        subEl.classList.add(params.lockClass);\n      }\n    });\n  }\n  function destroy() {\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => {\n        subEl.classList.remove(params.hiddenClass);\n        subEl.classList.remove(params.modifierClass + params.type);\n        subEl.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n        if (params.clickable) {\n          subEl.removeEventListener('click', onBulletClick);\n        }\n      });\n    }\n    if (swiper.pagination.bullets) swiper.pagination.bullets.forEach(subEl => subEl.classList.remove(...params.bulletActiveClass.split(' ')));\n  }\n  on('changeDirection', () => {\n    if (!swiper.pagination || !swiper.pagination.el) return;\n    const params = swiper.params.pagination;\n    let {\n      el\n    } = swiper.pagination;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.classList.remove(params.horizontalClass, params.verticalClass);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    });\n  });\n  on('init', () => {\n    if (swiper.params.pagination.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      render();\n      update();\n    }\n  });\n  on('activeIndexChange', () => {\n    if (typeof swiper.snapIndex === 'undefined') {\n      update();\n    }\n  });\n  on('snapIndexChange', () => {\n    update();\n  });\n  on('snapGridLengthChange', () => {\n    render();\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.pagination.lockClass));\n    }\n  });\n  on('lock unlock', () => {\n    update();\n  });\n  on('click', (_s, e) => {\n    const targetEl = e.target;\n    let {\n      el\n    } = swiper.pagination;\n    if (!Array.isArray(el)) el = [el].filter(element => !!element);\n    if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && el && el.length > 0 && !targetEl.classList.contains(swiper.params.pagination.bulletClass)) {\n      if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;\n      const isHidden = el[0].classList.contains(swiper.params.pagination.hiddenClass);\n      if (isHidden === true) {\n        emit('paginationShow');\n      } else {\n        emit('paginationHide');\n      }\n      el.forEach(subEl => subEl.classList.toggle(swiper.params.pagination.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.remove(swiper.params.pagination.paginationDisabledClass));\n    }\n    init();\n    render();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.add(swiper.params.pagination.paginationDisabledClass));\n    }\n    destroy();\n  };\n  Object.assign(swiper.pagination, {\n    enable,\n    disable,\n    render,\n    update,\n    init,\n    destroy\n  });\n}","export default function classesToSelector(classes = '') {\n  return `.${classes.trim().replace(/([\\.:!+\\/])/g, '\\\\$1') // eslint-disable-line\n  .replace(/ /g, '.')}`;\n}","import { getDocument } from 'ssr-window';\nimport { createElement, elementOffset, nextTick } from '../../shared/utils.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Scrollbar({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  let isTouched = false;\n  let timeout = null;\n  let dragTimeout = null;\n  let dragStartPos;\n  let dragSize;\n  let trackSize;\n  let divider;\n  extendParams({\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n      scrollbarDisabledClass: 'swiper-scrollbar-disabled',\n      horizontalClass: `swiper-scrollbar-horizontal`,\n      verticalClass: `swiper-scrollbar-vertical`\n    }\n  });\n  swiper.scrollbar = {\n    el: null,\n    dragEl: null\n  };\n  function setTranslate() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n    const progress = swiper.params.loop ? swiper.progressLoop : swiper.progress;\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.transform = `translate3d(${newPos}px, 0, 0)`;\n      dragEl.style.width = `${newSize}px`;\n    } else {\n      dragEl.style.transform = `translate3d(0px, ${newPos}px, 0)`;\n      dragEl.style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(timeout);\n      el.style.opacity = 1;\n      timeout = setTimeout(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n  }\n  function setTransition(duration) {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.dragEl.style.transitionDuration = `${duration}ms`;\n  }\n  function updateSize() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    dragEl.style.width = '';\n    dragEl.style.height = '';\n    trackSize = swiper.isHorizontal() ? el.offsetWidth : el.offsetHeight;\n    divider = swiper.size / (swiper.virtualSize + swiper.params.slidesOffsetBefore - (swiper.params.centeredSlides ? swiper.snapGrid[0] : 0));\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.width = `${dragSize}px`;\n    } else {\n      dragEl.style.height = `${dragSize}px`;\n    }\n    if (divider >= 1) {\n      el.style.display = 'none';\n    } else {\n      el.style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      el.style.opacity = 0;\n    }\n    if (swiper.params.watchOverflow && swiper.enabled) {\n      scrollbar.el.classList[swiper.isLocked ? 'add' : 'remove'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function getPointerPosition(e) {\n    return swiper.isHorizontal() ? e.clientX : e.clientY;\n  }\n  function setDragPosition(e) {\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    let positionRatio;\n    positionRatio = (getPointerPosition(e) - elementOffset(el)[swiper.isHorizontal() ? 'left' : 'top'] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n    const position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  function onDragStart(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    isTouched = true;\n    dragStartPos = e.target === dragEl ? getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n    e.preventDefault();\n    e.stopPropagation();\n    wrapperEl.style.transitionDuration = '100ms';\n    dragEl.style.transitionDuration = '100ms';\n    setDragPosition(e);\n    clearTimeout(dragTimeout);\n    el.style.transitionDuration = '0ms';\n    if (params.hide) {\n      el.style.opacity = 1;\n    }\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = 'none';\n    }\n    emit('scrollbarDragStart', e);\n  }\n  function onDragMove(e) {\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    if (!isTouched) return;\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    setDragPosition(e);\n    wrapperEl.style.transitionDuration = '0ms';\n    el.style.transitionDuration = '0ms';\n    dragEl.style.transitionDuration = '0ms';\n    emit('scrollbarDragMove', e);\n  }\n  function onDragEnd(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    if (!isTouched) return;\n    isTouched = false;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = '';\n      wrapperEl.style.transitionDuration = '';\n    }\n    if (params.hide) {\n      clearTimeout(dragTimeout);\n      dragTimeout = nextTick(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n    emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  }\n  function events(method) {\n    const {\n      scrollbar,\n      params\n    } = swiper;\n    const el = scrollbar.el;\n    if (!el) return;\n    const target = el;\n    const activeListener = params.passiveListeners ? {\n      passive: false,\n      capture: false\n    } : false;\n    const passiveListener = params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    if (!target) return;\n    const eventMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n    target[eventMethod]('pointerdown', onDragStart, activeListener);\n    document[eventMethod]('pointermove', onDragMove, activeListener);\n    document[eventMethod]('pointerup', onDragEnd, passiveListener);\n  }\n  function enableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('on');\n  }\n  function disableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('off');\n  }\n  function init() {\n    const {\n      scrollbar,\n      el: swiperEl\n    } = swiper;\n    swiper.params.scrollbar = createElementIfNotDefined(swiper, swiper.originalParams.scrollbar, swiper.params.scrollbar, {\n      el: 'swiper-scrollbar'\n    });\n    const params = swiper.params.scrollbar;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.shadowRoot.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = document.querySelectorAll(params.el);\n    } else if (!el) {\n      el = params.el;\n    }\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && el.length > 1 && swiperEl.querySelectorAll(params.el).length === 1) {\n      el = swiperEl.querySelector(params.el);\n    }\n    if (el.length > 0) el = el[0];\n    el.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    let dragEl;\n    if (el) {\n      dragEl = el.querySelector(`.${swiper.params.scrollbar.dragClass}`);\n      if (!dragEl) {\n        dragEl = createElement('div', swiper.params.scrollbar.dragClass);\n        el.append(dragEl);\n      }\n    }\n    Object.assign(scrollbar, {\n      el,\n      dragEl\n    });\n    if (params.draggable) {\n      enableDraggable();\n    }\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function destroy() {\n    const params = swiper.params.scrollbar;\n    const el = swiper.scrollbar.el;\n    if (el) {\n      el.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    }\n    disableDraggable();\n  }\n  on('init', () => {\n    if (swiper.params.scrollbar.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      updateSize();\n      setTranslate();\n    }\n  });\n  on('update resize observerUpdate lock unlock', () => {\n    updateSize();\n  });\n  on('setTranslate', () => {\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    setTransition(duration);\n  });\n  on('enable disable', () => {\n    const {\n      el\n    } = swiper.scrollbar;\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n    }\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n    init();\n    updateSize();\n    setTranslate();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n    destroy();\n  };\n  Object.assign(swiper.scrollbar, {\n    enable,\n    disable,\n    updateSize,\n    setTranslate,\n    init,\n    destroy\n  });\n}","import { elementChildren } from '../../shared/utils.js';\nexport default function Parallax({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    parallax: {\n      enabled: false\n    }\n  });\n  const setTransform = (el, progress) => {\n    const {\n      rtl\n    } = swiper;\n    const rtlFactor = rtl ? -1 : 1;\n    const p = el.getAttribute('data-swiper-parallax') || '0';\n    let x = el.getAttribute('data-swiper-parallax-x');\n    let y = el.getAttribute('data-swiper-parallax-y');\n    const scale = el.getAttribute('data-swiper-parallax-scale');\n    const opacity = el.getAttribute('data-swiper-parallax-opacity');\n    const rotate = el.getAttribute('data-swiper-parallax-rotate');\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n    if (x.indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if (y.indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n      el.style.opacity = currentOpacity;\n    }\n    let transform = `translate3d(${x}, ${y}, 0px)`;\n    if (typeof scale !== 'undefined' && scale !== null) {\n      const currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n      transform += ` scale(${currentScale})`;\n    }\n    if (rotate && typeof rotate !== 'undefined' && rotate !== null) {\n      const currentRotate = rotate * progress * -1;\n      transform += ` rotate(${currentRotate}deg)`;\n    }\n    el.style.transform = transform;\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      slides,\n      progress,\n      snapGrid\n    } = swiper;\n    elementChildren(el, '[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(subEl => {\n      setTransform(subEl, progress);\n    });\n    slides.forEach((slideEl, slideIndex) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      slideEl.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale], [data-swiper-parallax-rotate]').forEach(subEl => {\n        setTransform(subEl, slideProgress);\n      });\n    });\n  };\n  const setTransition = (duration = swiper.params.speed) => {\n    const {\n      el\n    } = swiper;\n    el.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(parallaxEl => {\n      let parallaxDuration = parseInt(parallaxEl.getAttribute('data-swiper-parallax-duration'), 10) || duration;\n      if (duration === 0) parallaxDuration = 0;\n      parallaxEl.style.transitionDuration = `${parallaxDuration}ms`;\n    });\n  };\n  on('beforeInit', () => {\n    if (!swiper.params.parallax.enabled) return;\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n  });\n  on('init', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTransition', (_swiper, duration) => {\n    if (!swiper.params.parallax.enabled) return;\n    setTransition(duration);\n  });\n}","import { getWindow } from 'ssr-window';\nimport { elementChildren, elementOffset, elementParents, getTranslate } from '../../shared/utils.js';\nexport default function Zoom({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed'\n    }\n  });\n  swiper.zoom = {\n    enabled: false\n  };\n  let currentScale = 1;\n  let isScaling = false;\n  let fakeGestureTouched;\n  let fakeGestureMoved;\n  const evCache = [];\n  const gesture = {\n    originX: 0,\n    originY: 0,\n    slideEl: undefined,\n    slideWidth: undefined,\n    slideHeight: undefined,\n    imageEl: undefined,\n    imageWrapEl: undefined,\n    maxRatio: 3\n  };\n  const image = {\n    isTouched: undefined,\n    isMoved: undefined,\n    currentX: undefined,\n    currentY: undefined,\n    minX: undefined,\n    minY: undefined,\n    maxX: undefined,\n    maxY: undefined,\n    width: undefined,\n    height: undefined,\n    startX: undefined,\n    startY: undefined,\n    touchesStart: {},\n    touchesCurrent: {}\n  };\n  const velocity = {\n    x: undefined,\n    y: undefined,\n    prevPositionX: undefined,\n    prevPositionY: undefined,\n    prevTime: undefined\n  };\n  let scale = 1;\n  Object.defineProperty(swiper.zoom, 'scale', {\n    get() {\n      return scale;\n    },\n    set(value) {\n      if (scale !== value) {\n        const imageEl = gesture.imageEl;\n        const slideEl = gesture.slideEl;\n        emit('zoomChange', value, imageEl, slideEl);\n      }\n      scale = value;\n    }\n  });\n  function getDistanceBetweenTouches() {\n    if (evCache.length < 2) return 1;\n    const x1 = evCache[0].pageX;\n    const y1 = evCache[0].pageY;\n    const x2 = evCache[1].pageX;\n    const y2 = evCache[1].pageY;\n    const distance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n    return distance;\n  }\n  function getScaleOrigin() {\n    if (evCache.length < 2) return {\n      x: null,\n      y: null\n    };\n    const box = gesture.imageEl.getBoundingClientRect();\n    return [(evCache[0].pageX + (evCache[1].pageX - evCache[0].pageX) / 2 - box.x) / currentScale, (evCache[0].pageY + (evCache[1].pageY - evCache[0].pageY) / 2 - box.y) / currentScale];\n  }\n  function getSlideSelector() {\n    return swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  }\n  function eventWithinSlide(e) {\n    const slideSelector = getSlideSelector();\n    if (e.target.matches(slideSelector)) return true;\n    if (swiper.slides.filter(slideEl => slideEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n  function eventWithinZoomContainer(e) {\n    const selector = `.${swiper.params.zoom.containerClass}`;\n    if (e.target.matches(selector)) return true;\n    if ([...swiper.el.querySelectorAll(selector)].filter(containerEl => containerEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n\n  // Events\n  function onGestureStart(e) {\n    if (e.pointerType === 'mouse') {\n      evCache.splice(0, evCache.length);\n    }\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    evCache.push(e);\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureTouched = true;\n    gesture.scaleStart = getDistanceBetweenTouches();\n    if (!gesture.slideEl) {\n      gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      if (!gesture.slideEl) gesture.slideEl = swiper.slides[swiper.activeIndex];\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n      if (!gesture.imageWrapEl) {\n        gesture.imageEl = undefined;\n        return;\n      }\n      gesture.maxRatio = gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    }\n    if (gesture.imageEl) {\n      const [originX, originY] = getScaleOrigin();\n      gesture.originX = originX;\n      gesture.originY = originY;\n      gesture.imageEl.style.transitionDuration = '0ms';\n    }\n    isScaling = true;\n  }\n  function onGestureChange(e) {\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache[pointerIndex] = e;\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureMoved = true;\n    gesture.scaleMove = getDistanceBetweenTouches();\n    if (!gesture.imageEl) {\n      return;\n    }\n    zoom.scale = gesture.scaleMove / gesture.scaleStart * currentScale;\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = gesture.maxRatio - 1 + (zoom.scale - gesture.maxRatio + 1) ** 0.5;\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = params.minRatio + 1 - (params.minRatio - zoom.scale + 1) ** 0.5;\n    }\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function onGestureEnd(e) {\n    if (!eventWithinSlide(e)) return;\n    if (e.pointerType === 'mouse' && e.type === 'pointerout') return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache.splice(pointerIndex, 1);\n    if (!fakeGestureTouched || !fakeGestureMoved) {\n      return;\n    }\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    if (!gesture.imageEl) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.imageEl.style.transitionDuration = `${swiper.params.speed}ms`;\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n    currentScale = zoom.scale;\n    isScaling = false;\n    if (zoom.scale > 1 && gesture.slideEl) {\n      gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    } else if (zoom.scale <= 1 && gesture.slideEl) {\n      gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    }\n    if (zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n      gesture.slideEl = undefined;\n    }\n  }\n  function onTouchStart(e) {\n    const device = swiper.device;\n    if (!gesture.imageEl) return;\n    if (image.isTouched) return;\n    if (device.android && e.cancelable) e.preventDefault();\n    image.isTouched = true;\n    const event = evCache.length > 0 ? evCache[0] : e;\n    image.touchesStart.x = event.pageX;\n    image.touchesStart.y = event.pageY;\n  }\n  function onTouchMove(e) {\n    if (!eventWithinSlide(e) || !eventWithinZoomContainer(e)) return;\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !gesture.slideEl) return;\n    if (!image.isMoved) {\n      image.width = gesture.imageEl.offsetWidth;\n      image.height = gesture.imageEl.offsetHeight;\n      image.startX = getTranslate(gesture.imageWrapEl, 'x') || 0;\n      image.startY = getTranslate(gesture.imageWrapEl, 'y') || 0;\n      gesture.slideWidth = gesture.slideEl.offsetWidth;\n      gesture.slideHeight = gesture.slideEl.offsetHeight;\n      gesture.imageWrapEl.style.transitionDuration = '0ms';\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.touchesCurrent.x = evCache.length > 0 ? evCache[0].pageX : e.pageX;\n    image.touchesCurrent.y = evCache.length > 0 ? evCache[0].pageY : e.pageY;\n    const touchesDiff = Math.max(Math.abs(image.touchesCurrent.x - image.touchesStart.x), Math.abs(image.touchesCurrent.y - image.touchesStart.y));\n    if (touchesDiff > 5) {\n      swiper.allowClick = false;\n    }\n    if (!image.isMoved && !isScaling) {\n      if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\n        image.isTouched = false;\n        return;\n      }\n      if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    if (e.cancelable) {\n      e.preventDefault();\n    }\n    e.stopPropagation();\n    image.isMoved = true;\n    const scaleRatio = (zoom.scale - currentScale) / (gesture.maxRatio - swiper.params.zoom.minRatio);\n    const {\n      originX,\n      originY\n    } = gesture;\n    image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX + scaleRatio * (image.width - originX * 2);\n    image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY + scaleRatio * (image.height - originY * 2);\n    if (image.currentX < image.minX) {\n      image.currentX = image.minX + 1 - (image.minX - image.currentX + 1) ** 0.8;\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = image.maxX - 1 + (image.currentX - image.maxX + 1) ** 0.8;\n    }\n    if (image.currentY < image.minY) {\n      image.currentY = image.minY + 1 - (image.minY - image.currentY + 1) ** 0.8;\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = image.maxY - 1 + (image.currentY - image.maxY + 1) ** 0.8;\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTouchEnd() {\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n    gesture.imageWrapEl.style.transitionDuration = `${momentumDuration}ms`;\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTransitionEnd() {\n    const zoom = swiper.zoom;\n    if (gesture.slideEl && swiper.activeIndex !== swiper.slides.indexOf(gesture.slideEl)) {\n      if (gesture.imageEl) {\n        gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n      }\n      if (gesture.imageWrapEl) {\n        gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n      }\n      gesture.slideEl.classList.remove(`${swiper.params.zoom.zoomedSlideClass}`);\n      zoom.scale = 1;\n      currentScale = 1;\n      gesture.slideEl = undefined;\n      gesture.imageEl = undefined;\n      gesture.imageWrapEl = undefined;\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n  }\n  function zoomIn(e) {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (e && e.target) {\n        gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      }\n      if (!gesture.slideEl) {\n        if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n          gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n        } else {\n          gesture.slideEl = swiper.slides[swiper.activeIndex];\n        }\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.touchAction = 'none';\n    }\n    gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.pageX;\n      touchY = e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n    const forceZoomRatio = typeof e === 'number' ? e : null;\n    if (currentScale === 1 && forceZoomRatio) {\n      touchX = undefined;\n      touchY = undefined;\n    }\n    zoom.scale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    currentScale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    if (e && !(currentScale === 1 && forceZoomRatio)) {\n      slideWidth = gesture.slideEl.offsetWidth;\n      slideHeight = gesture.slideEl.offsetHeight;\n      offsetX = elementOffset(gesture.slideEl).left + window.scrollX;\n      offsetY = elementOffset(gesture.slideEl).top + window.scrollY;\n      diffX = offsetX + slideWidth / 2 - touchX;\n      diffY = offsetY + slideHeight / 2 - touchY;\n      imageWidth = gesture.imageEl.offsetWidth;\n      imageHeight = gesture.imageEl.offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n      translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\n      translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    if (forceZoomRatio && zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = `translate3d(${translateX}px, ${translateY}px,0)`;\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function zoomOut() {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n        gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n      } else {\n        gesture.slideEl = swiper.slides[swiper.activeIndex];\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = '';\n      swiper.wrapperEl.style.touchAction = '';\n    }\n    zoom.scale = 1;\n    currentScale = 1;\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n    gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    gesture.slideEl = undefined;\n    gesture.originX = 0;\n    gesture.originY = 0;\n  }\n\n  // Toggle Zoom\n  function zoomToggle(e) {\n    const zoom = swiper.zoom;\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoomOut();\n    } else {\n      // Zoom In\n      zoomIn(e);\n    }\n  }\n  function getListeners() {\n    const passiveListener = swiper.params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    const activeListenerWithCapture = swiper.params.passiveListeners ? {\n      passive: false,\n      capture: true\n    } : true;\n    return {\n      passiveListener,\n      activeListenerWithCapture\n    };\n  }\n\n  // Attach/Detach Events\n  function enable() {\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.addEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.addEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.addEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.addEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  function disable() {\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n    zoom.enabled = false;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.removeEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.removeEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.removeEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.removeEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  on('init', () => {\n    if (swiper.params.zoom.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    disable();\n  });\n  on('touchStart', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchStart(e);\n  });\n  on('touchEnd', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchEnd(e);\n  });\n  on('doubleTap', (_s, e) => {\n    if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n      zoomToggle(e);\n    }\n  });\n  on('transitionEnd', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n      onTransitionEnd();\n    }\n  });\n  on('slideChange', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n      onTransitionEnd();\n    }\n  });\n  Object.assign(swiper.zoom, {\n    enable,\n    disable,\n    in: zoomIn,\n    out: zoomOut,\n    toggle: zoomToggle\n  });\n}","/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\nimport { elementTransitionEnd, nextTick } from '../../shared/utils.js';\nexport default function Controller({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide' // or 'container'\n    }\n  });\n\n  swiper.controller = {\n    control: undefined\n  };\n  function LinearSpline(x, y) {\n    const binarySearch = function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }();\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];\n    };\n    return this;\n  }\n  function getInterpolateFunction(c) {\n    swiper.controller.spline = swiper.params.loop ? new LinearSpline(swiper.slidesGrid, c.slidesGrid) : new LinearSpline(swiper.snapGrid, c.snapGrid);\n  }\n  function setTranslate(_t, byController) {\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    const Swiper = swiper.constructor;\n    function setControlledTranslate(c) {\n      if (c.destroyed) return;\n\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        if (Number.isNaN(multiplier) || !Number.isFinite(multiplier)) {\n          multiplier = 1;\n        }\n        controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\n      }\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  }\n  function setTransition(duration, byController) {\n    const Swiper = swiper.constructor;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      if (c.destroyed) return;\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        elementTransitionEnd(c.wrapperEl, () => {\n          if (!controlled) return;\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  }\n  function removeSpline() {\n    if (!swiper.controller.control) return;\n    if (swiper.controller.spline) {\n      swiper.controller.spline = undefined;\n      delete swiper.controller.spline;\n    }\n  }\n  on('beforeInit', () => {\n    if (typeof window !== 'undefined' && (\n    // eslint-disable-line\n    typeof swiper.params.controller.control === 'string' || swiper.params.controller.control instanceof HTMLElement)) {\n      const controlElement = document.querySelector(swiper.params.controller.control);\n      if (controlElement && controlElement.swiper) {\n        swiper.controller.control = controlElement.swiper;\n      } else if (controlElement) {\n        const onControllerSwiper = e => {\n          swiper.controller.control = e.detail[0];\n          swiper.update();\n          controlElement.removeEventListener('init', onControllerSwiper);\n        };\n        controlElement.addEventListener('init', onControllerSwiper);\n      }\n      return;\n    }\n    swiper.controller.control = swiper.params.controller.control;\n  });\n  on('update', () => {\n    removeSpline();\n  });\n  on('resize', () => {\n    removeSpline();\n  });\n  on('observerUpdate', () => {\n    removeSpline();\n  });\n  on('setTranslate', (_s, translate, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTranslate(translate, byController);\n  });\n  on('setTransition', (_s, duration, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTransition(duration, byController);\n  });\n  Object.assign(swiper.controller, {\n    setTranslate,\n    setTransition\n  });\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport { createElement, elementIndex } from '../../shared/utils.js';\nexport default function A11y({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n      slideLabelMessage: '{{index}} / {{slidesLength}}',\n      containerMessage: null,\n      containerRoleDescriptionMessage: null,\n      itemRoleDescriptionMessage: null,\n      slideRole: 'group',\n      id: null\n    }\n  });\n  swiper.a11y = {\n    clicked: false\n  };\n  let liveRegion = null;\n  function notify(message) {\n    const notification = liveRegion;\n    if (notification.length === 0) return;\n    notification.innerHTML = '';\n    notification.innerHTML = message;\n  }\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function getRandomNumber(size = 16) {\n    const randomChar = () => Math.round(16 * Math.random()).toString(16);\n    return 'x'.repeat(size).replace(/x/g, randomChar);\n  }\n  function makeElFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '0');\n    });\n  }\n  function makeElNotFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '-1');\n    });\n  }\n  function addElRole(el, role) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('role', role);\n    });\n  }\n  function addElRoleDescription(el, description) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-roledescription', description);\n    });\n  }\n  function addElControls(el, controls) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-controls', controls);\n    });\n  }\n  function addElLabel(el, label) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-label', label);\n    });\n  }\n  function addElId(el, id) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('id', id);\n    });\n  }\n  function addElLive(el, live) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-live', live);\n    });\n  }\n  function disableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', true);\n    });\n  }\n  function enableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', false);\n    });\n  }\n  function onEnterOrSpaceKey(e) {\n    if (e.keyCode !== 13 && e.keyCode !== 32) return;\n    const params = swiper.params.a11y;\n    const targetEl = e.target;\n    if (swiper.pagination && swiper.pagination.el && (targetEl === swiper.pagination.el || swiper.pagination.el.contains(e.target))) {\n      if (!e.target.matches(classesToSelector(swiper.params.pagination.bulletClass))) return;\n    }\n    if (swiper.navigation && swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        notify(params.lastSlideMessage);\n      } else {\n        notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        notify(params.firstSlideMessage);\n      } else {\n        notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && targetEl.matches(classesToSelector(swiper.params.pagination.bulletClass))) {\n      targetEl.click();\n    }\n  }\n  function updateNavigation() {\n    if (swiper.params.loop || swiper.params.rewind || !swiper.navigation) return;\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (prevEl) {\n      if (swiper.isBeginning) {\n        disableEl(prevEl);\n        makeElNotFocusable(prevEl);\n      } else {\n        enableEl(prevEl);\n        makeElFocusable(prevEl);\n      }\n    }\n    if (nextEl) {\n      if (swiper.isEnd) {\n        disableEl(nextEl);\n        makeElNotFocusable(nextEl);\n      } else {\n        enableEl(nextEl);\n        makeElFocusable(nextEl);\n      }\n    }\n  }\n  function hasPagination() {\n    return swiper.pagination && swiper.pagination.bullets && swiper.pagination.bullets.length;\n  }\n  function hasClickablePagination() {\n    return hasPagination() && swiper.params.pagination.clickable;\n  }\n  function updatePagination() {\n    const params = swiper.params.a11y;\n    if (!hasPagination()) return;\n    swiper.pagination.bullets.forEach(bulletEl => {\n      if (swiper.params.pagination.clickable) {\n        makeElFocusable(bulletEl);\n        if (!swiper.params.pagination.renderBullet) {\n          addElRole(bulletEl, 'button');\n          addElLabel(bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, elementIndex(bulletEl) + 1));\n        }\n      }\n      if (bulletEl.matches(classesToSelector(swiper.params.pagination.bulletActiveClass))) {\n        bulletEl.setAttribute('aria-current', 'true');\n      } else {\n        bulletEl.removeAttribute('aria-current');\n      }\n    });\n  }\n  const initNavEl = (el, wrapperId, message) => {\n    makeElFocusable(el);\n    if (el.tagName !== 'BUTTON') {\n      addElRole(el, 'button');\n      el.addEventListener('keydown', onEnterOrSpaceKey);\n    }\n    addElLabel(el, message);\n    addElControls(el, wrapperId);\n  };\n  const handlePointerDown = () => {\n    swiper.a11y.clicked = true;\n  };\n  const handlePointerUp = () => {\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        if (!swiper.destroyed) {\n          swiper.a11y.clicked = false;\n        }\n      });\n    });\n  };\n  const handleFocus = e => {\n    if (swiper.a11y.clicked) return;\n    const slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n    if (!slideEl || !swiper.slides.includes(slideEl)) return;\n    const isActive = swiper.slides.indexOf(slideEl) === swiper.activeIndex;\n    const isVisible = swiper.params.watchSlidesProgress && swiper.visibleSlides && swiper.visibleSlides.includes(slideEl);\n    if (isActive || isVisible) return;\n    if (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents) return;\n    if (swiper.isHorizontal()) {\n      swiper.el.scrollLeft = 0;\n    } else {\n      swiper.el.scrollTop = 0;\n    }\n    swiper.slideTo(swiper.slides.indexOf(slideEl), 0);\n  };\n  const initSlides = () => {\n    const params = swiper.params.a11y;\n    if (params.itemRoleDescriptionMessage) {\n      addElRoleDescription(swiper.slides, params.itemRoleDescriptionMessage);\n    }\n    if (params.slideRole) {\n      addElRole(swiper.slides, params.slideRole);\n    }\n    const slidesLength = swiper.slides.length;\n    if (params.slideLabelMessage) {\n      swiper.slides.forEach((slideEl, index) => {\n        const slideIndex = swiper.params.loop ? parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10) : index;\n        const ariaLabelMessage = params.slideLabelMessage.replace(/\\{\\{index\\}\\}/, slideIndex + 1).replace(/\\{\\{slidesLength\\}\\}/, slidesLength);\n        addElLabel(slideEl, ariaLabelMessage);\n      });\n    }\n  };\n  const init = () => {\n    const params = swiper.params.a11y;\n    swiper.el.append(liveRegion);\n\n    // Container\n    const containerEl = swiper.el;\n    if (params.containerRoleDescriptionMessage) {\n      addElRoleDescription(containerEl, params.containerRoleDescriptionMessage);\n    }\n    if (params.containerMessage) {\n      addElLabel(containerEl, params.containerMessage);\n    }\n\n    // Wrapper\n    const wrapperEl = swiper.wrapperEl;\n    const wrapperId = params.id || wrapperEl.getAttribute('id') || `swiper-wrapper-${getRandomNumber(16)}`;\n    const live = swiper.params.autoplay && swiper.params.autoplay.enabled ? 'off' : 'polite';\n    addElId(wrapperEl, wrapperId);\n    addElLive(wrapperEl, live);\n\n    // Slide\n    initSlides();\n\n    // Navigation\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => initNavEl(el, wrapperId, params.nextSlideMessage));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => initNavEl(el, wrapperId, params.prevSlideMessage));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.addEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.addEventListener('focus', handleFocus, true);\n    swiper.el.addEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.addEventListener('pointerup', handlePointerUp, true);\n  };\n  function destroy() {\n    if (liveRegion && liveRegion.length > 0) liveRegion.remove();\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.removeEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.removeEventListener('focus', handleFocus, true);\n    swiper.el.removeEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.removeEventListener('pointerup', handlePointerUp, true);\n  }\n  on('beforeInit', () => {\n    liveRegion = createElement('span', swiper.params.a11y.notificationClass);\n    liveRegion.setAttribute('aria-live', 'assertive');\n    liveRegion.setAttribute('aria-atomic', 'true');\n    if (swiper.isElement) {\n      liveRegion.setAttribute('slot', 'container-end');\n    }\n  });\n  on('afterInit', () => {\n    if (!swiper.params.a11y.enabled) return;\n    init();\n  });\n  on('slidesLengthChange snapGridLengthChange slidesGridLengthChange', () => {\n    if (!swiper.params.a11y.enabled) return;\n    initSlides();\n  });\n  on('fromEdge toEdge afterInit lock unlock', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updateNavigation();\n  });\n  on('paginationUpdate', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updatePagination();\n  });\n  on('destroy', () => {\n    if (!swiper.params.a11y.enabled) return;\n    destroy();\n  });\n}","import { getWindow } from 'ssr-window';\nexport default function History({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    history: {\n      enabled: false,\n      root: '',\n      replaceState: false,\n      key: 'slides',\n      keepQuery: false\n    }\n  });\n  let initialized = false;\n  let paths = {};\n  const slugify = text => {\n    return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n  };\n  const getPathValues = urlOverride => {\n    const window = getWindow();\n    let location;\n    if (urlOverride) {\n      location = new URL(urlOverride);\n    } else {\n      location = window.location;\n    }\n    const pathArray = location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return {\n      key,\n      value\n    };\n  };\n  const setHistory = (key, index) => {\n    const window = getWindow();\n    if (!initialized || !swiper.params.history.enabled) return;\n    let location;\n    if (swiper.params.url) {\n      location = new URL(swiper.params.url);\n    } else {\n      location = window.location;\n    }\n    const slide = swiper.slides[index];\n    let value = slugify(slide.getAttribute('data-history'));\n    if (swiper.params.history.root.length > 0) {\n      let root = swiper.params.history.root;\n      if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);\n      value = `${root}/${key ? `${key}/` : ''}${value}`;\n    } else if (!location.pathname.includes(key)) {\n      value = `${key ? `${key}/` : ''}${value}`;\n    }\n    if (swiper.params.history.keepQuery) {\n      value += location.search;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({\n        value\n      }, null, value);\n    } else {\n      window.history.pushState({\n        value\n      }, null, value);\n    }\n  };\n  const scrollToSlide = (speed, value, runCallbacks) => {\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides[i];\n        const slideHistory = slugify(slide.getAttribute('data-history'));\n        if (slideHistory === value) {\n          const index = swiper.getSlideIndex(slide);\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  };\n  const setHistoryPopState = () => {\n    paths = getPathValues(swiper.params.url);\n    scrollToSlide(swiper.params.speed, paths.value, false);\n  };\n  const init = () => {\n    const window = getWindow();\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    initialized = true;\n    paths = getPathValues(swiper.params.url);\n    if (!paths.key && !paths.value) {\n      if (!swiper.params.history.replaceState) {\n        window.addEventListener('popstate', setHistoryPopState);\n      }\n      return;\n    }\n    scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', setHistoryPopState);\n    }\n  };\n  const destroy = () => {\n    const window = getWindow();\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', setHistoryPopState);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.history.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.history.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n}","import { getWindow, getDocument } from 'ssr-window';\nimport { elementChildren } from '../../shared/utils.js';\nexport default function HashNavigation({\n  swiper,\n  extendParams,\n  emit,\n  on\n}) {\n  let initialized = false;\n  const document = getDocument();\n  const window = getWindow();\n  extendParams({\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false\n    }\n  });\n  const onHashChange = () => {\n    emit('hashChange');\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides[swiper.activeIndex].getAttribute('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.getSlideIndex(elementChildren(swiper.slidesEl, `.${swiper.params.slideClass}[data-hash=\"${newHash}\"], swiper-slide[data-hash=\"${newHash}\"]`)[0]);\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  };\n  const setHash = () => {\n    if (!initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, `#${swiper.slides[swiper.activeIndex].getAttribute('data-hash')}` || '');\n      emit('hashSet');\n    } else {\n      const slide = swiper.slides[swiper.activeIndex];\n      const hash = slide.getAttribute('data-hash') || slide.getAttribute('data-history');\n      document.location.hash = hash || '';\n      emit('hashSet');\n    }\n  };\n  const init = () => {\n    if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) return;\n    initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides[i];\n        const slideHash = slide.getAttribute('data-hash') || slide.getAttribute('data-history');\n        if (slideHash === hash) {\n          const index = swiper.getSlideIndex(slide);\n          swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      window.addEventListener('hashchange', onHashChange);\n    }\n  };\n  const destroy = () => {\n    if (swiper.params.hashNavigation.watchState) {\n      window.removeEventListener('hashchange', onHashChange);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHash();\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHash();\n    }\n  });\n}","/* eslint no-underscore-dangle: \"off\" */\n/* eslint no-use-before-define: \"off\" */\nimport { getDocument } from 'ssr-window';\nexport default function Autoplay({\n  swiper,\n  extendParams,\n  on,\n  emit,\n  params\n}) {\n  swiper.autoplay = {\n    running: false,\n    paused: false,\n    timeLeft: 0\n  };\n  extendParams({\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n      pauseOnMouseEnter: false\n    }\n  });\n  let timeout;\n  let raf;\n  let autoplayDelayTotal = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayDelayCurrent = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayTimeLeft;\n  let autoplayStartTime = new Date().getTime;\n  let wasPaused;\n  let isTouched;\n  let pausedByTouch;\n  let touchStartTimeout;\n  let slideChanged;\n  let pausedByInteraction;\n  function onTransitionEnd(e) {\n    if (!swiper || swiper.destroyed || !swiper.wrapperEl) return;\n    if (e.target !== swiper.wrapperEl) return;\n    swiper.wrapperEl.removeEventListener('transitionend', onTransitionEnd);\n    resume();\n  }\n  const calcTimeLeft = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) {\n      wasPaused = true;\n    } else if (wasPaused) {\n      autoplayDelayCurrent = autoplayTimeLeft;\n      wasPaused = false;\n    }\n    const timeLeft = swiper.autoplay.paused ? autoplayTimeLeft : autoplayStartTime + autoplayDelayCurrent - new Date().getTime();\n    swiper.autoplay.timeLeft = timeLeft;\n    emit('autoplayTimeLeft', timeLeft, timeLeft / autoplayDelayTotal);\n    raf = requestAnimationFrame(() => {\n      calcTimeLeft();\n    });\n  };\n  const getSlideDelay = () => {\n    let activeSlideEl;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      activeSlideEl = swiper.slides.filter(slideEl => slideEl.classList.contains('swiper-slide-active'))[0];\n    } else {\n      activeSlideEl = swiper.slides[swiper.activeIndex];\n    }\n    if (!activeSlideEl) return undefined;\n    const currentSlideDelay = parseInt(activeSlideEl.getAttribute('data-swiper-autoplay'), 10);\n    return currentSlideDelay;\n  };\n  const run = delayForce => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    cancelAnimationFrame(raf);\n    calcTimeLeft();\n    let delay = typeof delayForce === 'undefined' ? swiper.params.autoplay.delay : delayForce;\n    autoplayDelayTotal = swiper.params.autoplay.delay;\n    autoplayDelayCurrent = swiper.params.autoplay.delay;\n    const currentSlideDelay = getSlideDelay();\n    if (!Number.isNaN(currentSlideDelay) && currentSlideDelay > 0 && typeof delayForce === 'undefined') {\n      delay = currentSlideDelay;\n      autoplayDelayTotal = currentSlideDelay;\n      autoplayDelayCurrent = currentSlideDelay;\n    }\n    autoplayTimeLeft = delay;\n    const speed = swiper.params.speed;\n    const proceed = () => {\n      if (!swiper || swiper.destroyed) return;\n      if (swiper.params.autoplay.reverseDirection) {\n        if (!swiper.isBeginning || swiper.params.loop || swiper.params.rewind) {\n          swiper.slidePrev(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, speed, true, true);\n          emit('autoplay');\n        }\n      } else {\n        if (!swiper.isEnd || swiper.params.loop || swiper.params.rewind) {\n          swiper.slideNext(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(0, speed, true, true);\n          emit('autoplay');\n        }\n      }\n      if (swiper.params.cssMode) {\n        autoplayStartTime = new Date().getTime();\n        requestAnimationFrame(() => {\n          run();\n        });\n      }\n    };\n    if (delay > 0) {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        proceed();\n      }, delay);\n    } else {\n      requestAnimationFrame(() => {\n        proceed();\n      });\n    }\n\n    // eslint-disable-next-line\n    return delay;\n  };\n  const start = () => {\n    swiper.autoplay.running = true;\n    run();\n    emit('autoplayStart');\n  };\n  const stop = () => {\n    swiper.autoplay.running = false;\n    clearTimeout(timeout);\n    cancelAnimationFrame(raf);\n    emit('autoplayStop');\n  };\n  const pause = (internal, reset) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    clearTimeout(timeout);\n    if (!internal) {\n      pausedByInteraction = true;\n    }\n    const proceed = () => {\n      emit('autoplayPause');\n      if (swiper.params.autoplay.waitForTransition) {\n        swiper.wrapperEl.addEventListener('transitionend', onTransitionEnd);\n      } else {\n        resume();\n      }\n    };\n    swiper.autoplay.paused = true;\n    if (reset) {\n      if (slideChanged) {\n        autoplayTimeLeft = swiper.params.autoplay.delay;\n      }\n      slideChanged = false;\n      proceed();\n      return;\n    }\n    const delay = autoplayTimeLeft || swiper.params.autoplay.delay;\n    autoplayTimeLeft = delay - (new Date().getTime() - autoplayStartTime);\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop) return;\n    if (autoplayTimeLeft < 0) autoplayTimeLeft = 0;\n    proceed();\n  };\n  const resume = () => {\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop || swiper.destroyed || !swiper.autoplay.running) return;\n    autoplayStartTime = new Date().getTime();\n    if (pausedByInteraction) {\n      pausedByInteraction = false;\n      run(autoplayTimeLeft);\n    } else {\n      run();\n    }\n    swiper.autoplay.paused = false;\n    emit('autoplayResume');\n  };\n  const onVisibilityChange = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    const document = getDocument();\n    if (document.visibilityState === 'hidden') {\n      pausedByInteraction = true;\n      pause(true);\n    }\n    if (document.visibilityState === 'visible') {\n      resume();\n    }\n  };\n  const onPointerEnter = e => {\n    if (e.pointerType !== 'mouse') return;\n    pausedByInteraction = true;\n    pause(true);\n  };\n  const onPointerLeave = e => {\n    if (e.pointerType !== 'mouse') return;\n    if (swiper.autoplay.paused) {\n      resume();\n    }\n  };\n  const attachMouseEvents = () => {\n    if (swiper.params.autoplay.pauseOnMouseEnter) {\n      swiper.el.addEventListener('pointerenter', onPointerEnter);\n      swiper.el.addEventListener('pointerleave', onPointerLeave);\n    }\n  };\n  const detachMouseEvents = () => {\n    swiper.el.removeEventListener('pointerenter', onPointerEnter);\n    swiper.el.removeEventListener('pointerleave', onPointerLeave);\n  };\n  const attachDocumentEvents = () => {\n    const document = getDocument();\n    document.addEventListener('visibilitychange', onVisibilityChange);\n  };\n  const detachDocumentEvents = () => {\n    const document = getDocument();\n    document.removeEventListener('visibilitychange', onVisibilityChange);\n  };\n  on('init', () => {\n    if (swiper.params.autoplay.enabled) {\n      attachMouseEvents();\n      attachDocumentEvents();\n      autoplayStartTime = new Date().getTime();\n      start();\n    }\n  });\n  on('destroy', () => {\n    detachMouseEvents();\n    detachDocumentEvents();\n    if (swiper.autoplay.running) {\n      stop();\n    }\n  });\n  on('beforeTransitionStart', (_s, speed, internal) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (internal || !swiper.params.autoplay.disableOnInteraction) {\n      pause(true, true);\n    } else {\n      stop();\n    }\n  });\n  on('sliderFirstMove', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.params.autoplay.disableOnInteraction) {\n      stop();\n      return;\n    }\n    isTouched = true;\n    pausedByTouch = false;\n    pausedByInteraction = false;\n    touchStartTimeout = setTimeout(() => {\n      pausedByInteraction = true;\n      pausedByTouch = true;\n      pause(true);\n    }, 200);\n  });\n  on('touchEnd', () => {\n    if (swiper.destroyed || !swiper.autoplay.running || !isTouched) return;\n    clearTimeout(touchStartTimeout);\n    clearTimeout(timeout);\n    if (swiper.params.autoplay.disableOnInteraction) {\n      pausedByTouch = false;\n      isTouched = false;\n      return;\n    }\n    if (pausedByTouch && swiper.params.cssMode) resume();\n    pausedByTouch = false;\n    isTouched = false;\n  });\n  on('slideChange', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    slideChanged = true;\n  });\n  Object.assign(swiper.autoplay, {\n    start,\n    stop,\n    pause,\n    resume\n  });\n}","import { getDocument } from 'ssr-window';\nimport { elementChildren, isObject } from '../../shared/utils.js';\nexport default function Thumb({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    thumbs: {\n      swiper: null,\n      multipleActiveThumbs: true,\n      autoScrollOffset: 0,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-thumbs'\n    }\n  });\n  let initialized = false;\n  let swiperCreated = false;\n  swiper.thumbs = {\n    swiper: null\n  };\n  function onThumbClick() {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && clickedSlide.classList.contains(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt(thumbsSwiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      swiper.slideToLoop(slideToIndex);\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n  function init() {\n    const {\n      thumbs: thumbsParams\n    } = swiper.params;\n    if (initialized) return false;\n    initialized = true;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Object.assign(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      Object.assign(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper.update();\n    } else if (isObject(thumbsParams.swiper)) {\n      const thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);\n      Object.assign(thumbsSwiperParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);\n      swiperCreated = true;\n    }\n    swiper.thumbs.swiper.el.classList.add(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', onThumbClick);\n    return true;\n  }\n  function update(initial) {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n    if (!swiper.params.thumbs.multipleActiveThumbs) {\n      thumbsToActivate = 1;\n    }\n    thumbsToActivate = Math.floor(thumbsToActivate);\n    thumbsSwiper.slides.forEach(slideEl => slideEl.classList.remove(thumbActiveClass));\n    if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        elementChildren(thumbsSwiper.slidesEl, `[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).forEach(slideEl => {\n          slideEl.classList.add(thumbActiveClass);\n        });\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        if (thumbsSwiper.slides[swiper.realIndex + i]) {\n          thumbsSwiper.slides[swiper.realIndex + i].classList.add(thumbActiveClass);\n        }\n      }\n    }\n    const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n    const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n    if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n      const currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      let direction;\n      if (thumbsSwiper.params.loop) {\n        const newThumbsSlide = thumbsSwiper.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') === `${swiper.realIndex}`)[0];\n        newThumbsIndex = thumbsSwiper.slides.indexOf(newThumbsSlide);\n        direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\n      } else {\n        newThumbsIndex = swiper.realIndex;\n        direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\n      }\n      if (useOffset) {\n        newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup === 1) {\n          // newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n  }\n  on('beforeInit', () => {\n    const {\n      thumbs\n    } = swiper.params;\n    if (!thumbs || !thumbs.swiper) return;\n    if (typeof thumbs.swiper === 'string' || thumbs.swiper instanceof HTMLElement) {\n      const document = getDocument();\n      const getThumbsElementAndInit = () => {\n        const thumbsElement = typeof thumbs.swiper === 'string' ? document.querySelector(thumbs.swiper) : thumbs.swiper;\n        if (thumbsElement && thumbsElement.swiper) {\n          thumbs.swiper = thumbsElement.swiper;\n          init();\n          update(true);\n        } else if (thumbsElement) {\n          const onThumbsSwiper = e => {\n            thumbs.swiper = e.detail[0];\n            thumbsElement.removeEventListener('init', onThumbsSwiper);\n            init();\n            update(true);\n            thumbs.swiper.update();\n            swiper.update();\n          };\n          thumbsElement.addEventListener('init', onThumbsSwiper);\n        }\n        return thumbsElement;\n      };\n      const watchForThumbsToAppear = () => {\n        if (swiper.destroyed) return;\n        const thumbsElement = getThumbsElementAndInit();\n        if (!thumbsElement) {\n          requestAnimationFrame(watchForThumbsToAppear);\n        }\n      };\n      requestAnimationFrame(watchForThumbsToAppear);\n    } else {\n      init();\n      update(true);\n    }\n  });\n  on('slideChange update resize observerUpdate', () => {\n    update();\n  });\n  on('setTransition', (_s, duration) => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    thumbsSwiper.setTransition(duration);\n  });\n  on('beforeDestroy', () => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    if (swiperCreated) {\n      thumbsSwiper.destroy();\n    }\n  });\n  Object.assign(swiper.thumbs, {\n    init,\n    update\n  });\n}","import { elementTransitionEnd, now } from '../../shared/utils.js';\nexport default function freeMode({\n  swiper,\n  extendParams,\n  emit,\n  once\n}) {\n  extendParams({\n    freeMode: {\n      enabled: false,\n      momentum: true,\n      momentumRatio: 1,\n      momentumBounce: true,\n      momentumBounceRatio: 1,\n      momentumVelocityRatio: 1,\n      sticky: false,\n      minimumVelocity: 0.02\n    }\n  });\n  function onTouchStart() {\n    const translate = swiper.getTranslate();\n    swiper.setTranslate(translate);\n    swiper.setTransition(0);\n    swiper.touchEventsData.velocities.length = 0;\n    swiper.freeMode.onTouchEnd({\n      currentPos: swiper.rtl ? swiper.translate : -swiper.translate\n    });\n  }\n  function onTouchMove() {\n    const {\n      touchEventsData: data,\n      touches\n    } = swiper;\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: now()\n    });\n  }\n  function onTouchEnd({\n    currentPos\n  }) {\n    const {\n      params,\n      wrapperEl,\n      rtlTranslate: rtl,\n      snapGrid,\n      touchEventsData: data\n    } = swiper;\n    // Time diff\n    const touchEndTime = now();\n    const timeDiff = touchEndTime - data.touchStartTime;\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n    if (params.freeMode.momentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeMode.minimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || now() - lastMoveEvent.time > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeMode.momentumVelocityRatio;\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeMode.momentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeMode.momentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeMode.sticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n        if (params.freeMode.sticky) {\n          // If freeMode.sticky is active and the user ends a swipe with a slow-velocity\n          // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n          // It's easy to see this when simulating touch with mouse events. To fix this,\n          // limit single-slide swipes to the default slide duration. This also has the\n          // nice side effect of matching slide speed if the user stopped moving before\n          // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n          // For faster swipes, also apply limits (albeit higher ones).\n          const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n          const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n          if (moveDistance < currentSlideSize) {\n            momentumDuration = params.speed;\n          } else if (moveDistance < 2 * currentSlideSize) {\n            momentumDuration = params.speed * 1.5;\n          } else {\n            momentumDuration = params.speed * 2.5;\n          }\n        }\n      } else if (params.freeMode.sticky) {\n        swiper.slideToClosest();\n        return;\n      }\n      if (params.freeMode.momentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        elementTransitionEnd(wrapperEl, () => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          emit('momentumBounce');\n          swiper.setTransition(params.speed);\n          setTimeout(() => {\n            swiper.setTranslate(afterBouncePosition);\n            elementTransitionEnd(wrapperEl, () => {\n              if (!swiper || swiper.destroyed) return;\n              swiper.transitionEnd();\n            });\n          }, 0);\n        });\n      } else if (swiper.velocity) {\n        emit('_freeModeNoMomentumRelease');\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          elementTransitionEnd(wrapperEl, () => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeMode.sticky) {\n      swiper.slideToClosest();\n      return;\n    } else if (params.freeMode) {\n      emit('_freeModeNoMomentumRelease');\n    }\n    if (!params.freeMode.momentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n  }\n  Object.assign(swiper, {\n    freeMode: {\n      onTouchStart,\n      onTouchMove,\n      onTouchEnd\n    }\n  });\n}","import appendSlide from './methods/appendSlide.js';\nimport prependSlide from './methods/prependSlide.js';\nimport addSlide from './methods/addSlide.js';\nimport removeSlide from './methods/removeSlide.js';\nimport removeAllSlides from './methods/removeAllSlides.js';\nexport default function Manipulation({\n  swiper\n}) {\n  Object.assign(swiper, {\n    appendSlide: appendSlide.bind(swiper),\n    prependSlide: prependSlide.bind(swiper),\n    addSlide: addSlide.bind(swiper),\n    removeSlide: removeSlide.bind(swiper),\n    removeAllSlides: removeAllSlides.bind(swiper)\n  });\n}","export default function appendSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  const appendElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.append(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.append(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) appendElement(slides[i]);\n    }\n  } else {\n    appendElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n}","export default function prependSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  const prependElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.prepend(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.prepend(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) prependElement(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    prependElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}","export default function addSlide(index, slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.recalcSlides();\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides[i];\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) slidesEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    slidesEl.append(slides);\n  }\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    slidesEl.append(slidesBuffer[i]);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function removeSlide(slidesIndexes) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function removeAllSlides() {\n  const swiper = this;\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}","import effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFade({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    fadeEffect: {\n      crossFade: false\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides\n    } = swiper;\n    const params = swiper.params.fadeEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = swiper.slides[i];\n      const offset = slideEl.swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs(slideEl.progress), 0) : 1 + Math.min(Math.max(slideEl.progress, -1), 0);\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.opacity = slideOpacity;\n      targetEl.style.transform = `translate3d(${tx}px, ${ty}px, 0px)`;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'fade',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","export default function effectInit(params) {\n  const {\n    effect,\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams,\n    perspective,\n    recreateShadows,\n    getEffectParams\n  } = params;\n  on('beforeInit', () => {\n    if (swiper.params.effect !== effect) return;\n    swiper.classNames.push(`${swiper.params.containerModifierClass}${effect}`);\n    if (perspective && perspective()) {\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n    }\n    const overwriteParamsResult = overwriteParams ? overwriteParams() : {};\n    Object.assign(swiper.params, overwriteParamsResult);\n    Object.assign(swiper.originalParams, overwriteParamsResult);\n  });\n  on('setTranslate', () => {\n    if (swiper.params.effect !== effect) return;\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    if (swiper.params.effect !== effect) return;\n    setTransition(duration);\n  });\n  on('transitionEnd', () => {\n    if (swiper.params.effect !== effect) return;\n    if (recreateShadows) {\n      if (!getEffectParams || !getEffectParams().slideShadows) return;\n      // remove shadows\n      swiper.slides.forEach(slideEl => {\n        slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => shadowEl.remove());\n      });\n      // create new one\n      recreateShadows();\n    }\n  });\n  let requireUpdateOnVirtual;\n  on('virtualUpdate', () => {\n    if (swiper.params.effect !== effect) return;\n    if (!swiper.slides.length) {\n      requireUpdateOnVirtual = true;\n    }\n    requestAnimationFrame(() => {\n      if (requireUpdateOnVirtual && swiper.slides && swiper.slides.length) {\n        setTranslate();\n        requireUpdateOnVirtual = false;\n      }\n    });\n  });\n}","import { getSlideTransformEl } from './utils.js';\nexport default function effectTarget(effectParams, slideEl) {\n  const transformEl = getSlideTransformEl(slideEl);\n  if (transformEl !== slideEl) {\n    transformEl.style.backfaceVisibility = 'hidden';\n    transformEl.style['-webkit-backface-visibility'] = 'hidden';\n  }\n  return transformEl;\n}","import { elementTransitionEnd } from './utils.js';\nexport default function effectVirtualTransitionEnd({\n  swiper,\n  duration,\n  transformElements,\n  allSlides\n}) {\n  const {\n    activeIndex\n  } = swiper;\n  const getSlide = el => {\n    if (!el.parentElement) {\n      // assume shadow root\n      const slide = swiper.slides.filter(slideEl => slideEl.shadowEl && slideEl.shadowEl === el.parentNode)[0];\n      return slide;\n    }\n    return el.parentElement;\n  };\n  if (swiper.params.virtualTranslate && duration !== 0) {\n    let eventTriggered = false;\n    let transitionEndTarget;\n    if (allSlides) {\n      transitionEndTarget = transformElements;\n    } else {\n      transitionEndTarget = transformElements.filter(transformEl => {\n        const el = transformEl.classList.contains('swiper-slide-transform') ? getSlide(transformEl) : transformEl;\n        return swiper.getSlideIndex(el) === activeIndex;\n      });\n    }\n    transitionEndTarget.forEach(el => {\n      elementTransitionEnd(el, () => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const evt = new window.CustomEvent('transitionend', {\n          bubbles: true,\n          cancelable: true\n        });\n        swiper.wrapperEl.dispatchEvent(evt);\n      });\n    });\n  }\n}","import effectInit from '../../shared/effect-init.js';\nimport { createElement } from '../../shared/utils.js';\nexport default function EffectCube({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94\n    }\n  });\n  const createSlideShadows = (slideEl, progress, isHorizontal) => {\n    let shadowBefore = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}`);\n      slideEl.append(shadowBefore);\n    }\n    if (!shadowAfter) {\n      shadowAfter = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}`);\n      slideEl.append(shadowAfter);\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // create new ones\n    const isHorizontal = swiper.isHorizontal();\n    swiper.slides.forEach(slideEl => {\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      createSlideShadows(slideEl, progress, isHorizontal);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      wrapperEl,\n      slides,\n      width: swiperWidth,\n      height: swiperHeight,\n      rtlTranslate: rtl,\n      size: swiperSize,\n      browser\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl = swiper.slidesEl.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          swiper.slidesEl.append(cubeShadowEl);\n        }\n        cubeShadowEl.style.height = `${swiperWidth}px`;\n      } else {\n        cubeShadowEl = el.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          el.append(cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + round * 4 * swiperSize;\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = 3 * swiperSize + swiperSize * 4 * round;\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = slideIndex * 90 + progress * 90;\n        if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\n      }\n      slideEl.style.transform = transform;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, isHorizontal);\n      }\n    }\n    wrapperEl.style.transformOrigin = `50% 50% -${swiperSize / 2}px`;\n    wrapperEl.style['-webkit-transform-origin'] = `50% 50% -${swiperSize / 2}px`;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl.style.transform = `translate3d(0px, ${swiperWidth / 2 + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`;\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n        const multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        cubeShadowEl.style.transform = `scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${swiperHeight / 2 + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`;\n      }\n    }\n    const zFactor = (browser.isSafari || browser.isWebView) && browser.needPerspectiveFix ? -swiperSize / 2 : 0;\n    wrapperEl.style.transform = `translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`;\n    wrapperEl.style.setProperty('--swiper-cube-translate-z', `${zFactor}px`);\n  };\n  const setTransition = duration => {\n    const {\n      el,\n      slides\n    } = swiper;\n    slides.forEach(slideEl => {\n      slideEl.style.transitionDuration = `${duration}ms`;\n      slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(subEl => {\n        subEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      const shadowEl = el.querySelector('.swiper-cube-shadow');\n      if (shadowEl) shadowEl.style.transitionDuration = `${duration}ms`;\n    }\n  };\n  effectInit({\n    effect: 'cube',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.cubeEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      resistanceRatio: 0,\n      spaceBetween: 0,\n      centeredSlides: false,\n      virtualTranslate: true\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFlip({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true\n    }\n  });\n  const createSlideShadows = (slideEl, progress, params) => {\n    let shadowBefore = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createShadow(params, slideEl, swiper.isHorizontal() ? 'left' : 'top');\n    }\n    if (!shadowAfter) {\n      shadowAfter = createShadow(params, slideEl, swiper.isHorizontal() ? 'right' : 'bottom');\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // Set shadows\n    const params = swiper.params.flipEffect;\n    swiper.slides.forEach(slideEl => {\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      createSlideShadows(slideEl, progress, params);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      rtlTranslate: rtl\n    } = swiper;\n    const params = swiper.params.flipEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, params);\n      }\n      const transform = `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'flip',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.flipEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import { createElement, getSlideTransformEl } from './utils.js';\nexport default function createShadow(params, slideEl, side) {\n  const shadowClass = `swiper-slide-shadow${side ? `-${side}` : ''}`;\n  const shadowContainer = getSlideTransformEl(slideEl);\n  let shadowEl = shadowContainer.querySelector(`.${shadowClass}`);\n  if (!shadowEl) {\n    shadowEl = createElement('div', `swiper-slide-shadow${side ? `-${side}` : ''}`);\n    shadowContainer.append(shadowEl);\n  }\n  return shadowEl;\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCoverflow({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      scale: 1,\n      modifier: 1,\n      slideShadows: true\n    }\n  });\n  const setTranslate = () => {\n    const {\n      width: swiperWidth,\n      height: swiperHeight,\n      slides,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const slideEl = slides[i];\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = slideEl.swiperSlideOffset;\n      const centerOffset = (center - slideOffset - slideSize / 2) / slideSize;\n      const offsetMultiplier = typeof params.modifier === 'function' ? params.modifier(centerOffset) : centerOffset * params.modifier;\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n      let stretch = params.stretch;\n      // Allow percentage to make a relative stretch for responsive sliders\n      if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n        stretch = parseFloat(params.stretch) / 100 * slideSize;\n      }\n      let translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\n      let translateX = isHorizontal ? stretch * offsetMultiplier : 0;\n      let scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier);\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n      if (Math.abs(scale) < 0.001) scale = 0;\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(${scale})`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = slideTransform;\n      slideEl.style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBeforeEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n        let shadowAfterEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n        if (!shadowBeforeEl) {\n          shadowBeforeEl = createShadow(params, slideEl, isHorizontal ? 'left' : 'top');\n        }\n        if (!shadowAfterEl) {\n          shadowAfterEl = createShadow(params, slideEl, isHorizontal ? 'right' : 'bottom');\n        }\n        if (shadowBeforeEl) shadowBeforeEl.style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if (shadowAfterEl) shadowAfterEl.style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n  };\n  effectInit({\n    effect: 'coverflow',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCreative({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    creativeEffect: {\n      limitProgress: 1,\n      shadowPerProgress: false,\n      progressMultiplier: 1,\n      perspective: true,\n      prev: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      },\n      next: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      }\n    }\n  });\n  const getTranslateValue = value => {\n    if (typeof value === 'string') return value;\n    return `${value}px`;\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      wrapperEl,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.creativeEffect;\n    const {\n      progressMultiplier: multiplier\n    } = params;\n    const isCenteredSlides = swiper.params.centeredSlides;\n    if (isCenteredSlides) {\n      const margin = slidesSizesGrid[0] / 2 - swiper.params.slidesOffsetBefore || 0;\n      wrapperEl.style.transform = `translateX(calc(50% - ${margin}px))`;\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideEl.progress, -params.limitProgress), params.limitProgress);\n      let originalProgress = progress;\n      if (!isCenteredSlides) {\n        originalProgress = Math.min(Math.max(slideEl.originalProgress, -params.limitProgress), params.limitProgress);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const t = [swiper.params.cssMode ? -offset - swiper.translate : -offset, 0, 0];\n      const r = [0, 0, 0];\n      let custom = false;\n      if (!swiper.isHorizontal()) {\n        t[1] = t[0];\n        t[0] = 0;\n      }\n      let data = {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        scale: 1,\n        opacity: 1\n      };\n      if (progress < 0) {\n        data = params.next;\n        custom = true;\n      } else if (progress > 0) {\n        data = params.prev;\n        custom = true;\n      }\n      // set translate\n      t.forEach((value, index) => {\n        t[index] = `calc(${value}px + (${getTranslateValue(data.translate[index])} * ${Math.abs(progress * multiplier)}))`;\n      });\n      // set rotates\n      r.forEach((value, index) => {\n        r[index] = data.rotate[index] * Math.abs(progress * multiplier);\n      });\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const translateString = t.join(', ');\n      const rotateString = `rotateX(${r[0]}deg) rotateY(${r[1]}deg) rotateZ(${r[2]}deg)`;\n      const scaleString = originalProgress < 0 ? `scale(${1 + (1 - data.scale) * originalProgress * multiplier})` : `scale(${1 - (1 - data.scale) * originalProgress * multiplier})`;\n      const opacityString = originalProgress < 0 ? 1 + (1 - data.opacity) * originalProgress * multiplier : 1 - (1 - data.opacity) * originalProgress * multiplier;\n      const transform = `translate3d(${translateString}) ${rotateString} ${scaleString}`;\n\n      // Set shadows\n      if (custom && data.shadow || !custom) {\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl && data.shadow) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) {\n          const shadowOpacity = params.shadowPerProgress ? progress * (1 / params.limitProgress) : progress;\n          shadowEl.style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);\n        }\n      }\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n      targetEl.style.opacity = opacityString;\n      if (data.origin) {\n        targetEl.style.transformOrigin = data.origin;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'creative',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => swiper.params.creativeEffect.perspective,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCards({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cardsEffect: {\n      slideShadows: true,\n      rotate: true,\n      perSlideRotate: 2,\n      perSlideOffset: 8\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides,\n      activeIndex\n    } = swiper;\n    const params = swiper.params.cardsEffect;\n    const {\n      startTranslate,\n      isTouched\n    } = swiper.touchEventsData;\n    const currentTranslate = swiper.translate;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideProgress, -4), 4);\n      let offset = slideEl.swiperSlideOffset;\n      if (swiper.params.centeredSlides && !swiper.params.cssMode) {\n        swiper.wrapperEl.style.transform = `translateX(${swiper.minTranslate()}px)`;\n      }\n      if (swiper.params.centeredSlides && swiper.params.cssMode) {\n        offset -= slides[0].swiperSlideOffset;\n      }\n      let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let tY = 0;\n      const tZ = -100 * Math.abs(progress);\n      let scale = 1;\n      let rotate = -params.perSlideRotate * progress;\n      let tXAdd = params.perSlideOffset - Math.abs(progress) * 0.75;\n      const slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;\n      const isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n      const isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n      if (isSwipeToNext || isSwipeToPrev) {\n        const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;\n        rotate += -28 * progress * subProgress;\n        scale += -0.5 * subProgress;\n        tXAdd += 96 * subProgress;\n        tY = `${-25 * subProgress * Math.abs(progress)}%`;\n      }\n      if (progress < 0) {\n        // next\n        tX = `calc(${tX}px + (${tXAdd * Math.abs(progress)}%))`;\n      } else if (progress > 0) {\n        // prev\n        tX = `calc(${tX}px + (-${tXAdd * Math.abs(progress)}%))`;\n      } else {\n        tX = `${tX}px`;\n      }\n      if (!swiper.isHorizontal()) {\n        const prevY = tY;\n        tY = tX;\n        tX = prevY;\n      }\n      const scaleString = progress < 0 ? `${1 + (1 - scale) * progress}` : `${1 - (1 - scale) * progress}`;\n      const transform = `\n        translate3d(${tX}, ${tY}, ${tZ}px)\n        rotateZ(${params.rotate ? rotate : 0}deg)\n        scale(${scaleString})\n      `;\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) shadowEl.style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'cards',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","const menuHomeEl = document.querySelector('.menu__home');\nconst menuShoppingEl = document.querySelector('.menu__shopping');\n\nconst setCurrentPage = () => {\n  const currentPageName = window.location.pathname;\n  // console.log(currentPageName);\n\n  if (\n    currentPageName === '/index.html' ||\n    currentPageName === '/books-project/index.html'\n  ) {\n    menuHomeEl.classList.add('current');\n    return;\n  }\n  menuShoppingEl.classList.add('current');\n};\n\nsetCurrentPage();\n","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"egPES\\\":\\\"shopping-list.8a2317f9.js\\\",\\\"luM9t\\\":\\\"fund1@1x.b30a7f10.png\\\",\\\"3owfJ\\\":\\\"fund1@2x.9de4df69.png\\\",\\\"hYVi5\\\":\\\"fund2@1x.b5817cc1.png\\\",\\\"jTC9K\\\":\\\"fund2@2x.7b2bd102.png\\\",\\\"fviWP\\\":\\\"fund3@1x.6e2f5b67.png\\\",\\\"4tG7J\\\":\\\"fund3@2x.1caa8a5a.png\\\",\\\"hB0H2\\\":\\\"fund4@1x.1ebb8f8e.png\\\",\\\"lCPvm\\\":\\\"fund4@2x.215b18f4.png\\\",\\\"9wdTO\\\":\\\"fund5@1x.5695044b.png\\\",\\\"6sPmo\\\":\\\"fund5@2x.e039e962.png\\\",\\\"c8vcc\\\":\\\"fund6@1x.c6aa65dc.png\\\",\\\"4Xd5G\\\":\\\"fund6@2x.a6d72706.png\\\",\\\"26qM3\\\":\\\"fund7@1x.52902507.png\\\",\\\"bMy2s\\\":\\\"fund7@2x.c8266743.png\\\",\\\"5uB8J\\\":\\\"fund8@1x.e7851bc8.png\\\",\\\"kTuPl\\\":\\\"fund8@2x.2b602f63.png\\\",\\\"7ZCXc\\\":\\\"fund9@1x.78924eac.png\\\",\\\"lLwgo\\\":\\\"fund9@2x.ecb1bae6.png\\\"}\"));"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","$c5d798e332c6a584$var$refs","openAuthorizationBtn","document","querySelector","closeAuthorizationBtn","modalAuthorization","buttonSignUp","buttonSignIn","buttonSubmit","formInputs","inputName","labelName","inputMail","labelMail","inputPassword","labelPassword","$c5d798e332c6a584$var$toggleModal","classList","toggle","addEventListener","remove","add","textContent","innerHTML","value","$9OeKo","parcelRequire","$52650fc44c8b8200$var$scrollUp","$52650fc44c8b8200$var$scrollUpSvgPath","$52650fc44c8b8200$var$pathLength","getTotalLength","style","strokeDasharray","transition","$52650fc44c8b8200$var$getTop","window","pageYOffset","documentElement","scrollTop","$parcel$interopDefault","height","scrollHeight","innerHeight","dashoffset","strokeDashoffset","$52650fc44c8b8200$var$updateDashoffset","scrollTo","top","behavior","$7244391317ff913c$var$FUNC_ERROR_TEXT","$7244391317ff913c$var$NAN","$7244391317ff913c$var$symbolTag","$7244391317ff913c$var$reTrim","$7244391317ff913c$var$reIsBadHex","$7244391317ff913c$var$reIsBinary","$7244391317ff913c$var$reIsOctal","$7244391317ff913c$var$freeParseInt","parseInt","$7244391317ff913c$var$freeGlobal","$parcel$global","$7244391317ff913c$var$freeSelf","self","$7244391317ff913c$var$root","Function","$7244391317ff913c$var$objectToString","prototype","toString","$7244391317ff913c$var$nativeMax","Math","max","$7244391317ff913c$var$nativeMin","min","$7244391317ff913c$var$now","Date","now","$7244391317ff913c$var$debounce","func","wait","options","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","undefined","apply","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","setTimeout","remainingWait","debounced","isInvoking","arguments","this","leadingEdge","$7244391317ff913c$var$toNumber","$7244391317ff913c$var$isObject","cancel","clearTimeout","flush","type","$7244391317ff913c$var$isObjectLike","call","$7244391317ff913c$var$isSymbol","other","valueOf","replace","isBinary","test","slice","module","exports","$d71ba7b93034a5d9$var$switchDayNight","$d71ba7b93034a5d9$var$bookNameArray","querySelectorAll","$d71ba7b93034a5d9$var$addDarkTheme","body","backgroundColor","forEach","book","color","$d71ba7b93034a5d9$var$removeDarkTheme","checked","localStorage","setItem","getItem","$1iSkC","$a1c89e1aadc8bf09$var$supportListEl","$a1c89e1aadc8bf09$var$btnSwiperEl","$a1c89e1aadc8bf09$var$position","$a1c89e1aadc8bf09$var$markupSetFunds","fundArray","map","el","String","padStart","$x6M47","markupCardFund","join","$a1c89e1aadc8bf09$var$swiper","$iaGrY","default","direction","spaceBetween","slidesPerView","rewind","navigation","nextEl","plugins","scrollContainer","update","slideNext","$0f319e028a469a54$export$447284bd0b7b482a","title","url","img","img2","URL","resolve","$063856680ee0854e$export$52e5b057674ef9cf","position","$7xxPi","$d3aa16e5c5539775$var$prototypes","$mPJF1","$jEOyI","$4HaqR","$b4Co2","$jtnqo","$7Q6KL","$lt8Bz","$i1StC","$6Vw97","$5rbog","$5IPB6","$d3aa16e5c5539775$var$extendedDefaults","$d3aa16e5c5539775$var$Swiper","constructor","params","$dNWnP","extend","document1","getDocument","swipers","containerEl","newParams","push","swiper","__swiper__","support","$1gHsq","getSupport","device","$agupX","getDevice","userAgent","browser","$kMnIR","getBrowser","eventsListeners","eventsAnyListeners","modules","__modules__","Array","isArray","allModulesParams","mod","extendParams","$kmZuC","on","bind","once","off","emit","swiperParams","$1AMhv","originalParams","passedParams","eventName","onAny","assign","enabled","classNames","slides","slidesGrid","snapGrid","slidesSizesGrid","isHorizontal","isVertical","activeIndex","realIndex","isBeginning","isEnd","translate","previousTranslate","progress","velocity","animating","cssOverflowAdjustment","trunc","allowSlideNext","allowSlidePrev","touchEventsData","isTouched","isMoved","allowTouchCallbacks","touchStartTime","isScrolling","currentTranslate","startTranslate","allowThresholdMove","focusableElements","lastClickTime","clickTimeout","velocities","allowMomentumBounce","startMoving","evCache","allowClick","allowTouchMove","touches","startX","startY","currentX","currentY","diff","imagesToLoad","imagesLoaded","init","getSlideIndex","slideEl","slidesEl","elementChildren","slideClass","firstSlideIndex","elementIndex","getSlideIndexByData","index","filter","getAttribute","recalcSlides","enable","grabCursor","setGrabCursor","disable","unsetGrabCursor","setProgress","speed","minTranslate","current","maxTranslate","translateTo","updateActiveIndex","updateSlidesClasses","emitContainerClasses","_emitClasses","cls","className","split","indexOf","containerModifierClass","getSlideClasses","destroyed","emitSlidesClasses","updates","slidesPerViewDynamic","view","exact","size","swiperSize","spv","centeredSlides","breakLoop","slideSize","swiperSlideSize","setTranslate","translateValue","rtlTranslate","newTranslate","translated","breakpoints","setBreakpoint","imageEl","complete","$fa3Xa","processLazyPreloader","updateSize","updateSlides","updateProgress","freeMode","autoHeight","updateAutoHeight","slideTo","watchOverflow","checkOverflow","changeDirection","newDirection","needUpdate","currentDirection","width","changeLanguageDirection","rtl","dir","mount","element","mounted","shadowEl","isElement","getWrapperSelector","wrapperClass","trim","wrapperEl","shadowRoot","getWrapper","createElements","createElement","append","toLowerCase","elementStyle","wrongRTL","initialized","addClasses","loop","virtual","initialSlide","slidesBefore","runCallbacksOnInit","loopCreate","attachEvents","e","target","preload","destroy","deleteInstance","cleanStyles","detachEvents","loopDestroy","removeClasses","removeAttribute","slideVisibleClass","slideActiveClass","slideNextClass","slidePrevClass","deleteProps","static","newDefaults","extendedDefaults","defaults","m","installModule","prototypeGroup","protoMethod","use","$kdpim","$c4Sz9","$d3aa16e5c5539775$export$2e2bcd8739ae039","$57d5daab652ed4f7$var$isObject","obj","$57d5daab652ed4f7$export$8b58be045bf06082","src","key","$57d5daab652ed4f7$export$3fdcb9b4d81368d8","removeEventListener","activeElement","blur","nodeName","getElementById","createEvent","initEvent","children","childNodes","setAttribute","getElementsByTagName","createElementNS","importNode","location","hash","host","hostname","href","origin","pathname","protocol","search","$57d5daab652ed4f7$export$f65ca476c09acec0","doc","$57d5daab652ed4f7$export$8582633f185c62bb","navigator","history","replaceState","pushState","go","back","CustomEvent","getComputedStyle","getPropertyValue","Image","screen","matchMedia","requestAnimationFrame","callback","cancelAnimationFrame","$57d5daab652ed4f7$export$38b2d434cce3ea22","win","$a0cd23a932383e06$export$8694e5c03a4df8e6","object","$a0cd23a932383e06$export$bdd553fddd433dcb","delay","$a0cd23a932383e06$export$461939dd4422153","$a0cd23a932383e06$export$5ec402b7fcf74398","axis","window1","getWindow","matrix","curTransform","transformMatrix","curStyle","currentStyle","$a0cd23a932383e06$export$3735103072e4a80","WebKitCSSMatrix","transform","webkitTransform","a","MozTransform","OTransform","MsTransform","msTransform","m41","parseFloat","m42","$a0cd23a932383e06$export$a6cdc56e425d0d0a","o","$a0cd23a932383e06$export$8b58be045bf06082","to","noExtend","nextSource","node","HTMLElement","nodeType","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","$a0cd23a932383e06$export$a607267f322101fd","varName","varValue","setProperty","$a0cd23a932383e06$export$a5dd2b4b1a116d6d","targetPosition","side","startPosition","startTime","duration","scrollSnapType","cssModeFrameID","isOutOfBound","animate","getTime","easeProgress","cos","PI","currentPosition","overflow","$a0cd23a932383e06$export$616841b86f802685","$a0cd23a932383e06$export$eb846d859f2895e6","selector","matches","$a0cd23a932383e06$export$c8a8987d4410bf2d","tag","classes","$a0cd23a932383e06$export$d7820ec56f35bbaa","box","getBoundingClientRect","clientTop","clientLeft","scrollY","scrollLeft","scrollX","left","$a0cd23a932383e06$export$392b9fa9626e91e0","prevEls","previousElementSibling","prev","$a0cd23a932383e06$export$b245807c30cf5df8","nextEls","nextElementSibling","next","$a0cd23a932383e06$export$4184470d4bd0f986","prop","$a0cd23a932383e06$export$371885c503a01623","child","previousSibling","$a0cd23a932383e06$export$aedc7b608ca8e855","parents","parent","parentElement","$a0cd23a932383e06$export$6b974c5889da0bb5","fireCallBack","$a0cd23a932383e06$export$863f37913038cf77","includeMargins","offsetWidth","$0ec8fed4d94b7d0e$var$support","$0ec8fed4d94b7d0e$export$d61c7b85ff180578","smoothScroll","touch","DocumentTouch","$0ec8fed4d94b7d0e$var$calcSupport","$7792fe51e58fd98a$var$deviceCached","$7792fe51e58fd98a$export$30c823bc834d6ab4","overrides","platform","ua","ios","android","screenWidth","screenHeight","match","ipad","ipod","iphone","windows","macos","os","$7792fe51e58fd98a$var$calcDevice","$f20ab12260e3c8aa$var$browser","$f20ab12260e3c8aa$export$89e15fc796a4a429","needPerspectiveFix","isSafari","includes","major","minor","num","Number","isWebView","$f20ab12260e3c8aa$var$calcBrowser","$eb78a4a6fe62148c$export$2e2bcd8739ae039","observer","animationFrame","resizeHandler","orientationChangeHandler","resizeObserver","ResizeObserver","entries","newWidth","newHeight","contentBoxSize","contentRect","inlineSize","blockSize","observe","unobserve","$8cb02f6e7ce8fb4d$export$2e2bcd8739ae039","observers","attach","MutationObserver","WebkitMutationObserver","mutations","__preventObserver__","observerUpdate","attributes","childList","characterData","observeParents","observeSlideChildren","containerParents","elementParents","disconnect","splice","$044a2fc60b096a26$export$2e2bcd8739ae039","events","handler","priority","method","event","onceHandler","__emitterProxy","offAny","eventHandler","data","context","unshift","$2nlfG","$e4f8f8ad9cb19e91$export$2e2bcd8739ae039","$aafDk","$jMtU7","$kPOBn","$8OSjY","$hBtS3","$29hok","$lCVGa","$3EEt9","$1bae36ef23f50f9c$export$2e2bcd8739ae039","clientWidth","clientHeight","isNaN","$7666f706306747b4$export$2e2bcd8739ae039","getDirectionLabel","property","marginRight","getDirectionPropertyValue","label","isVirtual","previousSlidesLength","slidesLength","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidePosition","prevSlideSize","virtualSize","marginLeft","marginBottom","marginTop","cssMode","setCSSProperty","gridEnabled","grid","rows","initSlides","shouldResetSlideSize","slide","updateSlide","slideStyles","currentTransform","currentWebKitTransform","roundLengths","elementOuterSize","paddingLeft","paddingRight","boxSizing","floor","abs","slidesPerGroup","slidesPerGroupSkip","effect","setWrapperSize","updateWrapperSize","newSlidesGrid","slidesGridItem","groups","ceil","slidesAfter","groupSize","_","slideIndex","centeredSlidesBounds","allSlidesSize","slideSizeValue","maxSnap","snap","centerInsufficientSlides","allSlidesOffset","snapIndex","addToSnapGrid","addToSlidesGrid","v","watchSlidesProgress","updateSlidesOffset","backFaceHiddenClass","hasClassBackfaceClassAdded","contains","maxBackfaceHiddenSlides","$e669b25e9df72d3e$export$2e2bcd8739ae039","activeSlides","setTransition","getSlideByIndex","visibleSlides","offsetHeight","$f2afd2868f8e8bc2$export$2e2bcd8739ae039","minusOffset","offsetLeft","offsetTop","swiperSlideOffset","$66bd21459a070ee6$export$2e2bcd8739ae039","offsetCenter","visibleSlidesIndexes","slideOffset","slideProgress","originalSlideProgress","slideBefore","slideAfter","originalProgress","$cd0d10153bc4aa64$export$2e2bcd8739ae039","multiplier","translatesDiff","progressLoop","wasBeginning","wasEnd","isBeginningRounded","isEndRounded","lastSlideIndex","firstSlideTranslate","lastSlideTranslate","translateMax","translateAbs","updateSlidesProgress","$1909e99c7f96a783$export$2e2bcd8739ae039","getFilteredSlide","activeSlide","nextSlide","elementNextAll","prevSlide","elementPrevAll","$fbe9e371bf7fd468$export$2e2bcd8739ae039","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","getVirtualRealIndex","aIndex","normalizeSlideIndex","$fbe9e371bf7fd468$export$81ecffcda7ad6ebb","skip","$b09adb3584f4f5c0$export$54749c0631f34ffc","closest","lazyEl","lazyPreloaderClass","$b09adb3584f4f5c0$var$unlazy","$b09adb3584f4f5c0$export$513ccb98c53b8039","amount","lazyPreloadPrevNext","slideIndexLastInView","$2a947fda846258ea$export$2e2bcd8739ae039","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","$1umi3","$36b34534f351ba31$export$2e2bcd8739ae039","$1vvVW","$jVKXc","$a9I2T","$fzQVA","$1159e22d2ec30d20$export$2e2bcd8739ae039","virtualTranslate","getTranslate","$119175075d742233$export$2e2bcd8739ae039","byController","x","y","newProgress","$03be93aa6759504c$export$2e2bcd8739ae039","$764ce935999ac3a7$export$2e2bcd8739ae039","$b5732e441af1da9c$export$2e2bcd8739ae039","runCallbacks","translateBounds","internal","preventInteractionOnTransition","isH","animateCSSModeScroll","onTranslateToWrapperTransitionEnd","$e2mnO","$80fdd84039bf9f36$export$2e2bcd8739ae039","$C1QMZ","$3QxHx","$a3829d6301edc915$export$2e2bcd8739ae039","transitionDuration","$g81jD","$0724fc2edc847bc2$export$2e2bcd8739ae039","step","$bbde69f506a53967$export$2e2bcd8739ae039","$2cd05ec7ceec4531$export$2e2bcd8739ae039","$VoUIG","$e2d2e56ba51214aa$export$2e2bcd8739ae039","$hma03","$cNUv0","$73yc0","$30lE7","$6K2nc","$k6ufv","$0ac8a65aa579cc54$export$2e2bcd8739ae039","initial","normalizedTranslate","normalizedGrid","normalizedGridNext","transitionStart","transitionEnd","t","_immediateVirtual","_cssModeVirtualInitialSet","onSlideToWrapperTransitionEnd","$ca2c3f7f2b80cb2e$export$2e2bcd8739ae039","newIndex","$9525e32ea72263e1$export$2e2bcd8739ae039","perGroup","slidesPerGroupAuto","increment","loopPreventsSliding","loopFix","_clientLeft","$523356300376327b$export$2e2bcd8739ae039","normalize","val","normalizedSnapGrid","prevSnap","prevSnapIndex","prevIndex","lastIndex","$230229aaaf399bb3$export$2e2bcd8739ae039","$4e88e13af59bc0c1$export$2e2bcd8739ae039","threshold","currentSnap","$ea2bd50b7bab181f$export$2e2bcd8739ae039","slideToIndex","slideSelector","loopedSlides","nextTick","$jAQHU","$5b52a0cd14268ef0$export$2e2bcd8739ae039","$iefk9","$8TQCt","$e43a43ab7da51df1$export$2e2bcd8739ae039","slideRealIndex","$d4556bd6c5a7f2d0$export$2e2bcd8739ae039","activeSlideIndex","byMousewheel","prependSlidesIndexes","appendSlidesIndexes","isNext","isPrev","slidesPrepended","slidesAppended","prepend","currentSlideTranslate","slideToLoop","controller","control","loopParams","c","$67ac46f20fbdf8d4$export$2e2bcd8739ae039","newSlidesOrder","swiperSlideIndex","$8kBkW","$fa12fb2ee5c28987$export$2e2bcd8739ae039","$lGUvJ","$610d2748ae2a3d7a$export$2e2bcd8739ae039","moving","simulateTouch","isLocked","touchEventsTarget","cursor","$fca95b10f60c741c$export$2e2bcd8739ae039","$d20293ed7c4414e4$var$dummyEventAttached","$d20293ed7c4414e4$var$dummyEventListener","$d20293ed7c4414e4$var$events","capture","nested","domMethod","swiperMethod","onTouchStart","passive","onTouchMove","onTouchEnd","preventClicks","preventClicksPropagation","onClick","onScroll","updateOnWindowResize","$i41Or","onLoad","$d20293ed7c4414e4$export$2e2bcd8739ae039","$iDuHK","$hwZYB","$7UVOE","$lI65j","$9A257","$7V4dh","$d913afca7372dc81$export$2e2bcd8739ae039","pointerType","originalEvent","targetEl","which","button","swipingClassHasValue","noSwipingClass","eventPath","composedPath","path","noSwipingSelector","isTargetShadow","noSwiping","base","__closestFrom","assignedSlot","found","getRootNode","$d913afca7372dc81$var$closestElement","swipeHandler","pageX","pageY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","innerWidth","preventDefault","swipeDirection","shouldPreventDefault","touchStartPreventDefault","touchStartForcePreventDefault","isContentEditable","$cc35800f8eced6b5$export$2e2bcd8739ae039","pointerIndex","findIndex","cachedEv","pointerId","targetTouch","preventedByNestedSwiper","prevX","prevY","touchReleaseOnEdges","targetTouches","diffX","diffY","sqrt","touchAngle","atan2","zoom","cancelable","touchMoveStopPropagation","stopPropagation","touchesDiff","previousX","previousY","oneWayMovement","touchRatio","prevTouchesDirection","touchesDirection","isLoop","evt","bubbles","dispatchEvent","loopFixed","disableParentSwiper","resistanceRatio","resistance","followFinger","$5c3a9c649f4b5f25$export$2e2bcd8739ae039","touchEndTime","timeDiff","pathTree","updateClickedSlide","currentPos","stopIndex","rewindFirstIndex","rewindLastIndex","ratio","longSwipesMs","longSwipes","longSwipesRatio","shortSwipes","prevEl","$d26a01a5d69e1b50$var$timeout","$d26a01a5d69e1b50$export$2e2bcd8739ae039","isVirtualLoop","autoplay","running","paused","resume","$6f991739d9bf88be$export$2e2bcd8739ae039","stopImmediatePropagation","$fce26d50c7e61a92$export$2e2bcd8739ae039","$5c411feff72a52ef$export$2e2bcd8739ae039","$6iUdR","$50b100814b3eeec4$export$2e2bcd8739ae039","$kp9jL","$4970091fac3b5d77$var$isGridEnabled","$4970091fac3b5d77$export$2e2bcd8739ae039","breakpoint","getBreakpoint","breakpointsBase","currentBreakpoint","breakpointParams","wasMultiRow","isMultiRow","wasEnabled","fill","wasModuleEnabled","isModuleEnabled","directionChanged","needsReLoop","isEnabled","$edad5ec5e4a0f3c0$export$2e2bcd8739ae039","currentHeight","points","point","minRatio","substr","sort","b","$lHwXw","$42a915ff7a2ae30b$export$2e2bcd8739ae039","$e5Gui","$fcc72e1d6455c726$export$2e2bcd8739ae039","suffixes","prefix","resultClasses","item","$fcc72e1d6455c726$var$prepareClasses","autoheight","centered","$a4227d791ec395d4$export$2e2bcd8739ae039","$3f584f40558f8bb9$export$2e2bcd8739ae039","wasLocked","lastSlideRightEdge","$128e9ae4dc5cc7e1$export$2e2bcd8739ae039","uniqueNavElements","passiveListeners","$ed458fea3043c525$export$2e2bcd8739ae039","moduleParamName","moduleParams","auto","$a38c14293bf6942a$export$2e2bcd8739ae039","checkProps","$a59367f5a43a662f$export$2e2bcd8739ae039","$b3f342b4a3f8a5f2$export$2e2bcd8739ae039","appendElement","tempDOM","$0b71822481728c98$export$2e2bcd8739ae039","prependElement","$5e5e77ec41ddd74a$export$2e2bcd8739ae039","activeIndexBuffer","baseLength","prependSlide","appendSlide","slidesBuffer","currentSlide","$5dc678a0b70a1ea8$export$2e2bcd8739ae039","slidesIndexes","indexToRemove","$9fd743be1d735d66$export$2e2bcd8739ae039","removeSlide","$fe3c58194e0402ae$export$2e2bcd8739ae039","overwriteParams","perspective","recreateShadows","getEffectParams","requireUpdateOnVirtual","overwriteParamsResult","_s","slideShadows","$fac719e250553c76$export$2e2bcd8739ae039","effectParams","transformEl","getSlideTransformEl","backfaceVisibility","$42fdb4152f52aa22$export$2e2bcd8739ae039","transformElements","allSlides","transitionEndTarget","eventTriggered","parentNode","getSlide","elementTransitionEnd","$3a65e8106b617bf7$export$2e2bcd8739ae039","shadowClass","shadowContainer","$8aad853c076397e7$var$menuHomeEl","$8aad853c076397e7$var$menuShoppingEl","currentPageName","$8aad853c076397e7$var$setCurrentPage","register","JSON","parse"],"version":3,"file":"shopping-list.8a2317f9.js.map"}